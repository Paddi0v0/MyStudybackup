Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    hardware_init.o(i.ADC0_init) refers to lks32mc08x_adc.o(i.ADC_StructInit) for ADC_StructInit
    hardware_init.o(i.ADC0_init) refers to lks32mc08x_adc.o(i.ADC_Init) for ADC_Init
    hardware_init.o(i.ADC0_init) refers to signalchain_sample.o(i.ADC_NormalModeCFG) for ADC_NormalModeCFG
    hardware_init.o(i.CMP_init) refers to lks32mc08x_cmp.o(i.CMP_StructInit) for CMP_StructInit
    hardware_init.o(i.CMP_init) refers to lks32mc08x_cmp.o(i.CMP_Init) for CMP_Init
    hardware_init.o(i.Clock_Init) refers to lks32mc08x_sys.o(i.SYS_VolSelModule) for SYS_VolSelModule
    hardware_init.o(i.Clock_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.DAC_init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    hardware_init.o(i.DAC_init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    hardware_init.o(i.DebugPWM_OutputFunction) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hardware_init.o(i.HALL_Perip_init) refers to lks32mc08x_hall.o(i.HALL_StructInit) for HALL_StructInit
    hardware_init.o(i.HALL_Perip_init) refers to lks32mc08x_hall.o(i.HALL_Init) for HALL_Init
    hardware_init.o(i.Hardware_init) refers to lks32mc08x_sys.o(i.DSP_Init) for DSP_Init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.UART_init) for UART_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.MCPWM_init) for MCPWM_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.UTimer_init) for UTimer_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.GPIO_init) for GPIO_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.DAC_init) for DAC_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.PGA_init) for PGA_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.CMP_init) for CMP_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.HALL_Perip_init) for HALL_Perip_init
    hardware_init.o(i.Hardware_init) refers to lks32mc08x_tmp.o(i.TempSensor_Init) for TempSensor_Init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    hardware_init.o(i.Hardware_init) refers to segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) for SEGGER_RTT_ConfigUpBuffer
    hardware_init.o(i.Hardware_init) refers to lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ) for SYS_VolSelModuleEnableIRQ
    hardware_init.o(i.Hardware_init) refers to segger_rtt.o(.bss) for bRttBuf
    hardware_init.o(i.MCPWM0_RegUpdate) refers to global_variable.o(.bss) for struFOC_CurrLoop
    hardware_init.o(i.MCPWM_init) refers to lks32mc08x_mcpwm.o(i.MCPWM_StructInit) for MCPWM_StructInit
    hardware_init.o(i.MCPWM_init) refers to lks32mc08x_mcpwm.o(i.MCPWM_Init) for MCPWM_Init
    hardware_init.o(i.MCPWM_init) refers to global_variable.o(.bss) for mIPD_CtrProc
    hardware_init.o(i.PGA_init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    hardware_init.o(i.Reg_Reset) refers to hardware_init.o(i.Reg_Clr) for Reg_Clr
    hardware_init.o(i.SystemInit) refers to hardware_init.o(i.Clock_Init) for Clock_Init
    hardware_init.o(i.UART_init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hardware_init.o(i.UART_init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hardware_init.o(i.UTimer_init) refers to lks32mc08x_tim.o(i.TIM_TimerStrutInit) for TIM_TimerStrutInit
    hardware_init.o(i.UTimer_init) refers to lks32mc08x_tim.o(i.TIM_TimerInit) for TIM_TimerInit
    hardware_init.o(i.UTimer_init) refers to lks32mc08x_tim.o(i.TIM_TimerCmd) for TIM_TimerCmd
    interrupt.o(i.ADC0_IRQHandler) refers to mc_hall.o(i.Hall_ElecAnglePWM_Process) for Hall_ElecAnglePWM_Process
    interrupt.o(i.ADC0_IRQHandler) refers to foc_drive.o(i.FOC_Model) for FOC_Model
    interrupt.o(i.ADC0_IRQHandler) refers to fault_detection.o(i.FaultCurrentCheck) for FaultCurrentCheck
    interrupt.o(i.ADC0_IRQHandler) refers to powercalculation.o(i.PowerCalc) for PowerCalc
    interrupt.o(i.ADC0_IRQHandler) refers to fault_detection.o(i.CurrentAmplitudeCalc) for CurrentAmplitudeCalc
    interrupt.o(i.ADC0_IRQHandler) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    interrupt.o(i.ADC0_IRQHandler) refers to global_variable.o(.bss) for struFOC_CtrProc
    interrupt.o(i.ADC0_IRQHandler) refers to powercalculation.o(.bss) for struPower
    interrupt.o(i.ADC0_IRQHandler) refers to fault_detection.o(.bss) for struCurrentAmplitude
    interrupt.o(i.ADC0_IRQHandler) refers to fault_detection.o(.data) for struImaxCurrent
    interrupt.o(i.ADC0_IRQHandler) refers to interrupt.o(.data) for Rttstru
    interrupt.o(i.CMP_IRQHandler) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    interrupt.o(i.CMP_IRQHandler) refers to fault_detection.o(.data) for stru_Faults
    interrupt.o(i.HALL_IRQHandler) refers to mc_hall.o(i.HALL_IRQProcess) for HALL_IRQProcess
    interrupt.o(i.HALL_IRQHandler) refers to global_variable.o(.bss) for struHallProcess
    interrupt.o(i.PWRDN_IRQHandler) refers to lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ) for SYS_VolSelModuleIRQ
    interrupt.o(i.UTIMER0_IRQHandler) refers to global_variable.o(.bss) for struTaskScheduler
    system_init.o(i.CurrentOffsetCalibration) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    system_init.o(i.CurrentOffsetCalibration) refers to signalchain_sample.o(i.ADC_NormalModeCFG) for ADC_NormalModeCFG
    system_init.o(i.CurrentOffsetCalibration) refers to global_variable.o(.bss) for struFOC_CurrLoop
    system_init.o(i.CurrentOffsetCalibration) refers to fault_detection.o(.data) for stru_Faults
    system_init.o(i.FluxObserveInit) refers to fluxobserve.o(i.FluxObserveParaCalc) for FluxObserveParaCalc
    system_init.o(i.FluxObserveInit) refers to foc_drive.o(i.FOC_InitstruParam) for FOC_InitstruParam
    system_init.o(i.FluxObserveInit) refers to global_variable.o(.bss) for struFluxOB_Param
    system_init.o(i.FluxObserveInit) refers to global_variable.o(.constdata) for struMotorParam
    system_init.o(i.sys_init) refers to fault_detection.o(i.FaultInit) for FaultInit
    system_init.o(i.sys_init) refers to fault_detection.o(i.FaultRecoverInit) for FaultRecoverInit
    system_init.o(i.sys_init) refers to system_init.o(i.CurrentOffsetCalibration) for CurrentOffsetCalibration
    system_init.o(i.sys_init) refers to system_init.o(i.FluxObserveInit) for FluxObserveInit
    system_init.o(i.sys_init) refers to bemf_check0824.o(i.Bemf_CheckInit) for Bemf_CheckInit
    system_init.o(i.sys_init) refers to mc_hall.o(i.HALL_InitHallMeasure) for HALL_InitHallMeasure
    system_init.o(i.sys_init) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    system_init.o(i.sys_init) refers to global_variable.o(.bss) for struFOC_CtrProc
    system_init.o(i.sys_init) refers to global_variable.o(.constdata) for sVersion
    task_scheduler.o(i.Task_Scheduler) refers to fault_detection.o(i.FaultCheck) for FaultCheck
    task_scheduler.o(i.Task_Scheduler) refers to state_machine.o(i.Sys_State_Machine) for Sys_State_Machine
    task_scheduler.o(i.Task_Scheduler) refers to fluxobserve.o(i.DcVoltPerUnitCalc) for DcVoltPerUnitCalc
    task_scheduler.o(i.Task_Scheduler) refers to mc_hall.o(i.Hall_learn_Process) for Hall_learn_Process
    task_scheduler.o(i.Task_Scheduler) refers to speedscan.o(i.VspSpeedScan) for VspSpeedScan
    task_scheduler.o(i.Task_Scheduler) refers to mc_hall.o(i.Verify_Hall_State) for Verify_Hall_State
    task_scheduler.o(i.Task_Scheduler) refers to global_variable.o(.bss) for struTaskScheduler
    task_scheduler.o(i.Task_Scheduler) refers to fault_detection.o(.data) for stru_Faults
    state_machine.o(i.CurrentLoopAxisD_Set) refers to global_variable.o(.bss) for struFOC_CurrLoop
    state_machine.o(i.CurrentLoopAxisQ_Set) refers to global_variable.o(.bss) for struFOC_CurrLoop
    state_machine.o(i.StateAlign) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateAlign) refers to process_control.o(i.OpenLoopCurRamp) for OpenLoopCurRamp
    state_machine.o(i.StateAlign) refers to global_variable.o(.bss) for struMotorSpeed
    state_machine.o(i.StateAlign) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateBemfDirCheck) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateBemfDirCheck) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateBemfDirCheck) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    state_machine.o(i.StateBemfDirCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateBemfDirCheck) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateBemfDirCheck) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateBemfDirCheck) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    state_machine.o(i.StateBemfStop) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateBemfStop) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateBemfStop) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateBemfStop) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateCharge) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateCharge) refers to hardware_init.o(i.MCPWM_init) for MCPWM_init
    state_machine.o(i.StateCharge) refers to state_machine.o(i.StateInit) for StateInit
    state_machine.o(i.StateCharge) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateCharge) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StateCharge) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateDirCheck) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateDirCheck) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateDirCheck) refers to global_variable.o(.bss) for struFOC_CurrLoop
    state_machine.o(i.StateDirCheck) refers to fluxobserve.o(.data) for s16UtRohRef
    state_machine.o(i.StateDirCheck) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateFault) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateFault) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateHallRun) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateHallRun) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateHallRun) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    state_machine.o(i.StateHallRun) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    state_machine.o(i.StateHallRun) refers to state_machine.o(i.SpeedLoop_Set) for SpeedLoop_Set
    state_machine.o(i.StateHallRun) refers to foc_drive.o(i.SpeedLoopReg) for SpeedLoopReg
    state_machine.o(i.StateHallRun) refers to state_machine.o(i.CurrentLoopAxisD_Set) for CurrentLoopAxisD_Set
    state_machine.o(i.StateHallRun) refers to state_machine.o(i.CurrentLoopAxisQ_Set) for CurrentLoopAxisQ_Set
    state_machine.o(i.StateHallRun) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateHallRun) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateInit) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateInit) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    state_machine.o(i.StateInit) refers to fluxobserve.o(i.OnTheFlyDetectInit) for OnTheFlyDetectInit
    state_machine.o(i.StateInit) refers to dfltui.o(.text) for __aeabi_ui2d
    state_machine.o(i.StateInit) refers to dmul.o(.text) for __aeabi_dmul
    state_machine.o(i.StateInit) refers to dfixui.o(.text) for __aeabi_d2uiz
    state_machine.o(i.StateInit) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateInit) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateInit) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateInit) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    state_machine.o(i.StateInit) refers to fault_detection.o(i.FaultInit) for FaultInit
    state_machine.o(i.StateInit) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    state_machine.o(i.StateInit) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StateInit) refers to fluxobserve.o(.bss) for AFWR
    state_machine.o(i.StateInit) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateOpen) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    state_machine.o(i.StateOpen) refers to process_control.o(i.SpeedReferenceGen) for SpeedReferenceGen
    state_machine.o(i.StateOpen) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    state_machine.o(i.StateOpen) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateOpen) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateOpen) refers to state_machine.o(i.CurrentLoopAxisD_Set) for CurrentLoopAxisD_Set
    state_machine.o(i.StateOpen) refers to state_machine.o(i.CurrentLoopAxisQ_Set) for CurrentLoopAxisQ_Set
    state_machine.o(i.StateOpen) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StatePosSeek) refers to lib_ipd.o(i.IPD_RotorPosEst) for IPD_RotorPosEst
    state_machine.o(i.StatePosSeek) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    state_machine.o(i.StatePosSeek) refers to hardware_init.o(i.MCPWM_init) for MCPWM_init
    state_machine.o(i.StatePosSeek) refers to global_variable.o(.bss) for mIPD_CtrProc
    state_machine.o(i.StateRun) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateRun) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateRun) refers to state_machine.o(i.SpeedLoop_Set) for SpeedLoop_Set
    state_machine.o(i.StateRun) refers to foc_drive.o(i.SpeedLoopReg) for SpeedLoopReg
    state_machine.o(i.StateRun) refers to state_machine.o(i.CurrentLoopAxisD_Set) for CurrentLoopAxisD_Set
    state_machine.o(i.StateRun) refers to state_machine.o(i.CurrentLoopAxisQ_Set) for CurrentLoopAxisQ_Set
    state_machine.o(i.StateRun) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StateRun) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateStop) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateStop) refers to global_variable.o(.bss) for mOnTheFlyDetect
    state_machine.o(i.StateStop) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.Sys_State_Machine) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateInit) for StateInit
    state_machine.o(i.Sys_State_Machine) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateCharge) for StateCharge
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateBemfDirCheck) for StateBemfDirCheck
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateDirCheck) for StateDirCheck
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StatePosSeek) for StatePosSeek
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateAlign) for StateAlign
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateOpen) for StateOpen
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateRun) for StateRun
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateHallRun) for StateHallRun
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateStop) for StateStop
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateBemfStop) for StateBemfStop
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateFault) for StateFault
    state_machine.o(i.Sys_State_Machine) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.Sys_State_Machine) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.CurrentAmplitudeCalc) refers to fault_detection.o(.bss) for struCurrentAmplitude
    fault_detection.o(i.FaultCheck) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    fault_detection.o(i.FaultCheck) refers to fault_detection.o(i.FaultVoltageCheck) for FaultVoltageCheck
    fault_detection.o(i.FaultCheck) refers to fault_detection.o(.data) for t_nFlagCheck
    fault_detection.o(i.FaultCheck) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fault_detection.o(i.FaultCheck) refers to fault_detection.o(.bss) for struFaultVoltTime
    fault_detection.o(i.FaultCurrentCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultCurrentCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultCurrentCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultEmptyCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultEmptyCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultEmptyCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultInit) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.User2AppVolTrans) for User2AppVolTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    fault_detection.o(i.FaultInit) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultInit) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fault_detection.o(i.FaultInit) refers to fault_detection.o(.data) for struImaxCurrent
    fault_detection.o(i.FaultPhaseCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultPhaseCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultPhaseCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultRecover) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultRecover) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fault_detection.o(i.FaultRecover) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultRecoverInit) refers to app2core.o(i.User2AppVolTrans) for User2AppVolTrans
    fault_detection.o(i.FaultRecoverInit) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultRecoverInit) refers to fault_detection.o(.bss) for struFaultEmptyTime
    fault_detection.o(i.FaultStallCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultStallCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultStallCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultStartCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultStartCheck) refers to global_variable.o(.bss) for struFOC_CtrProc
    fault_detection.o(i.FaultStartCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultStartCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultTempCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultTempCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultVoltageCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultVoltageCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultVoltageCheck) refers to fault_detection.o(.data) for stru_Faults
    process_control.o(i.ReadLKS08X_UniqueID) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    powercalculation.o(i.LowPassControl) refers to llsshr.o(.text) for __aeabi_lasr
    powercalculation.o(i.PowerCalc) refers to powercalculation.o(i.LowPassControl) for LowPassControl
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    powercalculation.o(i.PowerLoopInit) refers to powercalculation.o(.bss) for struPower
    powercalculation.o(i.PowerLoopReg) refers to powercalculation.o(i.PowerPIRegulator) for PowerPIRegulator
    powercalculation.o(i.PowerLoopReg) refers to global_variable.o(.bss) for struFOC_CurrLoop
    speedscan.o(i.KEY_Scan) refers to lks32mc08x_gpio.o(i.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    speedscan.o(i.KEY_Scan) refers to global_variable.o(.bss) for struFOC_CtrProc
    speedscan.o(i.VspSpeedScan) refers to dflti.o(.text) for __aeabi_i2d
    speedscan.o(i.VspSpeedScan) refers to cdcmple.o(.text) for __aeabi_cdcmple
    speedscan.o(i.VspSpeedScan) refers to dadd.o(.text) for __aeabi_dsub
    speedscan.o(i.VspSpeedScan) refers to dmul.o(.text) for __aeabi_dmul
    speedscan.o(i.VspSpeedScan) refers to dfixi.o(.text) for __aeabi_d2iz
    speedscan.o(i.VspSpeedScan) refers to fflti.o(.text) for __aeabi_i2f
    speedscan.o(i.VspSpeedScan) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    speedscan.o(i.VspSpeedScan) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    speedscan.o(i.VspSpeedScan) refers to global_variable.o(.bss) for struAppCommData
    speedscan.o(i.VspSpeedScan) refers to fault_detection.o(.data) for stru_Faults
    main.o(i.main) refers to hardware_init.o(i.Hardware_init) for Hardware_init
    main.o(i.main) refers to system_init.o(i.sys_init) for sys_init
    main.o(i.main) refers to task_scheduler.o(i.Task_Scheduler) for Task_Scheduler
    app2core.o(i.App2CoreAngleTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreCurTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreFreqTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreVdcTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreVolTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.Core2AppAngleTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppCurTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppFreqTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppVdcTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppVolTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.User2AppAngleTrans) refers to ffltui.o(.text) for __aeabi_ui2f
    app2core.o(i.User2AppAngleTrans) refers to fmul.o(.text) for __aeabi_fmul
    app2core.o(i.User2AppAngleTrans) refers to ffixi.o(.text) for __aeabi_f2iz
    app2core.o(i.User2AppAngleTrans) refers to global_variable.o(.bss) for struUser2App
    app2core.o(i.User2AppCurTrans) refers to ffltui.o(.text) for __aeabi_ui2f
    app2core.o(i.User2AppCurTrans) refers to fmul.o(.text) for __aeabi_fmul
    app2core.o(i.User2AppCurTrans) refers to ffixi.o(.text) for __aeabi_f2iz
    app2core.o(i.User2AppCurTrans) refers to global_variable.o(.bss) for struUser2App
    app2core.o(i.User2AppFreqTrans) refers to ffltui.o(.text) for __aeabi_ui2f
    app2core.o(i.User2AppFreqTrans) refers to fmul.o(.text) for __aeabi_fmul
    app2core.o(i.User2AppFreqTrans) refers to ffixi.o(.text) for __aeabi_f2iz
    app2core.o(i.User2AppFreqTrans) refers to global_variable.o(.bss) for struUser2App
    app2core.o(i.User2AppVolTrans) refers to f2d.o(.text) for __aeabi_f2d
    app2core.o(i.User2AppVolTrans) refers to dmul.o(.text) for __aeabi_dmul
    app2core.o(i.User2AppVolTrans) refers to ddiv.o(.text) for __aeabi_ddiv
    app2core.o(i.User2AppVolTrans) refers to dfixi.o(.text) for __aeabi_d2iz
    foc_drive.o(i.AdcSampleCal) refers to signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent) for SVPWM_2ShuntGetPhaseCurrent
    foc_drive.o(i.AdcSampleCal) refers to global_variable.o(.bss) for struFluxOB_Param
    foc_drive.o(i.CurrentLoopReg) refers to pid_regulators.o(i.CurrentPIRegulator) for CurrentPIRegulator
    foc_drive.o(i.CurrentLoopReg) refers to fluxobserve.o(i.ModuCircle_Limitation) for ModuCircle_Limitation
    foc_drive.o(i.FOC_InitstruParam) refers to global_variable.o(.constdata) for struFOC_ConstParam
    foc_drive.o(i.FOC_InitstruParam) refers to global_variable.o(.bss) for struFOC_CurrLoop
    foc_drive.o(i.FOC_InitstruParam) refers to hardware_init.o(i.MCPWM0_RegUpdate) for MCPWM0_RegUpdate
    foc_drive.o(i.FOC_Model) refers to foc_drive.o(i.AdcSampleCal) for AdcSampleCal
    foc_drive.o(i.FOC_Model) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    foc_drive.o(i.FOC_Model) refers to bemf_check0824.o(i.Bemf_CheckProcess) for Bemf_CheckProcess
    foc_drive.o(i.FOC_Model) refers to bemf_check0824.o(i.BemfSwitch) for BemfSwitch
    foc_drive.o(i.FOC_Model) refers to onthefly.o(i.OnTheFlyDetectPro) for OnTheFlyDetectPro
    foc_drive.o(i.FOC_Model) refers to fluxobserve.o(i.OpenCloseAngleSwitch) for OpenCloseAngleSwitch
    foc_drive.o(i.FOC_Model) refers to mc_math.o(i.Trig_Functions) for Trig_Functions
    foc_drive.o(i.FOC_Model) refers to fluxobserve.o(i.AutoFieldWeakReg) for AutoFieldWeakReg
    foc_drive.o(i.FOC_Model) refers to foc_drive.o(i.CurrentLoopReg) for CurrentLoopReg
    foc_drive.o(i.FOC_Model) refers to lib_svpwm.o(i.SVPWM_2ShuntGEN) for SVPWM_2ShuntGEN
    foc_drive.o(i.FOC_Model) refers to onthefly.o(i.BrakeStateCheck) for BrakeStateCheck
    foc_drive.o(i.FOC_Model) refers to global_variable.o(.bss) for struFOC_CurrLoop
    foc_drive.o(i.FOC_Model) refers to global_variable.o(.data) for struBemfVolt
    foc_drive.o(i.FOC_Model) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    foc_drive.o(i.FOC_Model) refers to foc_drive.o(.data) for tElectAngle
    foc_drive.o(i.SpeedLoopReg) refers to pid_regulators.o(i.SpeedPIRegulator) for SpeedPIRegulator
    foc_drive.o(i.SpeedLoopReg) refers to global_variable.o(.bss) for struHallProcess
    signalchain_sample.o(i.ADC_NormalModeCFG) refers to lks32mc08x_adc.o(i.ADC_ChannelConfig) for ADC_ChannelConfig
    signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent) refers to memcpya.o(.text) for __aeabi_memcpy
    pid_regulators.o(i.SpeedPIRegulator) refers to llmul.o(.text) for __aeabi_lmul
    mc_hall.o(i.Angle_Init_Process) refers to lib_mc_hall.o(i.closeLoopAnglePLLInit) for closeLoopAnglePLLInit
    mc_hall.o(i.Angle_Init_Process) refers to uidiv.o(.text) for __aeabi_uidivmod
    mc_hall.o(i.Angle_Init_Process) refers to lib_mc_hall.o(i.calc_first_ElectAngle) for calc_first_ElectAngle
    mc_hall.o(i.GetAvrgHallPeriod) refers to uidiv.o(.text) for __aeabi_uidivmod
    mc_hall.o(i.HALL_IRQProcess) refers to lib_mc_hall.o(i.check_hall_state) for check_hall_state
    mc_hall.o(i.HALL_IRQProcess) refers to mc_hall.o(i.GetAvrgHallPeriod) for GetAvrgHallPeriod
    mc_hall.o(i.HALL_IRQProcess) refers to mc_hall.o(i.HALL_Init_Electrical_Angle) for HALL_Init_Electrical_Angle
    mc_hall.o(i.HALL_IRQProcess) refers to mc_hall.o(i.ReadHallState) for ReadHallState
    mc_hall.o(i.HALL_InitHallMeasure) refers to mc_hall.o(i.HALL_Init_Electrical_Angle) for HALL_Init_Electrical_Angle
    mc_hall.o(i.HALL_InitHallMeasure) refers to mc_hall.o(i.hall_comm_VariableInit) for hall_comm_VariableInit
    mc_hall.o(i.HALL_InitHallMeasure) refers to global_variable.o(.bss) for struFOC_CtrProc
    mc_hall.o(i.HALL_InitHallMeasure) refers to mc_hall.o(.constdata) for struHallParamaConst
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to lib_mc_hall.o(i.GetHall_edgeAngle) for GetHall_edgeAngle
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to mc_hall.o(i.Angle_Init_Process) for Angle_Init_Process
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to lib_svpwm.o(i.lowPass_filter) for lowPass_filter
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to dfltui.o(.text) for __aeabi_ui2d
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to dmul.o(.text) for __aeabi_dmul
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to d2f.o(.text) for __aeabi_d2f
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    mc_hall.o(i.Hall_ElecAnglePWM_Process) refers to lib_mc_hall.o(i.closeLoopAnglePLL) for closeLoopAnglePLL
    mc_hall.o(i.Hall_ElecAnglePWM_Process) refers to lib_mc_hall.o(i.reduceToqueAnglePll) for reduceToqueAnglePll
    mc_hall.o(i.Hall_learn_Process) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    mc_hall.o(i.Hall_learn_Process) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    mc_hall.o(i.Hall_learn_Process) refers to lib_mc_hall.o(i.learn_hall_proc) for learn_hall_proc
    mc_hall.o(i.Hall_learn_Process) refers to global_variable.o(.bss) for struHallProcess
    mc_hall.o(i.Verify_Hall_State) refers to mc_hall.o(i.ReadHallState) for ReadHallState
    mc_hall.o(i.Verify_Hall_State) refers to mc_hall.o(i.GetAvrgHallPeriod) for GetAvrgHallPeriod
    mc_hall.o(i.Verify_Hall_State) refers to mc_hall.o(i.HALL_Init_Electrical_Angle) for HALL_Init_Electrical_Angle
    mc_hall.o(i.Verify_Hall_State) refers to lib_mc_hall.o(i.check_hall_state) for check_hall_state
    bemf_check0824.o(i.BemfSwitch) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    bemf_check0824.o(i.BemfSwitch) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    bemf_check0824.o(i.BemfSwitch) refers to fluxobserve.o(.bss) for struFluxOB_Var
    bemf_check0824.o(i.BemfSwitch) refers to global_variable.o(.bss) for struFluxOB_Param
    bemf_check0824.o(i.BemfSwitch) refers to fluxobserve.o(.data) for uMrasTheta_est
    bemf_check0824.o(i.BemfSwitch) refers to global_variable.o(.constdata) for struBoardParam
    bemf_check0824.o(i.Bemf_CheckInit) refers to ffixi.o(.text) for __aeabi_f2iz
    bemf_check0824.o(i.Bemf_CheckInit) refers to fflti.o(.text) for __aeabi_i2f
    bemf_check0824.o(i.Bemf_CheckInit) refers to fdiv.o(.text) for __aeabi_fdiv
    bemf_check0824.o(i.Bemf_CheckInit) refers to f2d.o(.text) for __aeabi_f2d
    bemf_check0824.o(i.Bemf_CheckInit) refers to ddiv.o(.text) for __aeabi_ddiv
    bemf_check0824.o(i.Bemf_CheckInit) refers to dfixi.o(.text) for __aeabi_d2iz
    bemf_check0824.o(i.Bemf_CheckInit) refers to global_variable.o(.constdata) for struBoardParam
    bemf_check0824.o(i.Bemf_CheckProcess) refers to lib_svpwm.o(i.Calc_Atan) for Calc_Atan
    bemf_check0824.o(i.Bemf_CheckProcess) refers to uidiv.o(.text) for __aeabi_uidivmod
    bemf_check0824.o(i.Bemf_CheckProcess) refers to fflti.o(.text) for __aeabi_i2f
    bemf_check0824.o(i.Bemf_CheckProcess) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    bemf_check0824.o(i.Bemf_CheckProcess) refers to lib_svpwm.o(i.lowPass_filter) for lowPass_filter
    bemf_check0824.o(i.Bemf_CheckProcess) refers to global_variable.o(.constdata) for struMotorParam
    lks32mc08x_adc.o(i.ADC_Init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_adc.o(i.ADC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_can.o(i.CAN_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_can.o(i.CAN_Sleep) refers to uidiv.o(.text) for __aeabi_uidivmod
    lks32mc08x_cmp.o(i.CMP_Init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_cmp.o(i.CMP_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    lks32mc08x_dac.o(i.DAC_Init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_dac.o(i.DAC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_dma.o(i.DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    lks32mc08x_dsp.o(i.DSP_CalcCordic) refers to lks32mc08x_sys.o(i.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(i.DSP_CalcCordic) refers to lks32mc08x_dsp.o(.data) for dsp_flg
    lks32mc08x_dsp.o(i.DSP_CalcDivision) refers to lks32mc08x_sys.o(i.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(i.DSP_CalcDivision) refers to lks32mc08x_dsp.o(.data) for dsp_flg
    lks32mc08x_dsp.o(i.DSP_CalcSprt) refers to lks32mc08x_dsp.o(.data) for dsp_flg1
    lks32mc08x_dsp.o(i.DSP_Cmd) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_dsp.o(i.DSP_GetSqrt) refers to lks32mc08x_dsp.o(.data) for dsp_flg2
    lks32mc08x_flash.o(i.EraseSector) refers to lks32mc08x_flash.o(.data) for erase_flag
    lks32mc08x_flash.o(i.ProgramPage) refers to lks32mc08x_flash.o(.data) for progm_flag
    lks32mc08x_flash.o(i.Read_Flash) refers to lks32mc08x_nvr.o(i.Read_NVR) for Read_NVR
    lks32mc08x_flash.o(i.Read_More_Flash) refers to lks32mc08x_flash.o(i.Read_Flash) for Read_Flash
    lks32mc08x_gpio.o(i.GPIO_PinAFConfig) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lks32mc08x_gpio.o(i.GPIO_ResetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_gpio.o(i.GPIO_SetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_hall.o(i.HALL_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_i2c.o(i.I2C_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_i2c.o(i.I2C_Init) refers to lks32mc08x_sys.o(i.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_i2c.o(i.I2C_Init) refers to uldiv.o(.text) for __aeabi_uldivmod
    lks32mc08x_i2c.o(i.I2C_Init) refers to lks32mc08x_i2c.o(i.i2c_dma_init) for i2c_dma_init
    lks32mc08x_i2c.o(i.i2c_dma_delay_over) refers to lks32mc08x_i2c.o(.data) for i2c_dma_state
    lks32mc08x_i2c.o(i.i2c_dma_init) refers to lks32mc08x_dma.o(i.DMA_Init) for DMA_Init
    lks32mc08x_i2c.o(i.i2c_dma_rx) refers to lks32mc08x_i2c.o(i.i2c_dma_delay_over) for i2c_dma_delay_over
    lks32mc08x_i2c.o(i.i2c_dma_rx) refers to lks32mc08x_i2c.o(i.i2c_dma_state_start) for i2c_dma_state_start
    lks32mc08x_i2c.o(i.i2c_dma_state_over) refers to lks32mc08x_i2c.o(.data) for i2c_dma_state
    lks32mc08x_i2c.o(i.i2c_dma_state_start) refers to lks32mc08x_i2c.o(.data) for i2c_dma_state
    lks32mc08x_i2c.o(i.i2c_dma_tx) refers to lks32mc08x_i2c.o(i.i2c_dma_delay_over) for i2c_dma_delay_over
    lks32mc08x_i2c.o(i.i2c_dma_tx) refers to lks32mc08x_i2c.o(i.i2c_dma_state_start) for i2c_dma_state_start
    lks32mc08x_mcpwm.o(i.MCPWM_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_mcpwm.o(i.MCPWM_StructInit) refers to memseta.o(.text) for __aeabi_memclr
    lks32mc08x_spi.o(i.SPI_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_sys.o(i.DSP_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_sys.o(i.SYS_VolSelModule) refers to lks32mc08x_sys.o(i.SoftDelay) for SoftDelay
    lks32mc08x_sys.o(i.SYS_VolSelModule) refers to lks32mc08x_sys.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    lks32mc08x_sys.o(i.SYS_VolSelModule) refers to lks32mc08x_sys.o(.data) for POWER_MODE
    lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ) refers to lks32mc08x_sys.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ) refers to lks32mc08x_sys.o(i.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ) refers to lks32mc08x_sys.o(.data) for POWER_MODE
    lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ) refers to lks32mc08x_sys.o(i.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ) refers to lks32mc08x_sys.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    lks32mc08x_sys.o(i.Switch2HRC) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(i.SoftDelay) for SoftDelay
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_tim.o(i.TIM_ECDInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(i.TIM_TimerInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(i.TIM_TimerInit) refers to lks32mc08x_tim.o(i.TIM_TimerCmd) for TIM_TimerCmd
    lks32mc08x_uart.o(i.UART_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to ldiv.o(.text) for __aeabi_ldivmod
    lks32mc08x_tmp.o(i.GetCurrentTemperature) refers to idiv.o(.text) for __aeabi_idivmod
    lks32mc08x_tmp.o(i.GetCurrentTemperature) refers to lks32mc08x_tmp.o(.data) for m_TempertureCof
    lks32mc08x_tmp.o(i.TempSensor_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_tmp.o(i.TempSensor_Init) refers to lks32mc08x_tmp.o(.data) for m_TempertureCof
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(.text) for Reset_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SysTick_Handler) for SysTick_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER0_IRQHandler) for UTIMER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER1_IRQHandler) for UTIMER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER2_IRQHandler) for UTIMER2_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER3_IRQHandler) for UTIMER3_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER0_IRQHandler) for ENCODER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER1_IRQHandler) for ENCODER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.GPIO_IRQHandler) for GPIO_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.HALL_IRQHandler) for HALL_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SPI0_IRQHandler) for SPI0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.CMP_IRQHandler) for CMP_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.PWRDN_IRQHandler) for PWRDN_IRQHandler
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(.text) refers to hardware_init.o(i.SystemInit) for SystemInit
    startup_lks32mc08x.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_GetKey) refers to segger_rtt.o(i.SEGGER_RTT_Read) for SEGGER_RTT_Read
    segger_rtt.o(i.SEGGER_RTT_HasData) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_HasKey) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_HasKey) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_Init) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutChar) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutChar) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_PutCharSkipNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_Read) refers to segger_rtt.o(i.SEGGER_RTT_ReadNoLock) for SEGGER_RTT_ReadNoLock
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.data) for _aTerminalId
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to strlen.o(.text) for strlen
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._PostTerminalSwitch) for _PostTerminalSwitch
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.data) for _ActiveTerminal
    segger_rtt.o(i.SEGGER_RTT_WaitKey) refers to segger_rtt.o(i.SEGGER_RTT_GetKey) for SEGGER_RTT_GetKey
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(i.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteString) refers to strlen.o(.text) for strlen
    segger_rtt.o(i.SEGGER_RTT_WriteString) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i._DoInit) refers to strcpy.o(.text) for strcpy
    segger_rtt.o(i._DoInit) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i._PostTerminalSwitch) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i._PostTerminalSwitch) refers to segger_rtt.o(.data) for _aTerminalId
    segger_rtt.o(i._WriteBlocking) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i._WriteNoCheck) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt_printf.o(i.SEGGER_RTT_printf) refers to segger_rtt_printf.o(i.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._PrintInt) for _PrintInt
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt_printf.o(i._PrintInt) refers to idiv.o(.text) for __aeabi_idivmod
    segger_rtt_printf.o(i._PrintInt) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i._PrintInt) refers to segger_rtt_printf.o(i._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(i._PrintUnsigned) refers to uidiv.o(.text) for __aeabi_uidivmod
    segger_rtt_printf.o(i._PrintUnsigned) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i._PrintUnsigned) refers to segger_rtt_printf.o(.constdata) for _aV2C
    segger_rtt_printf.o(i._StoreChar) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    lib_svpwm.o(i.Calc_Atan) refers to lib_svpwm.o(.constdata) for .constdata
    lib_svpwm.o(i.SVPWM_1ShuntGEN) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lib_svpwm.o(i.SVPWM_3ShuntGEN) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    fluxobserve.o(i.AutoFieldWeakReg) refers to fluxobserve.o(i.FWLoopPIReg) for FWLoopPIReg
    fluxobserve.o(i.AutoFieldWeakReg) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.AutoFieldWeakReg) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to idiv.o(.text) for __aeabi_idivmod
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to global_variable.o(.bss) for struFluxOB_Param
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.FluxObserveParaCalc) refers to fflti.o(.text) for __aeabi_i2f
    fluxobserve.o(i.FluxObserveParaCalc) refers to fmul.o(.text) for __aeabi_fmul
    fluxobserve.o(i.FluxObserveParaCalc) refers to fdiv.o(.text) for __aeabi_fdiv
    fluxobserve.o(i.FluxObserveParaCalc) refers to ffixi.o(.text) for __aeabi_f2iz
    fluxobserve.o(i.FluxObserveParaCalc) refers to idiv.o(.text) for __aeabi_idivmod
    fluxobserve.o(i.FluxObserveParaCalc) refers to ldiv.o(.text) for __aeabi_ldivmod
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(i.__ARM_common_ll_mulss) for __ARM_common_ll_mulss
    fluxobserve.o(i.FluxObserveParaCalc) refers to llshl.o(.text) for __aeabi_llsl
    fluxobserve.o(i.FluxObserveParaCalc) refers to llmul.o(.text) for __aeabi_lmul
    fluxobserve.o(i.FluxObserveParaCalc) refers to uidiv.o(.text) for __aeabi_uidivmod
    fluxobserve.o(i.FluxObserveParaCalc) refers to dfltui.o(.text) for __aeabi_ui2d
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    fluxobserve.o(i.FluxObserveParaCalc) refers to dfltl.o(.text) for __aeabi_l2d
    fluxobserve.o(i.FluxObserveParaCalc) refers to dmul.o(.text) for __aeabi_dmul
    fluxobserve.o(i.FluxObserveParaCalc) refers to ddiv.o(.text) for __aeabi_ddiv
    fluxobserve.o(i.FluxObserveParaCalc) refers to dfixui.o(.text) for __aeabi_d2uiz
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(i.FindQNum) for FindQNum
    fluxobserve.o(i.FluxObserveParaCalc) refers to global_variable.o(.bss) for struFluxOB_Param
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.ModuCircle_Limitation) refers to mc_math.o(i.Trig_Functions) for Trig_Functions
    fluxobserve.o(i.ModuCircle_Limitation) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fluxobserve.o(i.ModuCircle_Limitation) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.ModuCircle_Limitation) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.OnTheFlyDetectInit) refers to global_variable.o(.bss) for mOnTheFlyDetect
    fluxobserve.o(i.OpenCloseAngleSwitch) refers to global_variable.o(.bss) for struFOC_CtrProc
    fluxobserve.o(i.OpenCloseAngleSwitch) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.OpenCloseAngleSwitch) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.PmsmFluxObIni) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.PmsmFluxObIni) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.PmsmFluxObIni) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fluxobserve.o(i.PmsmFluxObserve) refers to mc_math.o(i.Trig_Functions) for Trig_Functions
    fluxobserve.o(i.PmsmFluxObserve) refers to pid_regulators.o(i.CurrentPIRegulator) for CurrentPIRegulator
    fluxobserve.o(i.PmsmFluxObserve) refers to lib_svpwm.o(i.Calc_Atan) for Calc_Atan
    fluxobserve.o(i.PmsmFluxObserve) refers to global_variable.o(.bss) for struFluxOB_Param
    fluxobserve.o(i.PmsmFluxObserve) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.PmsmFluxObserve) refers to fluxobserve.o(.bss) for .bss
    lib_ipd.o(i.IPD_AngleCalc) refers to lib_ipd.o(i.FindMaxIn3) for FindMaxIn3
    lib_ipd.o(i.IPD_AngleCalc) refers to lib_svpwm.o(i.Calc_Atan) for Calc_Atan
    lib_ipd.o(i.IPD_AngleCalc) refers to global_variable.o(.bss) for mIPD_CtrProc
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.VolPulsePwmSet) for VolPulsePwmSet
    lib_ipd.o(i.IPD_RotorPosEst) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.soft_Trg_ADC) for soft_Trg_ADC
    lib_ipd.o(i.IPD_RotorPosEst) refers to foc_drive.o(i.AdcSampleCal) for AdcSampleCal
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.PoloEstCurSample) for PoloEstCurSample
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.IPD_AngleCalc) for IPD_AngleCalc
    lib_ipd.o(i.IPD_RotorPosEst) refers to global_variable.o(.bss) for struFOC_CurrLoop
    lib_ipd.o(i.PoloEstCurSample) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lib_ipd.o(i.PoloEstCurSample) refers to global_variable.o(.bss) for mIPD_CtrProc
    lib_ipd.o(i.VolPulsePwmSet) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lib_ipd.o(i.VolPulsePwmSet) refers to global_variable.o(.bss) for mIPD_CtrProc
    onthefly.o(i.BrakeStateCheck) refers to global_variable.o(.bss) for struFOC_CurrLoop
    onthefly.o(i.BrakeStateCheck) refers to onthefly.o(.data) for .data
    onthefly.o(i.OnTheFlyDetectPro) refers to global_variable.o(.bss) for mOnTheFlyDetect
    onthefly.o(i.OnTheFlyDetectPro) refers to onthefly.o(.data) for .data
    lib_mc_hall.o(i.GetHall_edgeAngle) refers to lib_mc_hall.o(.data) for .data
    lib_mc_hall.o(i.check_hall_state) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.check_hall_state) refers to lib_mc_hall.o(i.hall_repare_process) for hall_repare_process
    lib_mc_hall.o(i.closeLoopAnglePLLInit) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.closeLoopAnglePLLInit) refers to lib_svpwm.o(i.lowPass_filter) for lowPass_filter
    lib_mc_hall.o(i.hallErrorCheck) refers to lib_mc_hall.o(.data) for .data
    lib_mc_hall.o(i.hall_repare_process) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.learn_hall_proc) refers to foc_drive.o(i.StopMotorImmdly) for StopMotorImmdly
    lib_mc_hall.o(i.learn_hall_proc) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.learn_hall_proc) refers to lib_mc_hall.o(.data) for .data
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000F) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$00000011) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry12b.o(.ARM.Collect$$$$0000000E) for __rt_lib_shutdown_fini
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    llmul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltl.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltl.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cdcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing global_variable.o(.rev16_text), (4 bytes).
    Removing global_variable.o(.revsh_text), (4 bytes).
    Removing hardware_init.o(.rev16_text), (4 bytes).
    Removing hardware_init.o(.revsh_text), (4 bytes).
    Removing hardware_init.o(i.DebugPWM_OutputFunction), (44 bytes).
    Removing hardware_init.o(i.Reg_Clr), (20 bytes).
    Removing hardware_init.o(i.Reg_Reset), (148 bytes).
    Removing hardware_init.o(i.UART0_SENDDATA), (12 bytes).
    Removing hardware_init.o(i.UART1_SENDDATA), (12 bytes).
    Removing hardware_init.o(i.seekPosADCsetting), (48 bytes).
    Removing interrupt.o(.rev16_text), (4 bytes).
    Removing interrupt.o(.revsh_text), (4 bytes).
    Removing interrupt.o(i.SleepTimer_IRQHandler), (4 bytes).
    Removing system_init.o(.rev16_text), (4 bytes).
    Removing system_init.o(.revsh_text), (4 bytes).
    Removing task_scheduler.o(.rev16_text), (4 bytes).
    Removing task_scheduler.o(.revsh_text), (4 bytes).
    Removing state_machine.o(.rev16_text), (4 bytes).
    Removing state_machine.o(.revsh_text), (4 bytes).
    Removing state_machine.o(.data), (4 bytes).
    Removing fault_detection.o(.rev16_text), (4 bytes).
    Removing fault_detection.o(.revsh_text), (4 bytes).
    Removing fault_detection.o(i.FaultEmptyCheck), (104 bytes).
    Removing fault_detection.o(i.FaultPhaseCheck), (196 bytes).
    Removing fault_detection.o(i.FaultRecover), (616 bytes).
    Removing fault_detection.o(i.FaultStallCheck), (288 bytes).
    Removing fault_detection.o(i.FaultStartCheck), (356 bytes).
    Removing fault_detection.o(i.FaultTempCheck), (76 bytes).
    Removing process_control.o(.rev16_text), (4 bytes).
    Removing process_control.o(.revsh_text), (4 bytes).
    Removing process_control.o(i.ReadLKS08X_UniqueID), (48 bytes).
    Removing powercalculation.o(.rev16_text), (4 bytes).
    Removing powercalculation.o(.revsh_text), (4 bytes).
    Removing powercalculation.o(i.DIVCalc), (24 bytes).
    Removing powercalculation.o(i.PowerLimitCalc), (72 bytes).
    Removing powercalculation.o(i.PowerLoopInit), (172 bytes).
    Removing powercalculation.o(i.PowerLoopReg), (64 bytes).
    Removing powercalculation.o(i.PowerPIRegulator), (66 bytes).
    Removing powercalculation.o(i.RampControl), (84 bytes).
    Removing powercalculation.o(i.SpeedLimitCalc), (78 bytes).
    Removing speedscan.o(.rev16_text), (4 bytes).
    Removing speedscan.o(.revsh_text), (4 bytes).
    Removing speedscan.o(i.KEY_Scan), (52 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing mc_math.o(.rev16_text), (4 bytes).
    Removing mc_math.o(.revsh_text), (4 bytes).
    Removing mc_math.o(i.CopyFromBuffer), (28 bytes).
    Removing app2core.o(.rev16_text), (4 bytes).
    Removing app2core.o(.revsh_text), (4 bytes).
    Removing app2core.o(i.App2CoreAngleTrans), (24 bytes).
    Removing app2core.o(i.App2CoreVdcTrans), (24 bytes).
    Removing app2core.o(i.App2CoreVolTrans), (24 bytes).
    Removing app2core.o(i.Core2AppAngleTrans), (24 bytes).
    Removing app2core.o(i.Core2AppCurTrans), (24 bytes).
    Removing app2core.o(i.Core2AppFreqTrans), (24 bytes).
    Removing app2core.o(i.Core2AppVdcTrans), (24 bytes).
    Removing app2core.o(i.Core2AppVolTrans), (24 bytes).
    Removing foc_drive.o(.rev16_text), (4 bytes).
    Removing foc_drive.o(.revsh_text), (4 bytes).
    Removing signalchain_sample.o(.rev16_text), (4 bytes).
    Removing signalchain_sample.o(.revsh_text), (4 bytes).
    Removing pid_regulators.o(i.PI_Regulator), (132 bytes).
    Removing mc_hall.o(.rev16_text), (4 bytes).
    Removing mc_hall.o(.revsh_text), (4 bytes).
    Removing bemf_check0824.o(.rev16_text), (4 bytes).
    Removing bemf_check0824.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_adc.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_adc.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_adc.o(i.ADC_ClearIRQFlag), (6 bytes).
    Removing lks32mc08x_adc.o(i.ADC_GetConversionValue), (264 bytes).
    Removing lks32mc08x_adc.o(i.ADC_GetIRQFlag), (30 bytes).
    Removing lks32mc08x_adc.o(i.ADC_SoftTrgEN), (20 bytes).
    Removing lks32mc08x_can.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_can.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_can.o(i.CAN_GetIRQFlag), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_Init), (76 bytes).
    Removing lks32mc08x_can.o(i.CAN_Manual_Awake), (32 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadALC), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadErrorCode), (44 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadRXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadState), (10 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadTXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReceFramInfor), (20 bytes).
    Removing lks32mc08x_can.o(i.CAN_Receive_Msg), (308 bytes).
    Removing lks32mc08x_can.o(i.CAN_Sleep), (92 bytes).
    Removing lks32mc08x_can.o(i.CAN_StructInit), (24 bytes).
    Removing lks32mc08x_can.o(i.EFF_ID_Filter), (124 bytes).
    Removing lks32mc08x_can.o(i.ID1_Filter_Dual), (208 bytes).
    Removing lks32mc08x_can.o(i.ID2_Filter_Dual), (176 bytes).
    Removing lks32mc08x_can.o(i.My_CAN_Send_Msg), (260 bytes).
    Removing lks32mc08x_can.o(i.SFF_ID_Filter), (124 bytes).
    Removing lks32mc08x_cmp.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_cmp.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_cmp.o(i.CMP_ClearIRQFlag), (28 bytes).
    Removing lks32mc08x_cmp.o(i.CMP_GetIRQFlag), (60 bytes).
    Removing lks32mc08x_dac.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_dac.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_dac.o(i.DAC_Init), (204 bytes).
    Removing lks32mc08x_dac.o(i.DAC_OutputValue), (24 bytes).
    Removing lks32mc08x_dac.o(i.DAC_OutputVoltage), (104 bytes).
    Removing lks32mc08x_dac.o(i.DAC_StructInit), (8 bytes).
    Removing lks32mc08x_dma.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_dma.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_dma.o(i.DMA_CHx_EN), (24 bytes).
    Removing lks32mc08x_dma.o(i.DMA_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_dma.o(i.DMA_GetIRQFlag), (72 bytes).
    Removing lks32mc08x_dma.o(i.DMA_Init), (84 bytes).
    Removing lks32mc08x_dma.o(i.DMA_StructInit), (14 bytes).
    Removing lks32mc08x_dsp.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_dsp.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_CalcCordic), (120 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_CalcDivision), (72 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_CalcSprt), (48 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_Cmd), (14 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_GetSqrt), (44 bytes).
    Removing lks32mc08x_dsp.o(.data), (3 bytes).
    Removing lks32mc08x_exti.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_exti.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_GetIRQFlag), (52 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_Trigger_Config), (80 bytes).
    Removing lks32mc08x_flash.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_flash.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_flash.o(i.EraseSector), (176 bytes).
    Removing lks32mc08x_flash.o(i.ProgramPage), (300 bytes).
    Removing lks32mc08x_flash.o(i.Read_Flash), (60 bytes).
    Removing lks32mc08x_flash.o(i.Read_More_Flash), (76 bytes).
    Removing lks32mc08x_flash.o(.data), (8 bytes).
    Removing lks32mc08x_gpio.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_gpio.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_LockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputDataBit), (20 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadOutputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit), (20 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ResetBits), (18 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_SetBits), (18 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_UnlockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_Write), (8 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_WriteBit), (20 bytes).
    Removing lks32mc08x_hall.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_hall.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_hall.o(i.HALL_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetCaptureValue), (16 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetCount), (12 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetFilterValue), (16 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetIRQFlag), (16 bytes).
    Removing lks32mc08x_hall.o(i.HALL_WIDCount), (12 bytes).
    Removing lks32mc08x_i2c.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_i2c.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_Init), (160 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_ReadData), (8 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_SendData), (4 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_StructInit), (36 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_delay_over), (64 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_init), (80 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_rx), (156 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_state_over), (12 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_state_start), (12 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_tx), (148 bytes).
    Removing lks32mc08x_i2c.o(.data), (1 bytes).
    Removing lks32mc08x_iwdg.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_DISABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_ENABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Feed), (76 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Init), (80 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_StrutInit), (10 bytes).
    Removing lks32mc08x_mcpwm.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_mcpwm.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_mcpwm.o(i.MCPWM_ClearIRQFlag), (28 bytes).
    Removing lks32mc08x_mcpwm.o(i.MCPWM_GetIRQFlag), (72 bytes).
    Removing lks32mc08x_opa.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_opa.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_opa.o(i.OPA_Init), (168 bytes).
    Removing lks32mc08x_opa.o(i.OPA_OUT), (84 bytes).
    Removing lks32mc08x_opa.o(i.OPA_StructInit), (10 bytes).
    Removing lks32mc08x_spi.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_spi.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_spi.o(i.SPI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_spi.o(i.SPI_GetIRQFlag), (20 bytes).
    Removing lks32mc08x_spi.o(i.SPI_Init), (124 bytes).
    Removing lks32mc08x_spi.o(i.SPI_ReadData), (8 bytes).
    Removing lks32mc08x_spi.o(i.SPI_SendData), (4 bytes).
    Removing lks32mc08x_spi.o(i.SPI_StructInit), (32 bytes).
    Removing lks32mc08x_sys.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_sys.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_sys.o(i.SYS_ClearRst), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_EnablePORFilter), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FallSleep), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FeedDog), (76 bytes).
    Removing lks32mc08x_sys.o(i.SYS_GetRstSource), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_Init), (120 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SetWakeInterval), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SoftResetModule), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_StructInit), (26 bytes).
    Removing lks32mc08x_sys.o(i.SYS_WatchDogCmd), (52 bytes).
    Removing lks32mc08x_sys.o(i.SetWakeIO), (60 bytes).
    Removing lks32mc08x_sys.o(i.Switch2HRC), (76 bytes).
    Removing lks32mc08x_sys.o(i.Switch2PLL), (60 bytes).
    Removing lks32mc08x_sys.o(.bss), (12 bytes).
    Removing lks32mc08x_tim.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_tim.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_tim.o(i.ECD_ClearIRQFlag), (36 bytes).
    Removing lks32mc08x_tim.o(i.ECD_GetIRQFlag), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ClearIRQFlag), (68 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDCmd), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDInit), (224 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDStructInit), (24 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECD_GetCount), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_GetIRQFlag), (156 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT0), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT1), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCount), (6 bytes).
    Removing lks32mc08x_uart.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_uart.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_ClearIRQFlag), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_GetIRQFlag), (22 bytes).
    Removing lks32mc08x_uart.o(i.UART_ReadData), (6 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendAddr_485), (52 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData_485), (52 bytes).
    Removing lks32mc08x_tmp.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_tmp.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_tmp.o(i.GetCurrentTemperature), (80 bytes).
    Removing startup_lks32mc08x.o(HEAP), (512 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer), (168 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer), (168 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer), (148 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_GetKey), (32 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_HasData), (24 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_HasKey), (44 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_Init), (8 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutChar), (112 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutCharSkip), (100 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutCharSkipNoLock), (52 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_Read), (50 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ReadNoLock), (172 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer), (84 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer), (84 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer), (80 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer), (80 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetTerminal), (152 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_TerminalOut), (256 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WaitKey), (14 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock), (180 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteString), (26 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock), (172 bytes).
    Removing segger_rtt.o(i._PostTerminalSwitch), (36 bytes).
    Removing segger_rtt.o(.data), (17 bytes).
    Removing segger_rtt_printf.o(i.SEGGER_RTT_printf), (36 bytes).
    Removing segger_rtt_printf.o(i.SEGGER_RTT_vprintf), (536 bytes).
    Removing segger_rtt_printf.o(i._PrintInt), (270 bytes).
    Removing segger_rtt_printf.o(i._PrintUnsigned), (284 bytes).
    Removing segger_rtt_printf.o(i._StoreChar), (68 bytes).
    Removing segger_rtt_printf.o(.constdata), (16 bytes).
    Removing lib_svpwm.o(i.RevPark_Circle_Limitation), (80 bytes).
    Removing lib_svpwm.o(i.SVPWM_1ShuntGEN), (980 bytes).
    Removing lib_svpwm.o(i.SVPWM_3ShuntGEN), (528 bytes).
    Removing lib_svpwm.o(i.SVPWM_EABS_Process), (58 bytes).
    Removing fluxobserve.o(i.PmsmFluxObIni), (116 bytes).
    Removing fluxobserve.o(i.PmsmFluxObserve), (604 bytes).
    Removing lib_mc_hall.o(i.hallErrorCheck), (92 bytes).
    Removing lib_mc_hall.o(.data), (8 bytes).
    Removing lib_mc_hall.o(.data), (2 bytes).
    Removing lib_mc_hall.o(.data), (2 bytes).
    Removing lib_mc_hall.o(.data), (4 bytes).
    Removing lks32mc08x_nvr.o(i.Read_NVR), (52 bytes).

269 unused section(s) (total 16591 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_lks32mc08x.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltl.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  ffltui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    AppFunction\Global_Variable.c            0x00000000   Number         0  global_variable.o ABSOLUTE
    AppFunction\PowerCalculation.c           0x00000000   Number         0  powercalculation.o ABSOLUTE
    AppFunction\Process_Control.c            0x00000000   Number         0  process_control.o ABSOLUTE
    AppFunction\SpeedScan.c                  0x00000000   Number         0  speedscan.o ABSOLUTE
    AppFunction\System_Init.c                0x00000000   Number         0  system_init.o ABSOLUTE
    AppFunction\Task_Scheduler.c             0x00000000   Number         0  task_scheduler.o ABSOLUTE
    AppFunction\\Global_Variable.c           0x00000000   Number         0  global_variable.o ABSOLUTE
    AppFunction\\PowerCalculation.c          0x00000000   Number         0  powercalculation.o ABSOLUTE
    AppFunction\\Process_Control.c           0x00000000   Number         0  process_control.o ABSOLUTE
    AppFunction\\SpeedScan.c                 0x00000000   Number         0  speedscan.o ABSOLUTE
    AppFunction\\System_Init.c               0x00000000   Number         0  system_init.o ABSOLUTE
    AppFunction\\Task_Scheduler.c            0x00000000   Number         0  task_scheduler.o ABSOLUTE
    AppFunction\\fault_detection.c           0x00000000   Number         0  fault_detection.o ABSOLUTE
    AppFunction\\hardware_init.c             0x00000000   Number         0  hardware_init.o ABSOLUTE
    AppFunction\\interrupt.c                 0x00000000   Number         0  interrupt.o ABSOLUTE
    AppFunction\\state_machine.c             0x00000000   Number         0  state_machine.o ABSOLUTE
    AppFunction\fault_detection.c            0x00000000   Number         0  fault_detection.o ABSOLUTE
    AppFunction\hardware_init.c              0x00000000   Number         0  hardware_init.o ABSOLUTE
    AppFunction\interrupt.c                  0x00000000   Number         0  interrupt.o ABSOLUTE
    AppFunction\state_machine.c              0x00000000   Number         0  state_machine.o ABSOLUTE
    Kernal_Source\App2Core.c                 0x00000000   Number         0  app2core.o ABSOLUTE
    Kernal_Source\Bemf_Check0824.c           0x00000000   Number         0  bemf_check0824.o ABSOLUTE
    Kernal_Source\FOC_Drive.c                0x00000000   Number         0  foc_drive.o ABSOLUTE
    Kernal_Source\FluxObserve.c              0x00000000   Number         0  fluxobserve.o ABSOLUTE
    Kernal_Source\Lib_IPD.c                  0x00000000   Number         0  lib_ipd.o ABSOLUTE
    Kernal_Source\Lib_MC_hall.c              0x00000000   Number         0  lib_mc_hall.o ABSOLUTE
    Kernal_Source\Lib_Svpwm.c                0x00000000   Number         0  lib_svpwm.o ABSOLUTE
    Kernal_Source\MC_hall.c                  0x00000000   Number         0  mc_hall.o ABSOLUTE
    Kernal_Source\MC_math.c                  0x00000000   Number         0  mc_math.o ABSOLUTE
    Kernal_Source\OnTheFly.c                 0x00000000   Number         0  onthefly.o ABSOLUTE
    Kernal_Source\PID_regulators.c           0x00000000   Number         0  pid_regulators.o ABSOLUTE
    Kernal_Source\SignalChain_Sample.c       0x00000000   Number         0  signalchain_sample.o ABSOLUTE
    Kernal_Source\\App2Core.c                0x00000000   Number         0  app2core.o ABSOLUTE
    Kernal_Source\\Bemf_Check0824.c          0x00000000   Number         0  bemf_check0824.o ABSOLUTE
    Kernal_Source\\FOC_Drive.c               0x00000000   Number         0  foc_drive.o ABSOLUTE
    Kernal_Source\\MC_hall.c                 0x00000000   Number         0  mc_hall.o ABSOLUTE
    Kernal_Source\\MC_math.c                 0x00000000   Number         0  mc_math.o ABSOLUTE
    Kernal_Source\\SignalChain_Sample.c      0x00000000   Number         0  signalchain_sample.o ABSOLUTE
    Kernal_Source\\main.c                    0x00000000   Number         0  main.o ABSOLUTE
    Kernal_Source\main.c                     0x00000000   Number         0  main.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32MC08x_flash.c 0x00000000   Number         0  lks32mc08x_flash.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_NVR.c 0x00000000   Number         0  lks32mc08x_nvr.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_adc.c 0x00000000   Number         0  lks32mc08x_adc.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_cmp.c 0x00000000   Number         0  lks32mc08x_cmp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_dac.c 0x00000000   Number         0  lks32mc08x_dac.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_dma.c 0x00000000   Number         0  lks32mc08x_dma.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_dsp.c 0x00000000   Number         0  lks32mc08x_dsp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_hall.c 0x00000000   Number         0  lks32mc08x_hall.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_i2c.c 0x00000000   Number         0  lks32mc08x_i2c.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_mcpwm.c 0x00000000   Number         0  lks32mc08x_mcpwm.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_opa.c 0x00000000   Number         0  lks32mc08x_opa.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_spi.c 0x00000000   Number         0  lks32mc08x_spi.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_tmp.c 0x00000000   Number         0  lks32mc08x_tmp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\startup_lks32mc08x.s 0x00000000   Number         0  startup_lks32mc08x.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32MC08x_flash.c 0x00000000   Number         0  lks32mc08x_flash.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_adc.c 0x00000000   Number         0  lks32mc08x_adc.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_cmp.c 0x00000000   Number         0  lks32mc08x_cmp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_dac.c 0x00000000   Number         0  lks32mc08x_dac.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_dma.c 0x00000000   Number         0  lks32mc08x_dma.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_dsp.c 0x00000000   Number         0  lks32mc08x_dsp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_hall.c 0x00000000   Number         0  lks32mc08x_hall.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_i2c.c 0x00000000   Number         0  lks32mc08x_i2c.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_mcpwm.c 0x00000000   Number         0  lks32mc08x_mcpwm.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_opa.c 0x00000000   Number         0  lks32mc08x_opa.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_spi.c 0x00000000   Number         0  lks32mc08x_spi.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_tmp.c 0x00000000   Number         0  lks32mc08x_tmp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    SEGGER_RTT\SEGGER_RTT.c                  0x00000000   Number         0  segger_rtt.o ABSOLUTE
    SEGGER_RTT\SEGGER_RTT_printf.c           0x00000000   Number         0  segger_rtt_printf.o ABSOLUTE
    cdcmple.s                                0x00000000   Number         0  cdcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000E                 0x000000d0   Section        4  entry12b.o(.ARM.Collect$$$$0000000E)
    .ARM.Collect$$$$0000000F                 0x000000d4   Section        0  entry10a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00000011                 0x000000d4   Section        0  entry11a.o(.ARM.Collect$$$$00000011)
    .ARM.Collect$$$$00002712                 0x000000d4   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d4   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d8   Section       40  startup_lks32mc08x.o(.text)
    .text                                    0x00000100   Section        0  uidiv.o(.text)
    .text                                    0x0000012c   Section        0  idiv.o(.text)
    .text                                    0x00000154   Section        0  uldiv.o(.text)
    .text                                    0x000001b4   Section        0  ldiv.o(.text)
    .text                                    0x00000200   Section        0  llmul.o(.text)
    .text                                    0x0000027a   Section        0  llshl.o(.text)
    .text                                    0x0000029a   Section        0  llsshr.o(.text)
    .text                                    0x000002c0   Section        0  memcpya.o(.text)
    .text                                    0x000002e4   Section        0  memseta.o(.text)
    .text                                    0x00000308   Section        0  strcpy.o(.text)
    .text                                    0x0000031a   Section        0  fmul.o(.text)
    .text                                    0x00000394   Section        0  fdiv.o(.text)
    .text                                    0x00000410   Section        0  dadd.o(.text)
    .text                                    0x00000578   Section        0  dmul.o(.text)
    .text                                    0x00000648   Section        0  ddiv.o(.text)
    .text                                    0x00000738   Section        0  fflti.o(.text)
    .text                                    0x0000074e   Section        0  ffltui.o(.text)
    .text                                    0x0000075c   Section        0  dflti.o(.text)
    .text                                    0x00000784   Section        0  dfltui.o(.text)
    .text                                    0x000007a0   Section        0  dfltl.o(.text)
    .text                                    0x000007cc   Section        0  ffixi.o(.text)
    .text                                    0x00000800   Section        0  dfixi.o(.text)
    .text                                    0x00000848   Section        0  dfixui.o(.text)
    .text                                    0x00000884   Section        0  f2d.o(.text)
    .text                                    0x000008ac   Section       40  cdcmple.o(.text)
    .text                                    0x000008d4   Section        0  d2f.o(.text)
    .text                                    0x0000090c   Section        0  llushr.o(.text)
    .text                                    0x0000092e   Section        0  fepilogue.o(.text)
    .text                                    0x0000092e   Section        0  iusefp.o(.text)
    .text                                    0x000009b0   Section        0  depilogue.o(.text)
    .text                                    0x00000a70   Section       36  init.o(.text)
    i.ADC0_IRQHandler                        0x00000a94   Section        0  interrupt.o(i.ADC0_IRQHandler)
    i.ADC0_init                              0x00000b88   Section        0  hardware_init.o(i.ADC0_init)
    i.ADC_ChannelConfig                      0x00000bd4   Section        0  lks32mc08x_adc.o(i.ADC_ChannelConfig)
    i.ADC_Init                               0x00000c04   Section        0  lks32mc08x_adc.o(i.ADC_Init)
    i.ADC_NormalModeCFG                      0x00000d68   Section        0  signalchain_sample.o(i.ADC_NormalModeCFG)
    i.ADC_StructInit                         0x00000de4   Section        0  lks32mc08x_adc.o(i.ADC_StructInit)
    i.AdcSampleCal                           0x00000e08   Section        0  foc_drive.o(i.AdcSampleCal)
    i.Angle_Init_Process                     0x00000e90   Section        0  mc_hall.o(i.Angle_Init_Process)
    Angle_Init_Process                       0x00000e91   Thumb Code   180  mc_hall.o(i.Angle_Init_Process)
    i.App2CoreCurTrans                       0x00000f48   Section        0  app2core.o(i.App2CoreCurTrans)
    i.App2CoreFreqTrans                      0x00000f60   Section        0  app2core.o(i.App2CoreFreqTrans)
    i.AutoFieldWeakReg                       0x00000f78   Section        0  fluxobserve.o(i.AutoFieldWeakReg)
    i.BemfSwitch                             0x00000f9c   Section        0  bemf_check0824.o(i.BemfSwitch)
    i.Bemf_CheckInit                         0x0000108c   Section        0  bemf_check0824.o(i.Bemf_CheckInit)
    i.Bemf_CheckProcess                      0x00001150   Section        0  bemf_check0824.o(i.Bemf_CheckProcess)
    i.BrakeStateCheck                        0x00001310   Section        0  onthefly.o(i.BrakeStateCheck)
    i.CMP_IRQHandler                         0x00001388   Section        0  interrupt.o(i.CMP_IRQHandler)
    i.CMP_Init                               0x00001404   Section        0  lks32mc08x_cmp.o(i.CMP_Init)
    i.CMP_StructInit                         0x0000154c   Section        0  lks32mc08x_cmp.o(i.CMP_StructInit)
    i.CMP_init                               0x0000155a   Section        0  hardware_init.o(i.CMP_init)
    i.Calc_Atan                              0x000015a0   Section        0  lib_svpwm.o(i.Calc_Atan)
    i.Clock_Init                             0x00001760   Section        0  hardware_init.o(i.Clock_Init)
    i.CurrentAmplitudeCalc                   0x00001798   Section        0  fault_detection.o(i.CurrentAmplitudeCalc)
    i.CurrentLoopAxisD_Set                   0x00001938   Section        0  state_machine.o(i.CurrentLoopAxisD_Set)
    i.CurrentLoopAxisQ_Set                   0x000019c0   Section        0  state_machine.o(i.CurrentLoopAxisQ_Set)
    i.CurrentLoopReg                         0x00001a48   Section        0  foc_drive.o(i.CurrentLoopReg)
    i.CurrentOffsetCalibration               0x00001ad8   Section        0  system_init.o(i.CurrentOffsetCalibration)
    i.CurrentPIRegulator                     0x00001c0c   Section        0  pid_regulators.o(i.CurrentPIRegulator)
    i.DAC_init                               0x00001c50   Section        0  hardware_init.o(i.DAC_init)
    i.DSP_Init                               0x00001d00   Section        0  lks32mc08x_sys.o(i.DSP_Init)
    i.DcVoltPerUnitCalc                      0x00001d0c   Section        0  fluxobserve.o(i.DcVoltPerUnitCalc)
    i.ENCODER0_IRQHandler                    0x00001d4c   Section        0  interrupt.o(i.ENCODER0_IRQHandler)
    i.ENCODER1_IRQHandler                    0x00001d4e   Section        0  interrupt.o(i.ENCODER1_IRQHandler)
    i.FOC_InitstruParam                      0x00001d50   Section        0  foc_drive.o(i.FOC_InitstruParam)
    i.FOC_Model                              0x00001dd8   Section        0  foc_drive.o(i.FOC_Model)
    i.FWLoopPIReg                            0x00001f6c   Section        0  fluxobserve.o(i.FWLoopPIReg)
    i.FaultCheck                             0x00001fac   Section        0  fault_detection.o(i.FaultCheck)
    i.FaultCurrentCheck                      0x00002008   Section        0  fault_detection.o(i.FaultCurrentCheck)
    i.FaultInit                              0x00002084   Section        0  fault_detection.o(i.FaultInit)
    i.FaultRecoverInit                       0x000021bc   Section        0  fault_detection.o(i.FaultRecoverInit)
    i.FaultVoltageCheck                      0x00002218   Section        0  fault_detection.o(i.FaultVoltageCheck)
    i.FindMaxIn3                             0x00002298   Section        0  lib_ipd.o(i.FindMaxIn3)
    i.FindQNum                               0x000022d2   Section        0  fluxobserve.o(i.FindQNum)
    i.FluxObserveInit                        0x000022f0   Section        0  system_init.o(i.FluxObserveInit)
    i.FluxObserveParaCalc                    0x00002324   Section        0  fluxobserve.o(i.FluxObserveParaCalc)
    i.GPIO_IRQHandler                        0x000027c0   Section        0  interrupt.o(i.GPIO_IRQHandler)
    i.GPIO_Init                              0x000027c2   Section        0  lks32mc08x_gpio.o(i.GPIO_Init)
    i.GPIO_PinAFConfig                       0x00002888   Section        0  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    i.GPIO_StructInit                        0x00002994   Section        0  lks32mc08x_gpio.o(i.GPIO_StructInit)
    i.GPIO_init                              0x000029a0   Section        0  hardware_init.o(i.GPIO_init)
    i.GetAvrgHallPeriod                      0x00002a58   Section        0  mc_hall.o(i.GetAvrgHallPeriod)
    GetAvrgHallPeriod                        0x00002a59   Thumb Code    94  mc_hall.o(i.GetAvrgHallPeriod)
    i.GetHall_edgeAngle                      0x00002abc   Section        0  lib_mc_hall.o(i.GetHall_edgeAngle)
    i.HALL_IRQHandler                        0x00002d00   Section        0  interrupt.o(i.HALL_IRQHandler)
    i.HALL_IRQProcess                        0x00002d14   Section        0  mc_hall.o(i.HALL_IRQProcess)
    i.HALL_Init                              0x00002e54   Section        0  lks32mc08x_hall.o(i.HALL_Init)
    i.HALL_InitHallMeasure                   0x00002e98   Section        0  mc_hall.o(i.HALL_InitHallMeasure)
    i.HALL_Init_Electrical_Angle             0x00002fcc   Section        0  mc_hall.o(i.HALL_Init_Electrical_Angle)
    i.HALL_Perip_init                        0x0000318c   Section        0  hardware_init.o(i.HALL_Perip_init)
    i.HALL_StructInit                        0x000031bc   Section        0  lks32mc08x_hall.o(i.HALL_StructInit)
    i.Hall_ElecAnglePWM_Process              0x000031e0   Section        0  mc_hall.o(i.Hall_ElecAnglePWM_Process)
    i.Hall_learn_Process                     0x00003260   Section        0  mc_hall.o(i.Hall_learn_Process)
    i.Hardware_init                          0x00003300   Section        0  hardware_init.o(i.Hardware_init)
    i.I2C0_IRQHandler                        0x000033e4   Section        0  interrupt.o(i.I2C0_IRQHandler)
    i.IPD_AngleCalc                          0x000033e8   Section        0  lib_ipd.o(i.IPD_AngleCalc)
    i.IPD_RotorPosEst                        0x00003480   Section        0  lib_ipd.o(i.IPD_RotorPosEst)
    i.LowPassControl                         0x00003578   Section        0  powercalculation.o(i.LowPassControl)
    i.MCPWM0_RegUpdate                       0x000035a8   Section        0  hardware_init.o(i.MCPWM0_RegUpdate)
    i.MCPWM_Init                             0x00003614   Section        0  lks32mc08x_mcpwm.o(i.MCPWM_Init)
    i.MCPWM_StructInit                       0x000038f4   Section        0  lks32mc08x_mcpwm.o(i.MCPWM_StructInit)
    i.MCPWM_init                             0x00003904   Section        0  hardware_init.o(i.MCPWM_init)
    i.ModuCircle_Limitation                  0x000039c8   Section        0  fluxobserve.o(i.ModuCircle_Limitation)
    i.OnTheFlyDetectInit                     0x00003a88   Section        0  fluxobserve.o(i.OnTheFlyDetectInit)
    i.OnTheFlyDetectPro                      0x00003a98   Section        0  onthefly.o(i.OnTheFlyDetectPro)
    i.OpenCloseAngleSwitch                   0x00003b08   Section        0  fluxobserve.o(i.OpenCloseAngleSwitch)
    i.OpenLoopCurRamp                        0x00003b9c   Section        0  process_control.o(i.OpenLoopCurRamp)
    i.PGA_init                               0x00003be8   Section        0  hardware_init.o(i.PGA_init)
    i.PWMOutputs                             0x00003c24   Section        0  lks32mc08x_mcpwm.o(i.PWMOutputs)
    i.PWRDN_IRQHandler                       0x00003c60   Section        0  interrupt.o(i.PWRDN_IRQHandler)
    i.PoloEstCurSample                       0x00003c68   Section        0  lib_ipd.o(i.PoloEstCurSample)
    i.PowerCalc                              0x00003cc8   Section        0  powercalculation.o(i.PowerCalc)
    i.ReadHallState                          0x00003d1a   Section        0  mc_hall.o(i.ReadHallState)
    ReadHallState                            0x00003d1b   Thumb Code    18  mc_hall.o(i.ReadHallState)
    i.Read_Trim                              0x00003d2c   Section        0  lks32mc08x_nvr.o(i.Read_Trim)
    i.SEGGER_RTT_ConfigUpBuffer              0x00003d68   Section        0  segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer)
    i.SEGGER_RTT_Write                       0x00003dfc   Section        0  segger_rtt.o(i.SEGGER_RTT_Write)
    i.SEGGER_RTT_WriteNoLock                 0x00003e44   Section        0  segger_rtt.o(i.SEGGER_RTT_WriteNoLock)
    i.SPI0_IRQHandler                        0x00003ec8   Section        0  interrupt.o(i.SPI0_IRQHandler)
    i.SVPWM_2ShuntGEN                        0x00003ecc   Section        0  lib_svpwm.o(i.SVPWM_2ShuntGEN)
    i.SVPWM_2ShuntGetPhaseCurrent            0x00004008   Section        0  signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent)
    i.SYS_AnalogModuleClockCmd               0x000041f4   Section        0  lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd)
    i.SYS_ModuleClockCmd                     0x00004228   Section        0  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    i.SYS_VolSelModule                       0x00004258   Section        0  lks32mc08x_sys.o(i.SYS_VolSelModule)
    i.SYS_VolSelModuleEnableIRQ              0x000042d4   Section        0  lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ)
    i.SYS_VolSelModuleIRQ                    0x00004314   Section        0  lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ)
    i.SoftDelay                              0x0000439c   Section        0  hardware_init.o(i.SoftDelay)
    i.SoftDelay                              0x000043b4   Section        0  lks32mc08x_sys.o(i.SoftDelay)
    SoftDelay                                0x000043b5   Thumb Code    24  lks32mc08x_sys.o(i.SoftDelay)
    i.SpeedLoopReg                           0x000043cc   Section        0  foc_drive.o(i.SpeedLoopReg)
    i.SpeedLoop_Set                          0x00004414   Section        0  state_machine.o(i.SpeedLoop_Set)
    i.SpeedPIRegulator                       0x0000444e   Section        0  pid_regulators.o(i.SpeedPIRegulator)
    i.SpeedReferenceGen                      0x00004542   Section        0  process_control.o(i.SpeedReferenceGen)
    i.StateAlign                             0x00004578   Section        0  state_machine.o(i.StateAlign)
    i.StateBemfDirCheck                      0x00004624   Section        0  state_machine.o(i.StateBemfDirCheck)
    i.StateBemfStop                          0x000047f4   Section        0  state_machine.o(i.StateBemfStop)
    i.StateCharge                            0x00004854   Section        0  state_machine.o(i.StateCharge)
    i.StateDirCheck                          0x00004a00   Section        0  state_machine.o(i.StateDirCheck)
    i.StateFault                             0x00004b60   Section        0  state_machine.o(i.StateFault)
    i.StateHallRun                           0x00004b74   Section        0  state_machine.o(i.StateHallRun)
    i.StateInit                              0x00004c84   Section        0  state_machine.o(i.StateInit)
    i.StateOpen                              0x00004f14   Section        0  state_machine.o(i.StateOpen)
    i.StatePosSeek                           0x0000509c   Section        0  state_machine.o(i.StatePosSeek)
    i.StateRun                               0x0000512c   Section        0  state_machine.o(i.StateRun)
    i.StateStop                              0x000052dc   Section        0  state_machine.o(i.StateStop)
    i.StopMotorImmdly                        0x0000536c   Section        0  foc_drive.o(i.StopMotorImmdly)
    i.SysTick_Handler                        0x0000536e   Section        0  interrupt.o(i.SysTick_Handler)
    i.Sys_State_Machine                      0x00005370   Section        0  state_machine.o(i.Sys_State_Machine)
    i.SystemInit                             0x0000548c   Section        0  hardware_init.o(i.SystemInit)
    i.TIM_TimerCmd                           0x00005494   Section        0  lks32mc08x_tim.o(i.TIM_TimerCmd)
    i.TIM_TimerInit                          0x00005568   Section        0  lks32mc08x_tim.o(i.TIM_TimerInit)
    i.TIM_TimerStrutInit                     0x000056ac   Section        0  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    i.Task_Scheduler                         0x000056d4   Section        0  task_scheduler.o(i.Task_Scheduler)
    i.TempSensor_Init                        0x00005774   Section        0  lks32mc08x_tmp.o(i.TempSensor_Init)
    i.Trig_Functions                         0x000057b0   Section        0  mc_math.o(i.Trig_Functions)
    i.UART0_IRQHandler                       0x000057e0   Section        0  interrupt.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x000057e2   Section        0  interrupt.o(i.UART1_IRQHandler)
    i.UART_Init                              0x000057e4   Section        0  lks32mc08x_uart.o(i.UART_Init)
    i.UART_StructInit                        0x000058e8   Section        0  lks32mc08x_uart.o(i.UART_StructInit)
    i.UART_init                              0x00005908   Section        0  hardware_init.o(i.UART_init)
    i.UTIMER0_IRQHandler                     0x00005934   Section        0  interrupt.o(i.UTIMER0_IRQHandler)
    i.UTIMER1_IRQHandler                     0x00005964   Section        0  interrupt.o(i.UTIMER1_IRQHandler)
    i.UTIMER2_IRQHandler                     0x00005966   Section        0  interrupt.o(i.UTIMER2_IRQHandler)
    i.UTIMER3_IRQHandler                     0x00005968   Section        0  interrupt.o(i.UTIMER3_IRQHandler)
    i.UTimer_init                            0x0000596c   Section        0  hardware_init.o(i.UTimer_init)
    i.User2AppAngleTrans                     0x000059bc   Section        0  app2core.o(i.User2AppAngleTrans)
    i.User2AppCurTrans                       0x000059e8   Section        0  app2core.o(i.User2AppCurTrans)
    i.User2AppFreqTrans                      0x00005a14   Section        0  app2core.o(i.User2AppFreqTrans)
    i.User2AppVolTrans                       0x00005a40   Section        0  app2core.o(i.User2AppVolTrans)
    i.Verify_Hall_State                      0x00005a90   Section        0  mc_hall.o(i.Verify_Hall_State)
    i.VolPulsePwmSet                         0x00005c68   Section        0  lib_ipd.o(i.VolPulsePwmSet)
    i.VspSpeedScan                           0x00005cb4   Section        0  speedscan.o(i.VspSpeedScan)
    i._DoInit                                0x00005dcc   Section        0  segger_rtt.o(i._DoInit)
    _DoInit                                  0x00005dcd   Thumb Code    74  segger_rtt.o(i._DoInit)
    i._GetAvailWriteSpace                    0x00005e3c   Section        0  segger_rtt.o(i._GetAvailWriteSpace)
    _GetAvailWriteSpace                      0x00005e3d   Thumb Code    28  segger_rtt.o(i._GetAvailWriteSpace)
    i._WriteBlocking                         0x00005e58   Section        0  segger_rtt.o(i._WriteBlocking)
    _WriteBlocking                           0x00005e59   Thumb Code   128  segger_rtt.o(i._WriteBlocking)
    i._WriteNoCheck                          0x00005ed8   Section        0  segger_rtt.o(i._WriteNoCheck)
    _WriteNoCheck                            0x00005ed9   Thumb Code    74  segger_rtt.o(i._WriteNoCheck)
    i.__ARM_clz                              0x00005f22   Section        0  depilogue.o(i.__ARM_clz)
    i.__ARM_common_ll_mulss                  0x00005f50   Section        0  fluxobserve.o(i.__ARM_common_ll_mulss)
    i.__ARM_common_ll_muluu                  0x00005f80   Section        0  fluxobserve.o(i.__ARM_common_ll_muluu)
    i.__ARM_common_switch8                   0x00005fb0   Section        0  lib_svpwm.o(i.__ARM_common_switch8)
    i.__NVIC_ClearPendingIRQ                 0x00005fcc   Section        0  lks32mc08x_sys.o(i.__NVIC_ClearPendingIRQ)
    __NVIC_ClearPendingIRQ                   0x00005fcd   Thumb Code    18  lks32mc08x_sys.o(i.__NVIC_ClearPendingIRQ)
    i.__NVIC_DisableIRQ                      0x00005fe4   Section        0  lks32mc08x_sys.o(i.__NVIC_DisableIRQ)
    __NVIC_DisableIRQ                        0x00005fe5   Thumb Code    26  lks32mc08x_sys.o(i.__NVIC_DisableIRQ)
    i.__NVIC_EnableIRQ                       0x00006004   Section        0  hardware_init.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00006005   Thumb Code    26  hardware_init.o(i.__NVIC_EnableIRQ)
    i.__NVIC_SetPriority                     0x00006024   Section        0  hardware_init.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00006025   Thumb Code   110  hardware_init.o(i.__NVIC_SetPriority)
    i.__NVIC_SetPriority                     0x0000609c   Section        0  lks32mc08x_sys.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x0000609d   Thumb Code   110  lks32mc08x_sys.o(i.__NVIC_SetPriority)
    i.__scatterload_copy                     0x00006114   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00006122   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00006124   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.calc_first_ElectAngle                  0x00006134   Section        0  lib_mc_hall.o(i.calc_first_ElectAngle)
    i.check_hall_state                       0x000061c8   Section        0  lib_mc_hall.o(i.check_hall_state)
    i.closeLoopAnglePLL                      0x00006520   Section        0  lib_mc_hall.o(i.closeLoopAnglePLL)
    i.closeLoopAnglePLLInit                  0x00006588   Section        0  lib_mc_hall.o(i.closeLoopAnglePLLInit)
    i.hall_comm_VariableInit                 0x00006690   Section        0  mc_hall.o(i.hall_comm_VariableInit)
    i.hall_repare_process                    0x000067f0   Section        0  lib_mc_hall.o(i.hall_repare_process)
    i.learn_hall_proc                        0x000068d4   Section        0  lib_mc_hall.o(i.learn_hall_proc)
    i.lowPass_filter                         0x00006a58   Section        0  lib_svpwm.o(i.lowPass_filter)
    i.main                                   0x00006a6a   Section        0  main.o(i.main)
    i.reduceToqueAnglePll                    0x00006a7a   Section        0  lib_mc_hall.o(i.reduceToqueAnglePll)
    i.soft_Trg_ADC                           0x00006aa4   Section        0  lib_ipd.o(i.soft_Trg_ADC)
    i.sys_init                               0x00006ad0   Section        0  system_init.o(i.sys_init)
    .constdata                               0x00006b14   Section      108  global_variable.o(.constdata)
    .constdata                               0x00006b80   Section       48  mc_hall.o(.constdata)
    .constdata                               0x00006bb0   Section      544  lib_svpwm.o(.constdata)
    .data                                    0x20000000   Section        6  global_variable.o(.data)
    .data                                    0x20000006   Section        6  interrupt.o(.data)
    .data                                    0x2000000c   Section       10  fault_detection.o(.data)
    t_nFlagCheck                             0x20000014   Data           2  fault_detection.o(.data)
    .data                                    0x20000016   Section        2  foc_drive.o(.data)
    .data                                    0x20000018   Section        4  lks32mc08x_sys.o(.data)
    .data                                    0x2000001c   Section        4  lks32mc08x_tmp.o(.data)
    .data                                    0x20000020   Section       72  fluxobserve.o(.data)
    motorControlFlag                         0x20000020   Data           1  fluxobserve.o(.data)
    iMarsWeEst                               0x20000040   Data           4  fluxobserve.o(.data)
    s32_udc_filt                             0x20000044   Data           4  fluxobserve.o(.data)
    iStatorSynDFedbak                        0x20000048   Data           4  fluxobserve.o(.data)
    iStatorSynQFedbak                        0x2000004c   Data           4  fluxobserve.o(.data)
    .data                                    0x20000068   Section       16  onthefly.o(.data)
    sDppAccCnt                               0x20000068   Data           1  onthefly.o(.data)
    s32MotorCurrentMagfilt                   0x2000006c   Data           4  onthefly.o(.data)
    s32MotorCurrentMagfilt1                  0x20000070   Data           4  onthefly.o(.data)
    s32MotorCurrentMagDifAvg                 0x20000074   Data           4  onthefly.o(.data)
    .data                                    0x20000078   Section        6  lib_mc_hall.o(.data)
    s_Learn_hallStep                         0x20000078   Data           1  lib_mc_hall.o(.data)
    tErrCnt                                  0x2000007a   Data           2  lib_mc_hall.o(.data)
    .bss                                     0x20000080   Section      892  global_variable.o(.bss)
    .bss                                     0x200003fc   Section       18  state_machine.o(.bss)
    .bss                                     0x20000410   Section      138  fault_detection.o(.bss)
    .bss                                     0x200004a0   Section      108  powercalculation.o(.bss)
    .bss                                     0x2000050c   Section       76  bemf_check0824.o(.bss)
    .bss                                     0x20000558   Section     3260  segger_rtt.o(.bss)
    _acUpBuffer                              0x20000e04   Data        1024  segger_rtt.o(.bss)
    _acDownBuffer                            0x20001204   Data          16  segger_rtt.o(.bss)
    .bss                                     0x20001214   Section      104  fluxobserve.o(.bss)
    STACK                                    0x20001280   Section      768  startup_lks32mc08x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lks32mc08x.o(RESET)
    __arm_fini_                               - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_lks32mc08x.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_lks32mc08x.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_lib_shutdown_fini                   0x000000d1   Thumb Code     0  entry12b.o(.ARM.Collect$$$$0000000E)
    __rt_final_cpp                           0x000000d5   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000F)
    __rt_final_exit                          0x000000d5   Thumb Code     0  entry11a.o(.ARM.Collect$$$$00000011)
    Reset_Handler                            0x000000d9   Thumb Code    14  startup_lks32mc08x.o(.text)
    NMI_Handler                              0x000000e7   Thumb Code     2  startup_lks32mc08x.o(.text)
    HardFault_Handler                        0x000000e9   Thumb Code     2  startup_lks32mc08x.o(.text)
    SVC_Handler                              0x000000eb   Thumb Code     2  startup_lks32mc08x.o(.text)
    PendSV_Handler                           0x000000ed   Thumb Code     2  startup_lks32mc08x.o(.text)
    CAN_IRQHandler                           0x000000f1   Thumb Code     0  startup_lks32mc08x.o(.text)
    DMA_IRQHandler                           0x000000f1   Thumb Code     0  startup_lks32mc08x.o(.text)
    DSP_IRQHandler                           0x000000f1   Thumb Code     0  startup_lks32mc08x.o(.text)
    MCPWM_IRQHandler                         0x000000f1   Thumb Code     0  startup_lks32mc08x.o(.text)
    SIF_IRQHandler                           0x000000f1   Thumb Code     0  startup_lks32mc08x.o(.text)
    WAKE_IRQHandler                          0x000000f1   Thumb Code     0  startup_lks32mc08x.o(.text)
    __aeabi_uidiv                            0x00000101   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000101   Thumb Code    44  uidiv.o(.text)
    __aeabi_idiv                             0x0000012d   Thumb Code     0  idiv.o(.text)
    __aeabi_idivmod                          0x0000012d   Thumb Code    40  idiv.o(.text)
    __aeabi_uldivmod                         0x00000155   Thumb Code    96  uldiv.o(.text)
    __aeabi_ldivmod                          0x000001b5   Thumb Code    76  ldiv.o(.text)
    __aeabi_lmul                             0x00000201   Thumb Code   122  llmul.o(.text)
    _ll_mul                                  0x00000201   Thumb Code     0  llmul.o(.text)
    __aeabi_llsl                             0x0000027b   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x0000027b   Thumb Code     0  llshl.o(.text)
    __aeabi_lasr                             0x0000029b   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x0000029b   Thumb Code     0  llsshr.o(.text)
    __aeabi_memcpy                           0x000002c1   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000002c1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000002c1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000002e5   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000002e5   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000002e5   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000002f3   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000002f3   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000002f3   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000002f7   Thumb Code    18  memseta.o(.text)
    strcpy                                   0x00000309   Thumb Code    18  strcpy.o(.text)
    __aeabi_fmul                             0x0000031b   Thumb Code   122  fmul.o(.text)
    __aeabi_fdiv                             0x00000395   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x00000411   Thumb Code   330  dadd.o(.text)
    __aeabi_dsub                             0x0000055b   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x00000567   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x00000579   Thumb Code   202  dmul.o(.text)
    __aeabi_ddiv                             0x00000649   Thumb Code   234  ddiv.o(.text)
    __aeabi_i2f                              0x00000739   Thumb Code    22  fflti.o(.text)
    __aeabi_ui2f                             0x0000074f   Thumb Code    14  ffltui.o(.text)
    __aeabi_i2d                              0x0000075d   Thumb Code    34  dflti.o(.text)
    __aeabi_ui2d                             0x00000785   Thumb Code    24  dfltui.o(.text)
    __aeabi_l2d                              0x000007a1   Thumb Code    38  dfltl.o(.text)
    __aeabi_f2iz                             0x000007cd   Thumb Code    50  ffixi.o(.text)
    __aeabi_d2iz                             0x00000801   Thumb Code    62  dfixi.o(.text)
    __aeabi_d2uiz                            0x00000849   Thumb Code    50  dfixui.o(.text)
    __aeabi_f2d                              0x00000885   Thumb Code    40  f2d.o(.text)
    __aeabi_cdcmpeq                          0x000008ad   Thumb Code     0  cdcmple.o(.text)
    __aeabi_cdcmple                          0x000008ad   Thumb Code    38  cdcmple.o(.text)
    __aeabi_d2f                              0x000008d5   Thumb Code    56  d2f.o(.text)
    __aeabi_llsr                             0x0000090d   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x0000090d   Thumb Code     0  llushr.o(.text)
    __I$use$fp                               0x0000092f   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x0000092f   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x0000093f   Thumb Code   114  fepilogue.o(.text)
    _double_round                            0x000009b1   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x000009cb   Thumb Code   164  depilogue.o(.text)
    __scatterload                            0x00000a71   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000a71   Thumb Code     0  init.o(.text)
    ADC0_IRQHandler                          0x00000a95   Thumb Code   192  interrupt.o(i.ADC0_IRQHandler)
    ADC0_init                                0x00000b89   Thumb Code    70  hardware_init.o(i.ADC0_init)
    ADC_ChannelConfig                        0x00000bd5   Thumb Code    46  lks32mc08x_adc.o(i.ADC_ChannelConfig)
    ADC_Init                                 0x00000c05   Thumb Code   348  lks32mc08x_adc.o(i.ADC_Init)
    ADC_NormalModeCFG                        0x00000d69   Thumb Code   110  signalchain_sample.o(i.ADC_NormalModeCFG)
    ADC_StructInit                           0x00000de5   Thumb Code    36  lks32mc08x_adc.o(i.ADC_StructInit)
    AdcSampleCal                             0x00000e09   Thumb Code   124  foc_drive.o(i.AdcSampleCal)
    App2CoreCurTrans                         0x00000f49   Thumb Code    18  app2core.o(i.App2CoreCurTrans)
    App2CoreFreqTrans                        0x00000f61   Thumb Code    18  app2core.o(i.App2CoreFreqTrans)
    AutoFieldWeakReg                         0x00000f79   Thumb Code    26  fluxobserve.o(i.AutoFieldWeakReg)
    BemfSwitch                               0x00000f9d   Thumb Code   174  bemf_check0824.o(i.BemfSwitch)
    Bemf_CheckInit                           0x0000108d   Thumb Code   182  bemf_check0824.o(i.Bemf_CheckInit)
    Bemf_CheckProcess                        0x00001151   Thumb Code   422  bemf_check0824.o(i.Bemf_CheckProcess)
    BrakeStateCheck                          0x00001311   Thumb Code   104  onthefly.o(i.BrakeStateCheck)
    CMP_IRQHandler                           0x00001389   Thumb Code   110  interrupt.o(i.CMP_IRQHandler)
    CMP_Init                                 0x00001405   Thumb Code   314  lks32mc08x_cmp.o(i.CMP_Init)
    CMP_StructInit                           0x0000154d   Thumb Code    14  lks32mc08x_cmp.o(i.CMP_StructInit)
    CMP_init                                 0x0000155b   Thumb Code    68  hardware_init.o(i.CMP_init)
    Calc_Atan                                0x000015a1   Thumb Code   434  lib_svpwm.o(i.Calc_Atan)
    Clock_Init                               0x00001761   Thumb Code    44  hardware_init.o(i.Clock_Init)
    CurrentAmplitudeCalc                     0x00001799   Thumb Code   410  fault_detection.o(i.CurrentAmplitudeCalc)
    CurrentLoopAxisD_Set                     0x00001939   Thumb Code   126  state_machine.o(i.CurrentLoopAxisD_Set)
    CurrentLoopAxisQ_Set                     0x000019c1   Thumb Code   126  state_machine.o(i.CurrentLoopAxisQ_Set)
    CurrentLoopReg                           0x00001a49   Thumb Code   138  foc_drive.o(i.CurrentLoopReg)
    CurrentOffsetCalibration                 0x00001ad9   Thumb Code   282  system_init.o(i.CurrentOffsetCalibration)
    CurrentPIRegulator                       0x00001c0d   Thumb Code    68  pid_regulators.o(i.CurrentPIRegulator)
    DAC_init                                 0x00001c51   Thumb Code   168  hardware_init.o(i.DAC_init)
    DSP_Init                                 0x00001d01   Thumb Code    12  lks32mc08x_sys.o(i.DSP_Init)
    DcVoltPerUnitCalc                        0x00001d0d   Thumb Code    48  fluxobserve.o(i.DcVoltPerUnitCalc)
    ENCODER0_IRQHandler                      0x00001d4d   Thumb Code     2  interrupt.o(i.ENCODER0_IRQHandler)
    ENCODER1_IRQHandler                      0x00001d4f   Thumb Code     2  interrupt.o(i.ENCODER1_IRQHandler)
    FOC_InitstruParam                        0x00001d51   Thumb Code   116  foc_drive.o(i.FOC_InitstruParam)
    FOC_Model                                0x00001dd9   Thumb Code   362  foc_drive.o(i.FOC_Model)
    FWLoopPIReg                              0x00001f6d   Thumb Code    64  fluxobserve.o(i.FWLoopPIReg)
    FaultCheck                               0x00001fad   Thumb Code    78  fault_detection.o(i.FaultCheck)
    FaultCurrentCheck                        0x00002009   Thumb Code   116  fault_detection.o(i.FaultCurrentCheck)
    FaultInit                                0x00002085   Thumb Code   244  fault_detection.o(i.FaultInit)
    FaultRecoverInit                         0x000021bd   Thumb Code    56  fault_detection.o(i.FaultRecoverInit)
    FaultVoltageCheck                        0x00002219   Thumb Code   118  fault_detection.o(i.FaultVoltageCheck)
    FindMaxIn3                               0x00002299   Thumb Code    58  lib_ipd.o(i.FindMaxIn3)
    FindQNum                                 0x000022d3   Thumb Code    28  fluxobserve.o(i.FindQNum)
    FluxObserveInit                          0x000022f1   Thumb Code    40  system_init.o(i.FluxObserveInit)
    FluxObserveParaCalc                      0x00002325   Thumb Code  1176  fluxobserve.o(i.FluxObserveParaCalc)
    GPIO_IRQHandler                          0x000027c1   Thumb Code     2  interrupt.o(i.GPIO_IRQHandler)
    GPIO_Init                                0x000027c3   Thumb Code   198  lks32mc08x_gpio.o(i.GPIO_Init)
    GPIO_PinAFConfig                         0x00002889   Thumb Code   258  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    GPIO_StructInit                          0x00002995   Thumb Code    12  lks32mc08x_gpio.o(i.GPIO_StructInit)
    GPIO_init                                0x000029a1   Thumb Code   180  hardware_init.o(i.GPIO_init)
    GetHall_edgeAngle                        0x00002abd   Thumb Code   564  lib_mc_hall.o(i.GetHall_edgeAngle)
    HALL_IRQHandler                          0x00002d01   Thumb Code    12  interrupt.o(i.HALL_IRQHandler)
    HALL_IRQProcess                          0x00002d15   Thumb Code   308  mc_hall.o(i.HALL_IRQProcess)
    HALL_Init                                0x00002e55   Thumb Code    64  lks32mc08x_hall.o(i.HALL_Init)
    HALL_InitHallMeasure                     0x00002e99   Thumb Code   262  mc_hall.o(i.HALL_InitHallMeasure)
    HALL_Init_Electrical_Angle               0x00002fcd   Thumb Code   440  mc_hall.o(i.HALL_Init_Electrical_Angle)
    HALL_Perip_init                          0x0000318d   Thumb Code    42  hardware_init.o(i.HALL_Perip_init)
    HALL_StructInit                          0x000031bd   Thumb Code    32  lks32mc08x_hall.o(i.HALL_StructInit)
    Hall_ElecAnglePWM_Process                0x000031e1   Thumb Code   128  mc_hall.o(i.Hall_ElecAnglePWM_Process)
    Hall_learn_Process                       0x00003261   Thumb Code   148  mc_hall.o(i.Hall_learn_Process)
    Hardware_init                            0x00003301   Thumb Code   190  hardware_init.o(i.Hardware_init)
    I2C0_IRQHandler                          0x000033e5   Thumb Code     2  interrupt.o(i.I2C0_IRQHandler)
    IPD_AngleCalc                            0x000033e9   Thumb Code   134  lib_ipd.o(i.IPD_AngleCalc)
    IPD_RotorPosEst                          0x00003481   Thumb Code   220  lib_ipd.o(i.IPD_RotorPosEst)
    LowPassControl                           0x00003579   Thumb Code    46  powercalculation.o(i.LowPassControl)
    MCPWM0_RegUpdate                         0x000035a9   Thumb Code    96  hardware_init.o(i.MCPWM0_RegUpdate)
    MCPWM_Init                               0x00003615   Thumb Code   718  lks32mc08x_mcpwm.o(i.MCPWM_Init)
    MCPWM_StructInit                         0x000038f5   Thumb Code    14  lks32mc08x_mcpwm.o(i.MCPWM_StructInit)
    MCPWM_init                               0x00003905   Thumb Code   180  hardware_init.o(i.MCPWM_init)
    ModuCircle_Limitation                    0x000039c9   Thumb Code   162  fluxobserve.o(i.ModuCircle_Limitation)
    OnTheFlyDetectInit                       0x00003a89   Thumb Code    12  fluxobserve.o(i.OnTheFlyDetectInit)
    OnTheFlyDetectPro                        0x00003a99   Thumb Code    96  onthefly.o(i.OnTheFlyDetectPro)
    OpenCloseAngleSwitch                     0x00003b09   Thumb Code   120  fluxobserve.o(i.OpenCloseAngleSwitch)
    OpenLoopCurRamp                          0x00003b9d   Thumb Code    74  process_control.o(i.OpenLoopCurRamp)
    PGA_init                                 0x00003be9   Thumb Code    52  hardware_init.o(i.PGA_init)
    PWMOutputs                               0x00003c25   Thumb Code    44  lks32mc08x_mcpwm.o(i.PWMOutputs)
    PWRDN_IRQHandler                         0x00003c61   Thumb Code     8  interrupt.o(i.PWRDN_IRQHandler)
    PoloEstCurSample                         0x00003c69   Thumb Code    88  lib_ipd.o(i.PoloEstCurSample)
    PowerCalc                                0x00003cc9   Thumb Code    82  powercalculation.o(i.PowerCalc)
    Read_Trim                                0x00003d2d   Thumb Code    50  lks32mc08x_nvr.o(i.Read_Trim)
    SEGGER_RTT_ConfigUpBuffer                0x00003d69   Thumb Code   142  segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer)
    SEGGER_RTT_Write                         0x00003dfd   Thumb Code    66  segger_rtt.o(i.SEGGER_RTT_Write)
    SEGGER_RTT_WriteNoLock                   0x00003e45   Thumb Code   128  segger_rtt.o(i.SEGGER_RTT_WriteNoLock)
    SPI0_IRQHandler                          0x00003ec9   Thumb Code     2  interrupt.o(i.SPI0_IRQHandler)
    SVPWM_2ShuntGEN                          0x00003ecd   Thumb Code   310  lib_svpwm.o(i.SVPWM_2ShuntGEN)
    SVPWM_2ShuntGetPhaseCurrent              0x00004009   Thumb Code   482  signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent)
    SYS_AnalogModuleClockCmd                 0x000041f5   Thumb Code    44  lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd)
    SYS_ModuleClockCmd                       0x00004229   Thumb Code    38  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    SYS_VolSelModule                         0x00004259   Thumb Code   112  lks32mc08x_sys.o(i.SYS_VolSelModule)
    SYS_VolSelModuleEnableIRQ                0x000042d5   Thumb Code    56  lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ)
    SYS_VolSelModuleIRQ                      0x00004315   Thumb Code   112  lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ)
    SoftDelay                                0x0000439d   Thumb Code    24  hardware_init.o(i.SoftDelay)
    SpeedLoopReg                             0x000043cd   Thumb Code    58  foc_drive.o(i.SpeedLoopReg)
    SpeedLoop_Set                            0x00004415   Thumb Code    58  state_machine.o(i.SpeedLoop_Set)
    SpeedPIRegulator                         0x0000444f   Thumb Code   244  pid_regulators.o(i.SpeedPIRegulator)
    SpeedReferenceGen                        0x00004543   Thumb Code    54  process_control.o(i.SpeedReferenceGen)
    StateAlign                               0x00004579   Thumb Code   142  state_machine.o(i.StateAlign)
    StateBemfDirCheck                        0x00004625   Thumb Code   430  state_machine.o(i.StateBemfDirCheck)
    StateBemfStop                            0x000047f5   Thumb Code    78  state_machine.o(i.StateBemfStop)
    StateCharge                              0x00004855   Thumb Code   380  state_machine.o(i.StateCharge)
    StateDirCheck                            0x00004a01   Thumb Code   326  state_machine.o(i.StateDirCheck)
    StateFault                               0x00004b61   Thumb Code    14  state_machine.o(i.StateFault)
    StateHallRun                             0x00004b75   Thumb Code   244  state_machine.o(i.StateHallRun)
    StateInit                                0x00004c85   Thumb Code   572  state_machine.o(i.StateInit)
    StateOpen                                0x00004f15   Thumb Code   356  state_machine.o(i.StateOpen)
    StatePosSeek                             0x0000509d   Thumb Code   118  state_machine.o(i.StatePosSeek)
    StateRun                                 0x0000512d   Thumb Code   406  state_machine.o(i.StateRun)
    StateStop                                0x000052dd   Thumb Code   120  state_machine.o(i.StateStop)
    StopMotorImmdly                          0x0000536d   Thumb Code     2  foc_drive.o(i.StopMotorImmdly)
    SysTick_Handler                          0x0000536f   Thumb Code     2  interrupt.o(i.SysTick_Handler)
    Sys_State_Machine                        0x00005371   Thumb Code   272  state_machine.o(i.Sys_State_Machine)
    SystemInit                               0x0000548d   Thumb Code     8  hardware_init.o(i.SystemInit)
    TIM_TimerCmd                             0x00005495   Thumb Code   208  lks32mc08x_tim.o(i.TIM_TimerCmd)
    TIM_TimerInit                            0x00005569   Thumb Code   320  lks32mc08x_tim.o(i.TIM_TimerInit)
    TIM_TimerStrutInit                       0x000056ad   Thumb Code    40  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    Task_Scheduler                           0x000056d5   Thumb Code   134  task_scheduler.o(i.Task_Scheduler)
    TempSensor_Init                          0x00005775   Thumb Code    46  lks32mc08x_tmp.o(i.TempSensor_Init)
    Trig_Functions                           0x000057b1   Thumb Code    42  mc_math.o(i.Trig_Functions)
    UART0_IRQHandler                         0x000057e1   Thumb Code     2  interrupt.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x000057e3   Thumb Code     2  interrupt.o(i.UART1_IRQHandler)
    UART_Init                                0x000057e5   Thumb Code   238  lks32mc08x_uart.o(i.UART_Init)
    UART_StructInit                          0x000058e9   Thumb Code    30  lks32mc08x_uart.o(i.UART_StructInit)
    UART_init                                0x00005909   Thumb Code    38  hardware_init.o(i.UART_init)
    UTIMER0_IRQHandler                       0x00005935   Thumb Code    40  interrupt.o(i.UTIMER0_IRQHandler)
    UTIMER1_IRQHandler                       0x00005965   Thumb Code     2  interrupt.o(i.UTIMER1_IRQHandler)
    UTIMER2_IRQHandler                       0x00005967   Thumb Code     2  interrupt.o(i.UTIMER2_IRQHandler)
    UTIMER3_IRQHandler                       0x00005969   Thumb Code     2  interrupt.o(i.UTIMER3_IRQHandler)
    UTimer_init                              0x0000596d   Thumb Code    70  hardware_init.o(i.UTimer_init)
    User2AppAngleTrans                       0x000059bd   Thumb Code    38  app2core.o(i.User2AppAngleTrans)
    User2AppCurTrans                         0x000059e9   Thumb Code    38  app2core.o(i.User2AppCurTrans)
    User2AppFreqTrans                        0x00005a15   Thumb Code    38  app2core.o(i.User2AppFreqTrans)
    User2AppVolTrans                         0x00005a41   Thumb Code    58  app2core.o(i.User2AppVolTrans)
    Verify_Hall_State                        0x00005a91   Thumb Code   462  mc_hall.o(i.Verify_Hall_State)
    VolPulsePwmSet                           0x00005c69   Thumb Code    68  lib_ipd.o(i.VolPulsePwmSet)
    VspSpeedScan                             0x00005cb5   Thumb Code   242  speedscan.o(i.VspSpeedScan)
    __ARM_clz                                0x00005f23   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __ARM_common_ll_mulss                    0x00005f51   Thumb Code    48  fluxobserve.o(i.__ARM_common_ll_mulss)
    __ARM_common_ll_muluu                    0x00005f81   Thumb Code    48  fluxobserve.o(i.__ARM_common_ll_muluu)
    __ARM_common_switch8                     0x00005fb1   Thumb Code    26  lib_svpwm.o(i.__ARM_common_switch8)
    __scatterload_copy                       0x00006115   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00006123   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00006125   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    calc_first_ElectAngle                    0x00006135   Thumb Code   140  lib_mc_hall.o(i.calc_first_ElectAngle)
    check_hall_state                         0x000061c9   Thumb Code   848  lib_mc_hall.o(i.check_hall_state)
    closeLoopAnglePLL                        0x00006521   Thumb Code   104  lib_mc_hall.o(i.closeLoopAnglePLL)
    closeLoopAnglePLLInit                    0x00006589   Thumb Code   250  lib_mc_hall.o(i.closeLoopAnglePLLInit)
    hall_comm_VariableInit                   0x00006691   Thumb Code   352  mc_hall.o(i.hall_comm_VariableInit)
    hall_repare_process                      0x000067f1   Thumb Code   228  lib_mc_hall.o(i.hall_repare_process)
    learn_hall_proc                          0x000068d5   Thumb Code   378  lib_mc_hall.o(i.learn_hall_proc)
    lowPass_filter                           0x00006a59   Thumb Code    18  lib_svpwm.o(i.lowPass_filter)
    main                                     0x00006a6b   Thumb Code    16  main.o(i.main)
    reduceToqueAnglePll                      0x00006a7b   Thumb Code    40  lib_mc_hall.o(i.reduceToqueAnglePll)
    soft_Trg_ADC                             0x00006aa5   Thumb Code    34  lib_ipd.o(i.soft_Trg_ADC)
    sys_init                                 0x00006ad1   Thumb Code    46  system_init.o(i.sys_init)
    sVersion                                 0x00006b14   Data          10  global_variable.o(.constdata)
    struFOC_ConstParam                       0x00006b1e   Data          16  global_variable.o(.constdata)
    struMotorParam                           0x00006b30   Data          44  global_variable.o(.constdata)
    struBoardParam                           0x00006b5c   Data          36  global_variable.o(.constdata)
    struHallParamaConst                      0x00006b80   Data          48  mc_hall.o(.constdata)
    atantab1                                 0x00006bb0   Data         544  lib_svpwm.o(.constdata)
    Region$$Table$$Base                      0x00006dd0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00006df0   Number         0  anon$$obj.o(Region$$Table)
    struBemfVolt                             0x20000000   Data           6  global_variable.o(.data)
    Rttstru                                  0x20000006   Data           6  interrupt.o(.data)
    struImaxCurrent                          0x2000000c   Data           6  fault_detection.o(.data)
    stru_Faults                              0x20000012   Data           2  fault_detection.o(.data)
    tElectAngle                              0x20000016   Data           2  foc_drive.o(.data)
    POWER_MODE                               0x20000018   Data           4  lks32mc08x_sys.o(.data)
    m_TempertureCof                          0x2000001c   Data           4  lks32mc08x_tmp.o(.data)
    AFWR_KP                                  0x20000022   Data           2  fluxobserve.o(.data)
    AFWR_KI                                  0x20000024   Data           2  fluxobserve.o(.data)
    s16UmRohRef                              0x20000026   Data           2  fluxobserve.o(.data)
    s16UtRohRef                              0x20000028   Data           2  fluxobserve.o(.data)
    iMrasUd                                  0x2000002a   Data           2  fluxobserve.o(.data)
    iMrasUq                                  0x2000002c   Data           2  fluxobserve.o(.data)
    iMrasId                                  0x2000002e   Data           2  fluxobserve.o(.data)
    iMrasIq                                  0x20000030   Data           2  fluxobserve.o(.data)
    iMrasIqEstN                              0x20000032   Data           2  fluxobserve.o(.data)
    iEemfMEst                                0x20000034   Data           2  fluxobserve.o(.data)
    iEemfTEst                                0x20000036   Data           2  fluxobserve.o(.data)
    iEemfMEstAvg                             0x20000038   Data           2  fluxobserve.o(.data)
    iEemfTEstAvg                             0x2000003a   Data           2  fluxobserve.o(.data)
    uMrasTheta_est                           0x2000003c   Data           4  fluxobserve.o(.data)
    vectorComponentsAfo                      0x20000050   Data           4  fluxobserve.o(.data)
    vectorComponentsDThe                     0x20000054   Data           4  fluxobserve.o(.data)
    s32VolOutAvg                             0x20000058   Data           4  fluxobserve.o(.data)
    iMrasIdEstN_1_Fs                         0x2000005c   Data           4  fluxobserve.o(.data)
    iMrasIqEstN_1_Fs                         0x20000060   Data           4  fluxobserve.o(.data)
    synWeObsFilt                             0x20000064   Data           4  fluxobserve.o(.data)
    BEMF_electAngle                          0x2000007c   Data           2  lib_mc_hall.o(.data)
    struTaskScheduler                        0x20000080   Data          12  global_variable.o(.bss)
    struFOC_CtrProc                          0x2000008c   Data          20  global_variable.o(.bss)
    struFOC_CurrLoop                         0x200000a0   Data         184  global_variable.o(.bss)
    struFluxOB_Param                         0x20000158   Data          56  global_variable.o(.bss)
    struAppCommData                          0x20000190   Data          76  global_variable.o(.bss)
    struMotorSpeed                           0x200001e0   Data          88  global_variable.o(.bss)
    mOnTheFlyDetect                          0x20000238   Data          36  global_variable.o(.bss)
    mSpeedPI                                 0x2000025c   Data          28  global_variable.o(.bss)
    mOpenForceRun                            0x20000278   Data          28  global_variable.o(.bss)
    struUser2App                             0x20000294   Data          32  global_variable.o(.bss)
    struCore2App                             0x200002b4   Data          32  global_variable.o(.bss)
    struApp2Core                             0x200002d4   Data          32  global_variable.o(.bss)
    struHallProcess                          0x200002f4   Data         232  global_variable.o(.bss)
    mIPD_CtrProc                             0x200003dc   Data          32  global_variable.o(.bss)
    struTime                                 0x200003fc   Data          18  state_machine.o(.bss)
    struCurrentAmplitude                     0x20000410   Data          28  fault_detection.o(.bss)
    stru_FaultValue                          0x2000042c   Data          40  fault_detection.o(.bss)
    struFaultVoltTime                        0x20000454   Data          10  fault_detection.o(.bss)
    struFaultEmptyTime                       0x2000045e   Data          10  fault_detection.o(.bss)
    struFaultStallTime                       0x20000468   Data          10  fault_detection.o(.bss)
    struFaultCurrentTime                     0x20000472   Data          10  fault_detection.o(.bss)
    struFaultTempTime                        0x2000047c   Data          10  fault_detection.o(.bss)
    struFaultPhaseTime                       0x20000486   Data          10  fault_detection.o(.bss)
    struFaultStartTime                       0x20000490   Data          10  fault_detection.o(.bss)
    struPower                                0x200004a0   Data          96  powercalculation.o(.bss)
    PowerRamp                                0x20000500   Data          12  powercalculation.o(.bss)
    stru_BEMF_Check                          0x2000050c   Data          76  bemf_check0824.o(.bss)
    bRttBuf                                  0x20000558   Data        2050  segger_rtt.o(.bss)
    _SEGGER_RTT                              0x20000d5c   Data         168  segger_rtt.o(.bss)
    struFluxOB_Var                           0x20001214   Data          28  fluxobserve.o(.bss)
    AEMFRM                                   0x20001230   Data          28  fluxobserve.o(.bss)
    AEMFRT                                   0x2000124c   Data          28  fluxobserve.o(.bss)
    AFWR                                     0x20001268   Data          20  fluxobserve.o(.bss)
    __initial_sp                             0x20001580   Data           0  startup_lks32mc08x.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00006e70, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00006df0, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO         2596    RESET               startup_lks32mc08x.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         3309  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         3368    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         3371    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         3373    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         3375    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         3376    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         3383    .ARM.Collect$$$$0000000E  mc_p.l(entry12b.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         3378    .ARM.Collect$$$$0000000F  mc_p.l(entry10a.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         3380    .ARM.Collect$$$$00000011  mc_p.l(entry11a.o)
    0x000000d4   0x000000d4   0x00000004   Code   RO         3369    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d8   0x000000d8   0x00000028   Code   RO         2597    .text               startup_lks32mc08x.o
    0x00000100   0x00000100   0x0000002c   Code   RO         3312    .text               mc_p.l(uidiv.o)
    0x0000012c   0x0000012c   0x00000028   Code   RO         3314    .text               mc_p.l(idiv.o)
    0x00000154   0x00000154   0x00000060   Code   RO         3316    .text               mc_p.l(uldiv.o)
    0x000001b4   0x000001b4   0x0000004c   Code   RO         3318    .text               mc_p.l(ldiv.o)
    0x00000200   0x00000200   0x0000007a   Code   RO         3320    .text               mc_p.l(llmul.o)
    0x0000027a   0x0000027a   0x00000020   Code   RO         3322    .text               mc_p.l(llshl.o)
    0x0000029a   0x0000029a   0x00000026   Code   RO         3324    .text               mc_p.l(llsshr.o)
    0x000002c0   0x000002c0   0x00000024   Code   RO         3326    .text               mc_p.l(memcpya.o)
    0x000002e4   0x000002e4   0x00000024   Code   RO         3328    .text               mc_p.l(memseta.o)
    0x00000308   0x00000308   0x00000012   Code   RO         3332    .text               mc_p.l(strcpy.o)
    0x0000031a   0x0000031a   0x0000007a   Code   RO         3336    .text               mf_p.l(fmul.o)
    0x00000394   0x00000394   0x0000007c   Code   RO         3338    .text               mf_p.l(fdiv.o)
    0x00000410   0x00000410   0x00000168   Code   RO         3340    .text               mf_p.l(dadd.o)
    0x00000578   0x00000578   0x000000d0   Code   RO         3342    .text               mf_p.l(dmul.o)
    0x00000648   0x00000648   0x000000f0   Code   RO         3344    .text               mf_p.l(ddiv.o)
    0x00000738   0x00000738   0x00000016   Code   RO         3346    .text               mf_p.l(fflti.o)
    0x0000074e   0x0000074e   0x0000000e   Code   RO         3348    .text               mf_p.l(ffltui.o)
    0x0000075c   0x0000075c   0x00000028   Code   RO         3350    .text               mf_p.l(dflti.o)
    0x00000784   0x00000784   0x0000001c   Code   RO         3352    .text               mf_p.l(dfltui.o)
    0x000007a0   0x000007a0   0x0000002c   Code   RO         3354    .text               mf_p.l(dfltl.o)
    0x000007cc   0x000007cc   0x00000032   Code   RO         3356    .text               mf_p.l(ffixi.o)
    0x000007fe   0x000007fe   0x00000002   PAD
    0x00000800   0x00000800   0x00000048   Code   RO         3358    .text               mf_p.l(dfixi.o)
    0x00000848   0x00000848   0x0000003c   Code   RO         3360    .text               mf_p.l(dfixui.o)
    0x00000884   0x00000884   0x00000028   Code   RO         3362    .text               mf_p.l(f2d.o)
    0x000008ac   0x000008ac   0x00000028   Code   RO         3364    .text               mf_p.l(cdcmple.o)
    0x000008d4   0x000008d4   0x00000038   Code   RO         3366    .text               mf_p.l(d2f.o)
    0x0000090c   0x0000090c   0x00000022   Code   RO         3384    .text               mc_p.l(llushr.o)
    0x0000092e   0x0000092e   0x00000000   Code   RO         3386    .text               mc_p.l(iusefp.o)
    0x0000092e   0x0000092e   0x00000082   Code   RO         3387    .text               mf_p.l(fepilogue.o)
    0x000009b0   0x000009b0   0x000000be   Code   RO         3389    .text               mf_p.l(depilogue.o)
    0x00000a6e   0x00000a6e   0x00000002   PAD
    0x00000a70   0x00000a70   0x00000024   Code   RO         3393    .text               mc_p.l(init.o)
    0x00000a94   0x00000a94   0x000000f4   Code   RO          334    i.ADC0_IRQHandler   interrupt.o
    0x00000b88   0x00000b88   0x0000004c   Code   RO          172    i.ADC0_init         hardware_init.o
    0x00000bd4   0x00000bd4   0x0000002e   Code   RO         1425    i.ADC_ChannelConfig  lks32mc08x_adc.o
    0x00000c02   0x00000c02   0x00000002   PAD
    0x00000c04   0x00000c04   0x00000164   Code   RO         1429    i.ADC_Init          lks32mc08x_adc.o
    0x00000d68   0x00000d68   0x0000007c   Code   RO         1145    i.ADC_NormalModeCFG  signalchain_sample.o
    0x00000de4   0x00000de4   0x00000024   Code   RO         1431    i.ADC_StructInit    lks32mc08x_adc.o
    0x00000e08   0x00000e08   0x00000088   Code   RO         1078    i.AdcSampleCal      foc_drive.o
    0x00000e90   0x00000e90   0x000000b8   Code   RO         1198    i.Angle_Init_Process  mc_hall.o
    0x00000f48   0x00000f48   0x00000018   Code   RO          981    i.App2CoreCurTrans  app2core.o
    0x00000f60   0x00000f60   0x00000018   Code   RO          982    i.App2CoreFreqTrans  app2core.o
    0x00000f78   0x00000f78   0x00000024   Code   RO         2947    i.AutoFieldWeakReg  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00000f9c   0x00000f9c   0x000000f0   Code   RO         1283    i.BemfSwitch        bemf_check0824.o
    0x0000108c   0x0000108c   0x000000c4   Code   RO         1284    i.Bemf_CheckInit    bemf_check0824.o
    0x00001150   0x00001150   0x000001c0   Code   RO         1285    i.Bemf_CheckProcess  bemf_check0824.o
    0x00001310   0x00001310   0x00000078   Code   RO         3093    i.BrakeStateCheck   LKS08x_FluxOBS_Hall_V4p2.lib(onthefly.o)
    0x00001388   0x00001388   0x0000007c   Code   RO          335    i.CMP_IRQHandler    interrupt.o
    0x00001404   0x00001404   0x00000148   Code   RO         1599    i.CMP_Init          lks32mc08x_cmp.o
    0x0000154c   0x0000154c   0x0000000e   Code   RO         1600    i.CMP_StructInit    lks32mc08x_cmp.o
    0x0000155a   0x0000155a   0x00000044   Code   RO          173    i.CMP_init          hardware_init.o
    0x0000159e   0x0000159e   0x00000002   PAD
    0x000015a0   0x000015a0   0x000001c0   Code   RO         2836    i.Calc_Atan         LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x00001760   0x00001760   0x00000038   Code   RO          174    i.Clock_Init        hardware_init.o
    0x00001798   0x00001798   0x000001a0   Code   RO          688    i.CurrentAmplitudeCalc  fault_detection.o
    0x00001938   0x00001938   0x00000088   Code   RO          537    i.CurrentLoopAxisD_Set  state_machine.o
    0x000019c0   0x000019c0   0x00000088   Code   RO          538    i.CurrentLoopAxisQ_Set  state_machine.o
    0x00001a48   0x00001a48   0x00000090   Code   RO         1079    i.CurrentLoopReg    foc_drive.o
    0x00001ad8   0x00001ad8   0x00000134   Code   RO          465    i.CurrentOffsetCalibration  system_init.o
    0x00001c0c   0x00001c0c   0x00000044   Code   RO         1169    i.CurrentPIRegulator  pid_regulators.o
    0x00001c50   0x00001c50   0x000000b0   Code   RO          175    i.DAC_init          hardware_init.o
    0x00001d00   0x00001d00   0x0000000c   Code   RO         2252    i.DSP_Init          lks32mc08x_sys.o
    0x00001d0c   0x00001d0c   0x00000040   Code   RO         2948    i.DcVoltPerUnitCalc  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00001d4c   0x00001d4c   0x00000002   Code   RO          336    i.ENCODER0_IRQHandler  interrupt.o
    0x00001d4e   0x00001d4e   0x00000002   Code   RO          337    i.ENCODER1_IRQHandler  interrupt.o
    0x00001d50   0x00001d50   0x00000088   Code   RO         1080    i.FOC_InitstruParam  foc_drive.o
    0x00001dd8   0x00001dd8   0x00000194   Code   RO         1081    i.FOC_Model         foc_drive.o
    0x00001f6c   0x00001f6c   0x00000040   Code   RO         2949    i.FWLoopPIReg       LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00001fac   0x00001fac   0x0000005c   Code   RO          689    i.FaultCheck        fault_detection.o
    0x00002008   0x00002008   0x0000007c   Code   RO          690    i.FaultCurrentCheck  fault_detection.o
    0x00002084   0x00002084   0x00000138   Code   RO          692    i.FaultInit         fault_detection.o
    0x000021bc   0x000021bc   0x0000005c   Code   RO          695    i.FaultRecoverInit  fault_detection.o
    0x00002218   0x00002218   0x00000080   Code   RO          699    i.FaultVoltageCheck  fault_detection.o
    0x00002298   0x00002298   0x0000003a   Code   RO         3021    i.FindMaxIn3        LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x000022d2   0x000022d2   0x0000001c   Code   RO         2950    i.FindQNum          LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x000022ee   0x000022ee   0x00000002   PAD
    0x000022f0   0x000022f0   0x00000034   Code   RO          466    i.FluxObserveInit   system_init.o
    0x00002324   0x00002324   0x0000049c   Code   RO         2951    i.FluxObserveParaCalc  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x000027c0   0x000027c0   0x00000002   Code   RO          338    i.GPIO_IRQHandler   interrupt.o
    0x000027c2   0x000027c2   0x000000c6   Code   RO         1845    i.GPIO_Init         lks32mc08x_gpio.o
    0x00002888   0x00002888   0x0000010c   Code   RO         1847    i.GPIO_PinAFConfig  lks32mc08x_gpio.o
    0x00002994   0x00002994   0x0000000c   Code   RO         1854    i.GPIO_StructInit   lks32mc08x_gpio.o
    0x000029a0   0x000029a0   0x000000b8   Code   RO          177    i.GPIO_init         hardware_init.o
    0x00002a58   0x00002a58   0x00000064   Code   RO         1199    i.GetAvrgHallPeriod  mc_hall.o
    0x00002abc   0x00002abc   0x00000244   Code   RO         3112    i.GetHall_edgeAngle  LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x00002d00   0x00002d00   0x00000014   Code   RO          339    i.HALL_IRQHandler   interrupt.o
    0x00002d14   0x00002d14   0x00000140   Code   RO         1200    i.HALL_IRQProcess   mc_hall.o
    0x00002e54   0x00002e54   0x00000044   Code   RO         1948    i.HALL_Init         lks32mc08x_hall.o
    0x00002e98   0x00002e98   0x00000134   Code   RO         1201    i.HALL_InitHallMeasure  mc_hall.o
    0x00002fcc   0x00002fcc   0x000001c0   Code   RO         1202    i.HALL_Init_Electrical_Angle  mc_hall.o
    0x0000318c   0x0000318c   0x00000030   Code   RO          178    i.HALL_Perip_init   hardware_init.o
    0x000031bc   0x000031bc   0x00000024   Code   RO         1949    i.HALL_StructInit   lks32mc08x_hall.o
    0x000031e0   0x000031e0   0x00000080   Code   RO         1203    i.Hall_ElecAnglePWM_Process  mc_hall.o
    0x00003260   0x00003260   0x000000a0   Code   RO         1204    i.Hall_learn_Process  mc_hall.o
    0x00003300   0x00003300   0x000000e4   Code   RO          179    i.Hardware_init     hardware_init.o
    0x000033e4   0x000033e4   0x00000002   Code   RO          340    i.I2C0_IRQHandler   interrupt.o
    0x000033e6   0x000033e6   0x00000002   PAD
    0x000033e8   0x000033e8   0x00000098   Code   RO         3022    i.IPD_AngleCalc     LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00003480   0x00003480   0x000000f8   Code   RO         3023    i.IPD_RotorPosEst   LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00003578   0x00003578   0x0000002e   Code   RO          821    i.LowPassControl    powercalculation.o
    0x000035a6   0x000035a6   0x00000002   PAD
    0x000035a8   0x000035a8   0x0000006c   Code   RO          180    i.MCPWM0_RegUpdate  hardware_init.o
    0x00003614   0x00003614   0x000002e0   Code   RO         2125    i.MCPWM_Init        lks32mc08x_mcpwm.o
    0x000038f4   0x000038f4   0x0000000e   Code   RO         2126    i.MCPWM_StructInit  lks32mc08x_mcpwm.o
    0x00003902   0x00003902   0x00000002   PAD
    0x00003904   0x00003904   0x000000c4   Code   RO          181    i.MCPWM_init        hardware_init.o
    0x000039c8   0x000039c8   0x000000c0   Code   RO         2952    i.ModuCircle_Limitation  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00003a88   0x00003a88   0x00000010   Code   RO         2953    i.OnTheFlyDetectInit  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00003a98   0x00003a98   0x00000070   Code   RO         3094    i.OnTheFlyDetectPro  LKS08x_FluxOBS_Hall_V4p2.lib(onthefly.o)
    0x00003b08   0x00003b08   0x00000094   Code   RO         2954    i.OpenCloseAngleSwitch  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00003b9c   0x00003b9c   0x0000004a   Code   RO          788    i.OpenLoopCurRamp   process_control.o
    0x00003be6   0x00003be6   0x00000002   PAD
    0x00003be8   0x00003be8   0x0000003c   Code   RO          182    i.PGA_init          hardware_init.o
    0x00003c24   0x00003c24   0x0000003c   Code   RO         2127    i.PWMOutputs        lks32mc08x_mcpwm.o
    0x00003c60   0x00003c60   0x00000008   Code   RO          341    i.PWRDN_IRQHandler  interrupt.o
    0x00003c68   0x00003c68   0x00000060   Code   RO         3024    i.PoloEstCurSample  LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00003cc8   0x00003cc8   0x00000052   Code   RO          822    i.PowerCalc         powercalculation.o
    0x00003d1a   0x00003d1a   0x00000012   Code   RO         1205    i.ReadHallState     mc_hall.o
    0x00003d2c   0x00003d2c   0x0000003c   Code   RO         3246    i.Read_Trim         lks32mc08x_nvr.lib(lks32mc08x_nvr.o)
    0x00003d68   0x00003d68   0x00000094   Code   RO         2604    i.SEGGER_RTT_ConfigUpBuffer  segger_rtt.o
    0x00003dfc   0x00003dfc   0x00000048   Code   RO         2621    i.SEGGER_RTT_Write  segger_rtt.o
    0x00003e44   0x00003e44   0x00000084   Code   RO         2622    i.SEGGER_RTT_WriteNoLock  segger_rtt.o
    0x00003ec8   0x00003ec8   0x00000002   Code   RO          342    i.SPI0_IRQHandler   interrupt.o
    0x00003eca   0x00003eca   0x00000002   PAD
    0x00003ecc   0x00003ecc   0x0000013c   Code   RO         2839    i.SVPWM_2ShuntGEN   LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x00004008   0x00004008   0x000001ec   Code   RO         1146    i.SVPWM_2ShuntGetPhaseCurrent  signalchain_sample.o
    0x000041f4   0x000041f4   0x00000034   Code   RO         2253    i.SYS_AnalogModuleClockCmd  lks32mc08x_sys.o
    0x00004228   0x00004228   0x00000030   Code   RO         2260    i.SYS_ModuleClockCmd  lks32mc08x_sys.o
    0x00004258   0x00004258   0x0000007c   Code   RO         2264    i.SYS_VolSelModule  lks32mc08x_sys.o
    0x000042d4   0x000042d4   0x00000040   Code   RO         2265    i.SYS_VolSelModuleEnableIRQ  lks32mc08x_sys.o
    0x00004314   0x00004314   0x00000088   Code   RO         2266    i.SYS_VolSelModuleIRQ  lks32mc08x_sys.o
    0x0000439c   0x0000439c   0x00000018   Code   RO          185    i.SoftDelay         hardware_init.o
    0x000043b4   0x000043b4   0x00000018   Code   RO         2269    i.SoftDelay         lks32mc08x_sys.o
    0x000043cc   0x000043cc   0x00000048   Code   RO         1082    i.SpeedLoopReg      foc_drive.o
    0x00004414   0x00004414   0x0000003a   Code   RO          539    i.SpeedLoop_Set     state_machine.o
    0x0000444e   0x0000444e   0x000000f4   Code   RO         1171    i.SpeedPIRegulator  pid_regulators.o
    0x00004542   0x00004542   0x00000036   Code   RO          790    i.SpeedReferenceGen  process_control.o
    0x00004578   0x00004578   0x000000ac   Code   RO          540    i.StateAlign        state_machine.o
    0x00004624   0x00004624   0x000001d0   Code   RO          541    i.StateBemfDirCheck  state_machine.o
    0x000047f4   0x000047f4   0x00000060   Code   RO          542    i.StateBemfStop     state_machine.o
    0x00004854   0x00004854   0x000001ac   Code   RO          543    i.StateCharge       state_machine.o
    0x00004a00   0x00004a00   0x00000160   Code   RO          544    i.StateDirCheck     state_machine.o
    0x00004b60   0x00004b60   0x00000014   Code   RO          545    i.StateFault        state_machine.o
    0x00004b74   0x00004b74   0x00000110   Code   RO          546    i.StateHallRun      state_machine.o
    0x00004c84   0x00004c84   0x00000290   Code   RO          547    i.StateInit         state_machine.o
    0x00004f14   0x00004f14   0x00000188   Code   RO          548    i.StateOpen         state_machine.o
    0x0000509c   0x0000509c   0x00000090   Code   RO          549    i.StatePosSeek      state_machine.o
    0x0000512c   0x0000512c   0x000001b0   Code   RO          550    i.StateRun          state_machine.o
    0x000052dc   0x000052dc   0x00000090   Code   RO          551    i.StateStop         state_machine.o
    0x0000536c   0x0000536c   0x00000002   Code   RO         1083    i.StopMotorImmdly   foc_drive.o
    0x0000536e   0x0000536e   0x00000002   Code   RO          344    i.SysTick_Handler   interrupt.o
    0x00005370   0x00005370   0x0000011c   Code   RO          552    i.Sys_State_Machine  state_machine.o
    0x0000548c   0x0000548c   0x00000008   Code   RO          186    i.SystemInit        hardware_init.o
    0x00005494   0x00005494   0x000000d4   Code   RO         2415    i.TIM_TimerCmd      lks32mc08x_tim.o
    0x00005568   0x00005568   0x00000144   Code   RO         2416    i.TIM_TimerInit     lks32mc08x_tim.o
    0x000056ac   0x000056ac   0x00000028   Code   RO         2417    i.TIM_TimerStrutInit  lks32mc08x_tim.o
    0x000056d4   0x000056d4   0x000000a0   Code   RO          505    i.Task_Scheduler    task_scheduler.o
    0x00005774   0x00005774   0x0000003c   Code   RO         2568    i.TempSensor_Init   lks32mc08x_tmp.o
    0x000057b0   0x000057b0   0x00000030   Code   RO          952    i.Trig_Functions    mc_math.o
    0x000057e0   0x000057e0   0x00000002   Code   RO          345    i.UART0_IRQHandler  interrupt.o
    0x000057e2   0x000057e2   0x00000002   Code   RO          346    i.UART1_IRQHandler  interrupt.o
    0x000057e4   0x000057e4   0x00000104   Code   RO         2507    i.UART_Init         lks32mc08x_uart.o
    0x000058e8   0x000058e8   0x0000001e   Code   RO         2512    i.UART_StructInit   lks32mc08x_uart.o
    0x00005906   0x00005906   0x00000002   PAD
    0x00005908   0x00005908   0x0000002c   Code   RO          189    i.UART_init         hardware_init.o
    0x00005934   0x00005934   0x00000030   Code   RO          347    i.UTIMER0_IRQHandler  interrupt.o
    0x00005964   0x00005964   0x00000002   Code   RO          348    i.UTIMER1_IRQHandler  interrupt.o
    0x00005966   0x00005966   0x00000002   Code   RO          349    i.UTIMER2_IRQHandler  interrupt.o
    0x00005968   0x00005968   0x00000002   Code   RO          350    i.UTIMER3_IRQHandler  interrupt.o
    0x0000596a   0x0000596a   0x00000002   PAD
    0x0000596c   0x0000596c   0x00000050   Code   RO          190    i.UTimer_init       hardware_init.o
    0x000059bc   0x000059bc   0x0000002c   Code   RO          990    i.User2AppAngleTrans  app2core.o
    0x000059e8   0x000059e8   0x0000002c   Code   RO          991    i.User2AppCurTrans  app2core.o
    0x00005a14   0x00005a14   0x0000002c   Code   RO          992    i.User2AppFreqTrans  app2core.o
    0x00005a40   0x00005a40   0x00000050   Code   RO          993    i.User2AppVolTrans  app2core.o
    0x00005a90   0x00005a90   0x000001d8   Code   RO         1206    i.Verify_Hall_State  mc_hall.o
    0x00005c68   0x00005c68   0x0000004c   Code   RO         3025    i.VolPulsePwmSet    LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00005cb4   0x00005cb4   0x00000118   Code   RO          902    i.VspSpeedScan      speedscan.o
    0x00005dcc   0x00005dcc   0x00000070   Code   RO         2626    i._DoInit           segger_rtt.o
    0x00005e3c   0x00005e3c   0x0000001c   Code   RO         2627    i._GetAvailWriteSpace  segger_rtt.o
    0x00005e58   0x00005e58   0x00000080   Code   RO         2629    i._WriteBlocking    segger_rtt.o
    0x00005ed8   0x00005ed8   0x0000004a   Code   RO         2630    i._WriteNoCheck     segger_rtt.o
    0x00005f22   0x00005f22   0x0000002e   Code   RO         3391    i.__ARM_clz         mf_p.l(depilogue.o)
    0x00005f50   0x00005f50   0x00000030   Code   RO         3015    i.__ARM_common_ll_mulss  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00005f80   0x00005f80   0x00000030   Code   RO         3013    i.__ARM_common_ll_muluu  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00005fb0   0x00005fb0   0x0000001a   Code   RO         2885    i.__ARM_common_switch8  LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x00005fca   0x00005fca   0x00000002   PAD
    0x00005fcc   0x00005fcc   0x00000018   Code   RO         2272    i.__NVIC_ClearPendingIRQ  lks32mc08x_sys.o
    0x00005fe4   0x00005fe4   0x00000020   Code   RO         2273    i.__NVIC_DisableIRQ  lks32mc08x_sys.o
    0x00006004   0x00006004   0x00000020   Code   RO          191    i.__NVIC_EnableIRQ  hardware_init.o
    0x00006024   0x00006024   0x00000078   Code   RO          192    i.__NVIC_SetPriority  hardware_init.o
    0x0000609c   0x0000609c   0x00000078   Code   RO         2274    i.__NVIC_SetPriority  lks32mc08x_sys.o
    0x00006114   0x00006114   0x0000000e   Code   RO         3396    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00006122   0x00006122   0x00000002   Code   RO         3397    i.__scatterload_null  mc_p.l(handlers.o)
    0x00006124   0x00006124   0x0000000e   Code   RO         3398    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00006132   0x00006132   0x00000002   PAD
    0x00006134   0x00006134   0x00000094   Code   RO         3113    i.calc_first_ElectAngle  LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x000061c8   0x000061c8   0x00000358   Code   RO         3114    i.check_hall_state  LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x00006520   0x00006520   0x00000068   Code   RO         3115    i.closeLoopAnglePLL  LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x00006588   0x00006588   0x00000108   Code   RO         3116    i.closeLoopAnglePLLInit  LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x00006690   0x00006690   0x00000160   Code   RO         1207    i.hall_comm_VariableInit  mc_hall.o
    0x000067f0   0x000067f0   0x000000e4   Code   RO         3118    i.hall_repare_process  LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x000068d4   0x000068d4   0x00000184   Code   RO         3119    i.learn_hall_proc   LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x00006a58   0x00006a58   0x00000012   Code   RO         2842    i.lowPass_filter    LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x00006a6a   0x00006a6a   0x00000010   Code   RO          931    i.main              main.o
    0x00006a7a   0x00006a7a   0x00000028   Code   RO         3120    i.reduceToqueAnglePll  LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x00006aa2   0x00006aa2   0x00000002   PAD
    0x00006aa4   0x00006aa4   0x0000002c   Code   RO         3026    i.soft_Trg_ADC      LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00006ad0   0x00006ad0   0x00000044   Code   RO          467    i.sys_init          system_init.o
    0x00006b14   0x00006b14   0x0000006c   Data   RO            4    .constdata          global_variable.o
    0x00006b80   0x00006b80   0x00000030   Data   RO         1208    .constdata          mc_hall.o
    0x00006bb0   0x00006bb0   0x00000220   Data   RO         2843    .constdata          LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x00006dd0   0x00006dd0   0x00000020   Data   RO         3395    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00006df0, Size: 0x00001580, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00006df0   0x00000006   Data   RW            5    .data               global_variable.o
    0x20000006   0x00006df6   0x00000006   Data   RW          351    .data               interrupt.o
    0x2000000c   0x00006dfc   0x0000000a   Data   RW          701    .data               fault_detection.o
    0x20000016   0x00006e06   0x00000002   Data   RW         1084    .data               foc_drive.o
    0x20000018   0x00006e08   0x00000004   Data   RW         2276    .data               lks32mc08x_sys.o
    0x2000001c   0x00006e0c   0x00000004   Data   RW         2569    .data               lks32mc08x_tmp.o
    0x20000020   0x00006e10   0x00000048   Data   RW         2958    .data               LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x20000068   0x00006e58   0x00000010   Data   RW         3095    .data               LKS08x_FluxOBS_Hall_V4p2.lib(onthefly.o)
    0x20000078   0x00006e68   0x00000006   Data   RW         3122    .data               LKS08x_FluxOBS_Hall_V4p2.lib(lib_mc_hall.o)
    0x2000007e   0x00006e6e   0x00000002   PAD
    0x20000080        -       0x0000037c   Zero   RW            3    .bss                global_variable.o
    0x200003fc        -       0x00000012   Zero   RW          553    .bss                state_machine.o
    0x2000040e   0x00006e6e   0x00000002   PAD
    0x20000410        -       0x0000008a   Zero   RW          700    .bss                fault_detection.o
    0x2000049a   0x00006e6e   0x00000006   PAD
    0x200004a0        -       0x0000006c   Zero   RW          829    .bss                powercalculation.o
    0x2000050c        -       0x0000004c   Zero   RW         1286    .bss                bemf_check0824.o
    0x20000558        -       0x00000cbc   Zero   RW         2631    .bss                segger_rtt.o
    0x20001214        -       0x00000068   Zero   RW         2957    .bss                LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x2000127c   0x00006e6e   0x00000004   PAD
    0x20001280        -       0x00000300   Zero   RW         2594    STACK               startup_lks32mc08x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       260         52          0          0          0       3554   app2core.o
       884        106          0          0         76      11386   bemf_check0824.o
      1164        150          0         10        138       6663   fault_detection.o
       894        112          0          2          0      10797   foc_drive.o
         0          0        108          6        892      63666   global_variable.o
      1508        142          0          0          0      20449   hardware_init.o
       466         82          0          6          0       8592   interrupt.o
       438          8          0          0          0       2516   lks32mc08x_adc.o
       342         14          0          0          0       1668   lks32mc08x_cmp.o
       478         28          0          0          0       2709   lks32mc08x_gpio.o
       104          8          0          0          0       1610   lks32mc08x_hall.o
       810         34          0          0          0       6605   lks32mc08x_mcpwm.o
       636         84          0          4          0      14705   lks32mc08x_sys.o
       576          8          0          0          0       2652   lks32mc08x_tim.o
        60         14          0          4          0        868   lks32mc08x_tmp.o
       290         22          0          0          0       1910   lks32mc08x_uart.o
        16          0          0          0          0        475   main.o
      2490         98         48          0          0      22304   mc_hall.o
        48          6          0          0          0        605   mc_math.o
       312          0          0          0          0       1968   pid_regulators.o
       128          0          0          0        108       3175   powercalculation.o
       128          0          0          0          0       1610   process_control.o
       694         54          0          0       3260       9218   segger_rtt.o
       616         44          0          0          0       2202   signalchain_sample.o
       280         38          0          0          0        619   speedscan.o
        40         14        192          0        768        700   startup_lks32mc08x.o
      4186        440          0          0         18      15183   state_machine.o
       428         60          0          0          0       1936   system_init.o
       160         26          0          0          0       2365   task_scheduler.o

    ----------------------------------------------------------------------
     18454       1644        380         32       5268     222710   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        18          0          0          0          8          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

      1824        170          0         72        104       8335   fluxobserve.o
       674         92          0          0          0       3722   lib_ipd.o
      2608         56          0          6          0      22058   lib_mc_hall.o
       808         20        544          0          0      17072   lib_svpwm.o
       232         32          0         16          0       1386   onthefly.o
        60         10          0          0          0        712   lks32mc08x_nvr.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         4          0          0          0          0          0   entry12b.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        40          0          0          0          0         72   idiv.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        76          0          0          0          0         76   ldiv.o
       122          0          0          0          0         84   llmul.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
        18          0          0          0          0         60   strcpy.o
        44          0          0          0          0         72   uidiv.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdcmple.o
        56          0          0          0          0         68   d2f.o
       360          6          0          0          0        140   dadd.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        72         10          0          0          0         72   dfixi.o
        60         10          0          0          0         68   dfixui.o
        40          6          0          0          0         68   dflti.o
        44          6          0          0          0         72   dfltl.o
        28          4          0          0          0         68   dfltui.o
       208          6          0          0          0         88   dmul.o
        40          0          0          0          0         60   f2d.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        50          0          0          0          0         60   ffixi.o
        22          0          0          0          0         68   fflti.o
        14          0          0          0          0         68   ffltui.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      8766        452        544         96        108      55721   Library Totals
        12          0          0          2          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6146        370        544         94        104      52573   LKS08x_FluxOBS_Hall_V4p2.lib
        60         10          0          0          0        712   lks32mc08x_nvr.lib
       662         16          0          0          0        880   mc_p.l
      1886         56          0          0          0       1556   mf_p.l

    ----------------------------------------------------------------------
      8766        452        544         96        108      55721   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     27220       2096        924        128       5376     270479   Grand Totals
     27220       2096        924        128       5376     270479   ELF Image Totals
     27220       2096        924        128          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                28144 (  27.48kB)
    Total RW  Size (RW Data + ZI Data)              5504 (   5.38kB)
    Total ROM Size (Code + RO Data + RW Data)      28272 (  27.61kB)

==============================================================================

