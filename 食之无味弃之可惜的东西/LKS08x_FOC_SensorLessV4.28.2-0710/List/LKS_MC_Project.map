Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    hardware_init.o(i.ADC0_init) refers to lks32mc08x_adc.o(i.ADC_StructInit) for ADC_StructInit
    hardware_init.o(i.ADC0_init) refers to lks32mc08x_adc.o(i.ADC_Init) for ADC_Init
    hardware_init.o(i.ADC0_init) refers to signalchain_sample.o(i.ADC_NormalModeCFG) for ADC_NormalModeCFG
    hardware_init.o(i.CMP_init) refers to lks32mc08x_cmp.o(i.CMP_StructInit) for CMP_StructInit
    hardware_init.o(i.CMP_init) refers to lks32mc08x_cmp.o(i.CMP_Init) for CMP_Init
    hardware_init.o(i.Clock_Init) refers to lks32mc08x_sys.o(i.SYS_VolSelModule) for SYS_VolSelModule
    hardware_init.o(i.Clock_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.DAC_init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    hardware_init.o(i.DAC_init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    hardware_init.o(i.DebugPWM_OutputFunction) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    hardware_init.o(i.GPIO_init) refers to lks32mc08x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    hardware_init.o(i.HALL_Perip_init) refers to lks32mc08x_hall.o(i.HALL_StructInit) for HALL_StructInit
    hardware_init.o(i.HALL_Perip_init) refers to lks32mc08x_hall.o(i.HALL_Init) for HALL_Init
    hardware_init.o(i.Hardware_init) refers to lks32mc08x_sys.o(i.DSP_Init) for DSP_Init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.UART_init) for UART_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.MCPWM_init) for MCPWM_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.UTimer_init) for UTimer_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.GPIO_init) for GPIO_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.DAC_init) for DAC_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.PGA_init) for PGA_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.CMP_init) for CMP_init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.HALL_Perip_init) for HALL_Perip_init
    hardware_init.o(i.Hardware_init) refers to lks32mc08x_tmp.o(i.TempSensor_Init) for TempSensor_Init
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.NVIC_SetPriority) for NVIC_SetPriority
    hardware_init.o(i.Hardware_init) refers to hardware_init.o(i.NVIC_EnableIRQ) for NVIC_EnableIRQ
    hardware_init.o(i.Hardware_init) refers to segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) for SEGGER_RTT_ConfigUpBuffer
    hardware_init.o(i.Hardware_init) refers to lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ) for SYS_VolSelModuleEnableIRQ
    hardware_init.o(i.Hardware_init) refers to segger_rtt.o(.bss) for bRttBuf
    hardware_init.o(i.MCPWM0_RegUpdate) refers to global_variable.o(.bss) for struFOC_CurrLoop
    hardware_init.o(i.MCPWM_init) refers to lks32mc08x_mcpwm.o(i.MCPWM_StructInit) for MCPWM_StructInit
    hardware_init.o(i.MCPWM_init) refers to lks32mc08x_mcpwm.o(i.MCPWM_Init) for MCPWM_Init
    hardware_init.o(i.MCPWM_init) refers to global_variable.o(.bss) for mIPD_CtrProc
    hardware_init.o(i.PGA_init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    hardware_init.o(i.Reg_Reset) refers to hardware_init.o(i.Reg_Clr) for Reg_Clr
    hardware_init.o(i.SystemInit) refers to hardware_init.o(i.Clock_Init) for Clock_Init
    hardware_init.o(i.UART_init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hardware_init.o(i.UART_init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hardware_init.o(i.UTimer_init) refers to lks32mc08x_tim.o(i.TIM_TimerStrutInit) for TIM_TimerStrutInit
    hardware_init.o(i.UTimer_init) refers to lks32mc08x_tim.o(i.TIM_TimerInit) for TIM_TimerInit
    hardware_init.o(i.UTimer_init) refers to lks32mc08x_tim.o(i.TIM_TimerCmd) for TIM_TimerCmd
    interrupt.o(i.ADC0_IRQHandler) refers to foc_drive.o(i.FOC_Model) for FOC_Model
    interrupt.o(i.ADC0_IRQHandler) refers to powercalculation.o(i.PowerCalc) for PowerCalc
    interrupt.o(i.ADC0_IRQHandler) refers to fault_detection.o(i.CurrentAmplitudeCalc) for CurrentAmplitudeCalc
    interrupt.o(i.ADC0_IRQHandler) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    interrupt.o(i.ADC0_IRQHandler) refers to global_variable.o(.bss) for struFOC_CtrProc
    interrupt.o(i.ADC0_IRQHandler) refers to powercalculation.o(.bss) for struPower
    interrupt.o(i.ADC0_IRQHandler) refers to fault_detection.o(.bss) for struCurrentAmplitude
    interrupt.o(i.ADC0_IRQHandler) refers to fault_detection.o(.data) for struImaxCurrent
    interrupt.o(i.ADC0_IRQHandler) refers to interrupt.o(.data) for Rttstru
    interrupt.o(i.CMP_IRQHandler) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    interrupt.o(i.CMP_IRQHandler) refers to fault_detection.o(.data) for stru_Faults
    interrupt.o(i.PWRDN_IRQHandler) refers to lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ) for SYS_VolSelModuleIRQ
    interrupt.o(i.UTIMER0_IRQHandler) refers to global_variable.o(.bss) for struTaskScheduler
    system_init.o(i.CurrentOffsetCalibration) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    system_init.o(i.CurrentOffsetCalibration) refers to signalchain_sample.o(i.ADC_NormalModeCFG) for ADC_NormalModeCFG
    system_init.o(i.CurrentOffsetCalibration) refers to global_variable.o(.bss) for struFOC_CurrLoop
    system_init.o(i.CurrentOffsetCalibration) refers to fault_detection.o(.data) for stru_Faults
    system_init.o(i.FluxObserveInit) refers to fluxobserve.o(i.FluxObserveParaCalc) for FluxObserveParaCalc
    system_init.o(i.FluxObserveInit) refers to foc_drive.o(i.FOC_InitstruParam) for FOC_InitstruParam
    system_init.o(i.FluxObserveInit) refers to global_variable.o(.bss) for struFluxOB_Param
    system_init.o(i.FluxObserveInit) refers to global_variable.o(.constdata) for struMotorParam
    system_init.o(i.sys_init) refers to fault_detection.o(i.FaultInit) for FaultInit
    system_init.o(i.sys_init) refers to fault_detection.o(i.FaultRecoverInit) for FaultRecoverInit
    system_init.o(i.sys_init) refers to system_init.o(i.CurrentOffsetCalibration) for CurrentOffsetCalibration
    system_init.o(i.sys_init) refers to system_init.o(i.FluxObserveInit) for FluxObserveInit
    system_init.o(i.sys_init) refers to bemf_check0824.o(i.Bemf_CheckInit) for Bemf_CheckInit
    system_init.o(i.sys_init) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    system_init.o(i.sys_init) refers to global_variable.o(.constdata) for sVersion
    system_init.o(i.sys_init) refers to global_variable.o(.bss) for struTaskScheduler
    task_scheduler.o(i.Task_Scheduler) refers to fault_detection.o(i.FaultCheck) for FaultCheck
    task_scheduler.o(i.Task_Scheduler) refers to state_machine.o(i.Sys_State_Machine) for Sys_State_Machine
    task_scheduler.o(i.Task_Scheduler) refers to fluxobserve.o(i.DcVoltPerUnitCalc) for DcVoltPerUnitCalc
    task_scheduler.o(i.Task_Scheduler) refers to speedscan.o(i.VspSpeedScan) for VspSpeedScan
    task_scheduler.o(i.Task_Scheduler) refers to global_variable.o(.bss) for struTaskScheduler
    task_scheduler.o(i.Task_Scheduler) refers to fault_detection.o(.data) for stru_Faults
    state_machine.o(i.CurrentLoopAxisD_Set) refers to global_variable.o(.bss) for struFOC_CurrLoop
    state_machine.o(i.CurrentLoopAxisQ_Set) refers to global_variable.o(.bss) for struFOC_CurrLoop
    state_machine.o(i.StateAlign) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateAlign) refers to process_control.o(i.OpenLoopCurRamp) for OpenLoopCurRamp
    state_machine.o(i.StateAlign) refers to global_variable.o(.bss) for struMotorSpeed
    state_machine.o(i.StateAlign) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateBemfDirCheck) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateBemfDirCheck) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateBemfDirCheck) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    state_machine.o(i.StateBemfDirCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateBemfDirCheck) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateBemfDirCheck) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateBemfDirCheck) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    state_machine.o(i.StateBemfStop) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateBemfStop) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateBemfStop) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateBemfStop) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateCharge) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateCharge) refers to hardware_init.o(i.MCPWM_init) for MCPWM_init
    state_machine.o(i.StateCharge) refers to state_machine.o(i.StateInit) for StateInit
    state_machine.o(i.StateCharge) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateCharge) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StateCharge) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateDirCheck) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateDirCheck) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateDirCheck) refers to global_variable.o(.bss) for struFOC_CurrLoop
    state_machine.o(i.StateDirCheck) refers to fluxobserve.o(.data) for s16UtRohRef
    state_machine.o(i.StateDirCheck) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateFault) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateFault) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateHallRun) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateHallRun) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateHallRun) refers to state_machine.o(i.CurrentLoopAxisD_Set) for CurrentLoopAxisD_Set
    state_machine.o(i.StateHallRun) refers to state_machine.o(i.CurrentLoopAxisQ_Set) for CurrentLoopAxisQ_Set
    state_machine.o(i.StateHallRun) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.StateInit) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.StateInit) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    state_machine.o(i.StateInit) refers to fluxobserve.o(i.OnTheFlyDetectInit) for OnTheFlyDetectInit
    state_machine.o(i.StateInit) refers to dfltui.o(.text) for __aeabi_ui2d
    state_machine.o(i.StateInit) refers to dmul.o(.text) for __aeabi_dmul
    state_machine.o(i.StateInit) refers to dfixui.o(.text) for __aeabi_d2uiz
    state_machine.o(i.StateInit) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateInit) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateInit) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateInit) refers to fluxobserve.o(i.PmsmFluxObIni) for PmsmFluxObIni
    state_machine.o(i.StateInit) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    state_machine.o(i.StateInit) refers to fault_detection.o(i.FaultInit) for FaultInit
    state_machine.o(i.StateInit) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    state_machine.o(i.StateInit) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StateInit) refers to fluxobserve.o(.bss) for AFWR
    state_machine.o(i.StateInit) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateOpen) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    state_machine.o(i.StateOpen) refers to process_control.o(i.SpeedReferenceGen) for SpeedReferenceGen
    state_machine.o(i.StateOpen) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    state_machine.o(i.StateOpen) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StatePosSeek) refers to lib_ipd.o(i.IPD_RotorPosEst) for IPD_RotorPosEst
    state_machine.o(i.StatePosSeek) refers to hardware_init.o(i.ADC0_init) for ADC0_init
    state_machine.o(i.StatePosSeek) refers to hardware_init.o(i.MCPWM_init) for MCPWM_init
    state_machine.o(i.StatePosSeek) refers to global_variable.o(.bss) for mIPD_CtrProc
    state_machine.o(i.StateRun) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    state_machine.o(i.StateRun) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    state_machine.o(i.StateRun) refers to state_machine.o(i.CurrentLoopAxisD_Set) for CurrentLoopAxisD_Set
    state_machine.o(i.StateRun) refers to state_machine.o(i.CurrentLoopAxisQ_Set) for CurrentLoopAxisQ_Set
    state_machine.o(i.StateRun) refers to global_variable.o(.bss) for struAppCommData
    state_machine.o(i.StateRun) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.StateRun) refers to state_machine.o(.data) for Iq_Set
    state_machine.o(i.StateStop) refers to app2core.o(i.User2AppAngleTrans) for User2AppAngleTrans
    state_machine.o(i.StateStop) refers to global_variable.o(.bss) for mOnTheFlyDetect
    state_machine.o(i.StateStop) refers to state_machine.o(.bss) for struTime
    state_machine.o(i.Sys_State_Machine) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateInit) for StateInit
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateCharge) for StateCharge
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateBemfDirCheck) for StateBemfDirCheck
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateDirCheck) for StateDirCheck
    state_machine.o(i.Sys_State_Machine) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StatePosSeek) for StatePosSeek
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateAlign) for StateAlign
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateOpen) for StateOpen
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateRun) for StateRun
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateHallRun) for StateHallRun
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateStop) for StateStop
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateBemfStop) for StateBemfStop
    state_machine.o(i.Sys_State_Machine) refers to state_machine.o(i.StateFault) for StateFault
    state_machine.o(i.Sys_State_Machine) refers to global_variable.o(.bss) for struFOC_CtrProc
    state_machine.o(i.Sys_State_Machine) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.CurrentAmplitudeCalc) refers to fault_detection.o(.bss) for struCurrentAmplitude
    fault_detection.o(i.FaultCheck) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    fault_detection.o(i.FaultCheck) refers to fault_detection.o(i.FaultVoltageCheck) for FaultVoltageCheck
    fault_detection.o(i.FaultCheck) refers to fault_detection.o(.data) for t_nFlagCheck
    fault_detection.o(i.FaultCheck) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fault_detection.o(i.FaultCheck) refers to fault_detection.o(.bss) for struFaultVoltTime
    fault_detection.o(i.FaultCurrentCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultCurrentCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultCurrentCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultEmptyCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultEmptyCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultEmptyCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultInit) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.User2AppVolTrans) for User2AppVolTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    fault_detection.o(i.FaultInit) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    fault_detection.o(i.FaultInit) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultInit) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fault_detection.o(i.FaultInit) refers to fault_detection.o(.data) for struImaxCurrent
    fault_detection.o(i.FaultPhaseCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultPhaseCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultPhaseCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultRecover) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultRecover) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fault_detection.o(i.FaultRecover) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultRecoverInit) refers to app2core.o(i.User2AppVolTrans) for User2AppVolTrans
    fault_detection.o(i.FaultRecoverInit) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultRecoverInit) refers to fault_detection.o(.bss) for struFaultEmptyTime
    fault_detection.o(i.FaultStallCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultStallCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultStallCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultStartCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultStartCheck) refers to global_variable.o(.bss) for struFOC_CtrProc
    fault_detection.o(i.FaultStartCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultStartCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultTempCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultTempCheck) refers to fault_detection.o(.data) for stru_Faults
    fault_detection.o(i.FaultVoltageCheck) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    fault_detection.o(i.FaultVoltageCheck) refers to fault_detection.o(.bss) for stru_FaultValue
    fault_detection.o(i.FaultVoltageCheck) refers to fault_detection.o(.data) for stru_Faults
    process_control.o(i.ReadLKS08X_UniqueID) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    powercalculation.o(i.LowPassControl) refers to llsshr.o(.text) for __aeabi_lasr
    powercalculation.o(i.PowerCalc) refers to powercalculation.o(i.LowPassControl) for LowPassControl
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    powercalculation.o(i.PowerLoopInit) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    powercalculation.o(i.PowerLoopInit) refers to powercalculation.o(.bss) for struPower
    powercalculation.o(i.PowerLoopReg) refers to powercalculation.o(i.PowerPIRegulator) for PowerPIRegulator
    powercalculation.o(i.PowerLoopReg) refers to global_variable.o(.bss) for struFOC_CurrLoop
    speedscan.o(i.KEY_Scan) refers to lks32mc08x_gpio.o(i.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    speedscan.o(i.KEY_Scan) refers to global_variable.o(.bss) for struFOC_CtrProc
    speedscan.o(i.VspSpeedScan) refers to dflti.o(.text) for __aeabi_i2d
    speedscan.o(i.VspSpeedScan) refers to cdcmple.o(.text) for __aeabi_cdcmple
    speedscan.o(i.VspSpeedScan) refers to dadd.o(.text) for __aeabi_dsub
    speedscan.o(i.VspSpeedScan) refers to dmul.o(.text) for __aeabi_dmul
    speedscan.o(i.VspSpeedScan) refers to dfixi.o(.text) for __aeabi_d2iz
    speedscan.o(i.VspSpeedScan) refers to fflti.o(.text) for __aeabi_i2f
    speedscan.o(i.VspSpeedScan) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    speedscan.o(i.VspSpeedScan) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    speedscan.o(i.VspSpeedScan) refers to global_variable.o(.bss) for struAppCommData
    speedscan.o(i.VspSpeedScan) refers to fault_detection.o(.data) for stru_Faults
    main.o(i.main) refers to hardware_init.o(i.Hardware_init) for Hardware_init
    main.o(i.main) refers to system_init.o(i.sys_init) for sys_init
    main.o(i.main) refers to task_scheduler.o(i.Task_Scheduler) for Task_Scheduler
    app2core.o(i.App2CoreAngleTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreCurTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreFreqTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreVdcTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.App2CoreVolTrans) refers to global_variable.o(.bss) for struApp2Core
    app2core.o(i.Core2AppAngleTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppCurTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppFreqTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppVdcTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.Core2AppVolTrans) refers to global_variable.o(.bss) for struCore2App
    app2core.o(i.User2AppAngleTrans) refers to ffltui.o(.text) for __aeabi_ui2f
    app2core.o(i.User2AppAngleTrans) refers to fmul.o(.text) for __aeabi_fmul
    app2core.o(i.User2AppAngleTrans) refers to ffixi.o(.text) for __aeabi_f2iz
    app2core.o(i.User2AppAngleTrans) refers to global_variable.o(.bss) for struUser2App
    app2core.o(i.User2AppCurTrans) refers to ffltui.o(.text) for __aeabi_ui2f
    app2core.o(i.User2AppCurTrans) refers to fmul.o(.text) for __aeabi_fmul
    app2core.o(i.User2AppCurTrans) refers to ffixi.o(.text) for __aeabi_f2iz
    app2core.o(i.User2AppCurTrans) refers to global_variable.o(.bss) for struUser2App
    app2core.o(i.User2AppFreqTrans) refers to ffltui.o(.text) for __aeabi_ui2f
    app2core.o(i.User2AppFreqTrans) refers to fmul.o(.text) for __aeabi_fmul
    app2core.o(i.User2AppFreqTrans) refers to ffixi.o(.text) for __aeabi_f2iz
    app2core.o(i.User2AppFreqTrans) refers to global_variable.o(.bss) for struUser2App
    app2core.o(i.User2AppVolTrans) refers to f2d.o(.text) for __aeabi_f2d
    app2core.o(i.User2AppVolTrans) refers to dmul.o(.text) for __aeabi_dmul
    app2core.o(i.User2AppVolTrans) refers to ddiv.o(.text) for __aeabi_ddiv
    app2core.o(i.User2AppVolTrans) refers to dfixi.o(.text) for __aeabi_d2iz
    foc_drive.o(i.AdcSampleCal) refers to signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent) for SVPWM_2ShuntGetPhaseCurrent
    foc_drive.o(i.AdcSampleCal) refers to global_variable.o(.bss) for struFluxOB_Param
    foc_drive.o(i.CurrentLoopReg) refers to pid_regulators.o(i.CurrentPIRegulator) for CurrentPIRegulator
    foc_drive.o(i.CurrentLoopReg) refers to fluxobserve.o(i.ModuCircle_Limitation) for ModuCircle_Limitation
    foc_drive.o(i.FOC_InitstruParam) refers to global_variable.o(.constdata) for struFOC_ConstParam
    foc_drive.o(i.FOC_InitstruParam) refers to global_variable.o(.bss) for struFOC_CurrLoop
    foc_drive.o(i.FOC_InitstruParam) refers to hardware_init.o(i.MCPWM0_RegUpdate) for MCPWM0_RegUpdate
    foc_drive.o(i.FOC_Model) refers to foc_drive.o(i.AdcSampleCal) for AdcSampleCal
    foc_drive.o(i.FOC_Model) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    foc_drive.o(i.FOC_Model) refers to bemf_check0824.o(i.Bemf_CheckProcess) for Bemf_CheckProcess
    foc_drive.o(i.FOC_Model) refers to bemf_check0824.o(i.BemfSwitch) for BemfSwitch
    foc_drive.o(i.FOC_Model) refers to onthefly.o(i.OnTheFlyDetectPro) for OnTheFlyDetectPro
    foc_drive.o(i.FOC_Model) refers to fluxobserve.o(i.OpenCloseAngleSwitch) for OpenCloseAngleSwitch
    foc_drive.o(i.FOC_Model) refers to mc_math.o(i.Trig_Functions) for Trig_Functions
    foc_drive.o(i.FOC_Model) refers to fluxobserve.o(i.AutoFieldWeakReg) for AutoFieldWeakReg
    foc_drive.o(i.FOC_Model) refers to foc_drive.o(i.CurrentLoopReg) for CurrentLoopReg
    foc_drive.o(i.FOC_Model) refers to lib_svpwm.o(i.SVPWM_2ShuntGEN) for SVPWM_2ShuntGEN
    foc_drive.o(i.FOC_Model) refers to fluxobserve.o(i.PmsmFluxObserve) for PmsmFluxObserve
    foc_drive.o(i.FOC_Model) refers to onthefly.o(i.BrakeStateCheck) for BrakeStateCheck
    foc_drive.o(i.FOC_Model) refers to global_variable.o(.bss) for struFOC_CurrLoop
    foc_drive.o(i.FOC_Model) refers to global_variable.o(.data) for struBemfVolt
    foc_drive.o(i.FOC_Model) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    foc_drive.o(i.FOC_Model) refers to foc_drive.o(.data) for tElectAngle
    foc_drive.o(i.SpeedLoopReg) refers to pid_regulators.o(i.SpeedPIRegulator) for SpeedPIRegulator
    foc_drive.o(i.SpeedLoopReg) refers to global_variable.o(.bss) for struFOC_CurrLoop
    signalchain_sample.o(i.ADC_NormalModeCFG) refers to lks32mc08x_adc.o(i.ADC_ChannelConfig) for ADC_ChannelConfig
    signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent) refers to memcpya.o(.text) for __aeabi_memcpy
    pid_regulators.o(i.SpeedPIRegulator) refers to llmul.o(.text) for __aeabi_lmul
    mc_hall.o(i.Angle_Init_Process) refers to lib_mc_hall.o(i.closeLoopAnglePLLInit) for closeLoopAnglePLLInit
    mc_hall.o(i.Angle_Init_Process) refers to uidiv.o(.text) for __aeabi_uidivmod
    mc_hall.o(i.Angle_Init_Process) refers to lib_mc_hall.o(i.calc_first_ElectAngle) for calc_first_ElectAngle
    mc_hall.o(i.GetAvrgHallPeriod) refers to uidiv.o(.text) for __aeabi_uidivmod
    mc_hall.o(i.HALL_IRQProcess) refers to lib_mc_hall.o(i.check_hall_state) for check_hall_state
    mc_hall.o(i.HALL_IRQProcess) refers to mc_hall.o(i.GetAvrgHallPeriod) for GetAvrgHallPeriod
    mc_hall.o(i.HALL_IRQProcess) refers to mc_hall.o(i.HALL_Init_Electrical_Angle) for HALL_Init_Electrical_Angle
    mc_hall.o(i.HALL_IRQProcess) refers to mc_hall.o(i.ReadHallState) for ReadHallState
    mc_hall.o(i.HALL_InitHallMeasure) refers to mc_hall.o(i.HALL_Init_Electrical_Angle) for HALL_Init_Electrical_Angle
    mc_hall.o(i.HALL_InitHallMeasure) refers to mc_hall.o(i.hall_comm_VariableInit) for hall_comm_VariableInit
    mc_hall.o(i.HALL_InitHallMeasure) refers to global_variable.o(.bss) for struFOC_CtrProc
    mc_hall.o(i.HALL_InitHallMeasure) refers to mc_hall.o(.constdata) for struHallParamaConst
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to lib_mc_hall.o(i.GetHall_edgeAngle) for GetHall_edgeAngle
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to mc_hall.o(i.Angle_Init_Process) for Angle_Init_Process
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to lib_svpwm.o(i.lowPass_filter) for lowPass_filter
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to dfltui.o(.text) for __aeabi_ui2d
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to dmul.o(.text) for __aeabi_dmul
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to d2f.o(.text) for __aeabi_d2f
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    mc_hall.o(i.HALL_Init_Electrical_Angle) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    mc_hall.o(i.Hall_ElecAnglePWM_Process) refers to lib_mc_hall.o(i.closeLoopAnglePLL) for closeLoopAnglePLL
    mc_hall.o(i.Hall_ElecAnglePWM_Process) refers to lib_mc_hall.o(i.reduceToqueAnglePll) for reduceToqueAnglePll
    mc_hall.o(i.Hall_learn_Process) refers to app2core.o(i.User2AppCurTrans) for User2AppCurTrans
    mc_hall.o(i.Hall_learn_Process) refers to app2core.o(i.App2CoreCurTrans) for App2CoreCurTrans
    mc_hall.o(i.Hall_learn_Process) refers to lib_mc_hall.o(i.learn_hall_proc) for learn_hall_proc
    mc_hall.o(i.Hall_learn_Process) refers to global_variable.o(.bss) for struHallProcess
    mc_hall.o(i.Verify_Hall_State) refers to mc_hall.o(i.ReadHallState) for ReadHallState
    mc_hall.o(i.Verify_Hall_State) refers to mc_hall.o(i.GetAvrgHallPeriod) for GetAvrgHallPeriod
    mc_hall.o(i.Verify_Hall_State) refers to mc_hall.o(i.HALL_Init_Electrical_Angle) for HALL_Init_Electrical_Angle
    mc_hall.o(i.Verify_Hall_State) refers to lib_mc_hall.o(i.check_hall_state) for check_hall_state
    bemf_check0824.o(i.BemfSwitch) refers to app2core.o(i.App2CoreFreqTrans) for App2CoreFreqTrans
    bemf_check0824.o(i.BemfSwitch) refers to bemf_check0824.o(.bss) for stru_BEMF_Check
    bemf_check0824.o(i.BemfSwitch) refers to fluxobserve.o(.bss) for struFluxOB_Var
    bemf_check0824.o(i.BemfSwitch) refers to global_variable.o(.bss) for struFluxOB_Param
    bemf_check0824.o(i.BemfSwitch) refers to fluxobserve.o(.data) for uMrasTheta_est
    bemf_check0824.o(i.BemfSwitch) refers to global_variable.o(.constdata) for struBoardParam
    bemf_check0824.o(i.Bemf_CheckInit) refers to ffixi.o(.text) for __aeabi_f2iz
    bemf_check0824.o(i.Bemf_CheckInit) refers to fflti.o(.text) for __aeabi_i2f
    bemf_check0824.o(i.Bemf_CheckInit) refers to fdiv.o(.text) for __aeabi_fdiv
    bemf_check0824.o(i.Bemf_CheckInit) refers to f2d.o(.text) for __aeabi_f2d
    bemf_check0824.o(i.Bemf_CheckInit) refers to ddiv.o(.text) for __aeabi_ddiv
    bemf_check0824.o(i.Bemf_CheckInit) refers to dfixi.o(.text) for __aeabi_d2iz
    bemf_check0824.o(i.Bemf_CheckInit) refers to global_variable.o(.constdata) for struBoardParam
    bemf_check0824.o(i.Bemf_CheckProcess) refers to lib_svpwm.o(i.Calc_Atan) for Calc_Atan
    bemf_check0824.o(i.Bemf_CheckProcess) refers to uidiv.o(.text) for __aeabi_uidivmod
    bemf_check0824.o(i.Bemf_CheckProcess) refers to fflti.o(.text) for __aeabi_i2f
    bemf_check0824.o(i.Bemf_CheckProcess) refers to app2core.o(i.User2AppFreqTrans) for User2AppFreqTrans
    bemf_check0824.o(i.Bemf_CheckProcess) refers to lib_svpwm.o(i.lowPass_filter) for lowPass_filter
    bemf_check0824.o(i.Bemf_CheckProcess) refers to global_variable.o(.constdata) for struMotorParam
    lks32mc08x_adc.o(i.ADC_Init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_adc.o(i.ADC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_can.o(i.CAN_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_can.o(i.CAN_Sleep) refers to uidiv.o(.text) for __aeabi_uidivmod
    lks32mc08x_cmp.o(i.CMP_Init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_cmp.o(i.CMP_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    lks32mc08x_dac.o(i.DAC_Init) refers to lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_dac.o(i.DAC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_dma.o(i.DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    lks32mc08x_dsp.o(i.DSP_CalcCordic) refers to lks32mc08x_sys.o(i.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(i.DSP_CalcCordic) refers to lks32mc08x_dsp.o(.data) for dsp_flg
    lks32mc08x_dsp.o(i.DSP_CalcDivision) refers to lks32mc08x_sys.o(i.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(i.DSP_CalcDivision) refers to lks32mc08x_dsp.o(.data) for dsp_flg
    lks32mc08x_dsp.o(i.DSP_CalcSprt) refers to lks32mc08x_dsp.o(.data) for dsp_flg1
    lks32mc08x_dsp.o(i.DSP_Cmd) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_dsp.o(i.DSP_GetSqrt) refers to lks32mc08x_dsp.o(.data) for dsp_flg2
    lks32mc08x_flash.o(i.EraseSector) refers to lks32mc08x_flash.o(.data) for erase_flag
    lks32mc08x_flash.o(i.ProgramPage) refers to lks32mc08x_flash.o(.data) for progm_flag
    lks32mc08x_flash.o(i.Read_Flash) refers to lks32mc08x_nvr.o(i.Read_NVR) for Read_NVR
    lks32mc08x_flash.o(i.Read_More_Flash) refers to lks32mc08x_flash.o(i.Read_Flash) for Read_Flash
    lks32mc08x_gpio.o(i.GPIO_PinAFConfig) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lks32mc08x_gpio.o(i.GPIO_ResetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_gpio.o(i.GPIO_SetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_hall.o(i.HALL_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_i2c.o(i.I2C_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_i2c.o(i.I2C_Init) refers to lks32mc08x_sys.o(i.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_i2c.o(i.I2C_Init) refers to uldiv.o(.text) for __aeabi_uldivmod
    lks32mc08x_i2c.o(i.I2C_Init) refers to lks32mc08x_i2c.o(i.i2c_dma_init) for i2c_dma_init
    lks32mc08x_i2c.o(i.i2c_dma_delay_over) refers to lks32mc08x_i2c.o(.data) for i2c_dma_state
    lks32mc08x_i2c.o(i.i2c_dma_init) refers to lks32mc08x_dma.o(i.DMA_Init) for DMA_Init
    lks32mc08x_i2c.o(i.i2c_dma_rx) refers to lks32mc08x_i2c.o(i.i2c_dma_delay_over) for i2c_dma_delay_over
    lks32mc08x_i2c.o(i.i2c_dma_rx) refers to lks32mc08x_i2c.o(i.i2c_dma_state_start) for i2c_dma_state_start
    lks32mc08x_i2c.o(i.i2c_dma_state_over) refers to lks32mc08x_i2c.o(.data) for i2c_dma_state
    lks32mc08x_i2c.o(i.i2c_dma_state_start) refers to lks32mc08x_i2c.o(.data) for i2c_dma_state
    lks32mc08x_i2c.o(i.i2c_dma_tx) refers to lks32mc08x_i2c.o(i.i2c_dma_delay_over) for i2c_dma_delay_over
    lks32mc08x_i2c.o(i.i2c_dma_tx) refers to lks32mc08x_i2c.o(i.i2c_dma_state_start) for i2c_dma_state_start
    lks32mc08x_mcpwm.o(i.MCPWM_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_mcpwm.o(i.MCPWM_StructInit) refers to memseta.o(.text) for __aeabi_memclr
    lks32mc08x_spi.o(i.SPI_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_sys.o(i.DSP_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_sys.o(i.SYS_VolSelModule) refers to lks32mc08x_sys.o(i.SoftDelay) for SoftDelay
    lks32mc08x_sys.o(i.SYS_VolSelModule) refers to lks32mc08x_sys.o(i.NVIC_ClearPendingIRQ) for NVIC_ClearPendingIRQ
    lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ) refers to lks32mc08x_sys.o(i.NVIC_SetPriority) for NVIC_SetPriority
    lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ) refers to lks32mc08x_sys.o(i.NVIC_DisableIRQ) for NVIC_DisableIRQ
    lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ) refers to lks32mc08x_sys.o(i.NVIC_DisableIRQ) for NVIC_DisableIRQ
    lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ) refers to lks32mc08x_sys.o(i.NVIC_ClearPendingIRQ) for NVIC_ClearPendingIRQ
    lks32mc08x_sys.o(i.Switch2HRC) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(i.SoftDelay) for SoftDelay
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_tim.o(i.TIM_ECDInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(i.TIM_TimerInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(i.TIM_TimerInit) refers to lks32mc08x_tim.o(i.TIM_TimerCmd) for TIM_TimerCmd
    lks32mc08x_uart.o(i.UART_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to ldiv.o(.text) for __aeabi_ldivmod
    lks32mc08x_tmp.o(i.GetCurrentTemperature) refers to idiv.o(.text) for __aeabi_idivmod
    lks32mc08x_tmp.o(i.GetCurrentTemperature) refers to lks32mc08x_tmp.o(.data) for m_TempertureCof
    lks32mc08x_tmp.o(i.TempSensor_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_tmp.o(i.TempSensor_Init) refers to lks32mc08x_tmp.o(.data) for m_TempertureCof
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(.text) for Reset_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SysTick_Handler) for SysTick_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER0_IRQHandler) for UTIMER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER1_IRQHandler) for UTIMER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER2_IRQHandler) for UTIMER2_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER3_IRQHandler) for UTIMER3_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER0_IRQHandler) for ENCODER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER1_IRQHandler) for ENCODER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.GPIO_IRQHandler) for GPIO_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.HALL_IRQHandler) for HALL_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SPI0_IRQHandler) for SPI0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.CMP_IRQHandler) for CMP_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.PWRDN_IRQHandler) for PWRDN_IRQHandler
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(.text) refers to hardware_init.o(i.SystemInit) for SystemInit
    startup_lks32mc08x.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_GetKey) refers to segger_rtt.o(i.SEGGER_RTT_Read) for SEGGER_RTT_Read
    segger_rtt.o(i.SEGGER_RTT_HasData) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_HasKey) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_HasKey) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_Init) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutChar) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutChar) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_PutCharSkipNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_Read) refers to segger_rtt.o(i.SEGGER_RTT_ReadNoLock) for SEGGER_RTT_ReadNoLock
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.data) for _aTerminalId
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to strlen.o(.text) for strlen
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._PostTerminalSwitch) for _PostTerminalSwitch
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.data) for _ActiveTerminal
    segger_rtt.o(i.SEGGER_RTT_WaitKey) refers to segger_rtt.o(i.SEGGER_RTT_GetKey) for SEGGER_RTT_GetKey
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(i.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteString) refers to strlen.o(.text) for strlen
    segger_rtt.o(i.SEGGER_RTT_WriteString) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i._DoInit) refers to strcpy.o(.text) for strcpy
    segger_rtt.o(i._DoInit) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i._PostTerminalSwitch) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i._PostTerminalSwitch) refers to segger_rtt.o(.data) for _aTerminalId
    segger_rtt.o(i._WriteBlocking) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i._WriteNoCheck) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt_printf.o(i.SEGGER_RTT_printf) refers to segger_rtt_printf.o(i.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._PrintInt) for _PrintInt
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt_printf.o(i._PrintInt) refers to idiv.o(.text) for __aeabi_idivmod
    segger_rtt_printf.o(i._PrintInt) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i._PrintInt) refers to segger_rtt_printf.o(i._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(i._PrintUnsigned) refers to uidiv.o(.text) for __aeabi_uidivmod
    segger_rtt_printf.o(i._PrintUnsigned) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i._PrintUnsigned) refers to segger_rtt_printf.o(.constdata) for _aV2C
    segger_rtt_printf.o(i._StoreChar) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    lib_svpwm.o(i.Calc_Atan) refers to lib_svpwm.o(.constdata) for .constdata
    lib_svpwm.o(i.SVPWM_1ShuntGEN) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lib_svpwm.o(i.SVPWM_3ShuntGEN) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    fluxobserve.o(i.AutoFieldWeakReg) refers to fluxobserve.o(i.FWLoopPIReg) for FWLoopPIReg
    fluxobserve.o(i.AutoFieldWeakReg) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.AutoFieldWeakReg) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to idiv.o(.text) for __aeabi_idivmod
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to global_variable.o(.bss) for struFluxOB_Param
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.DcVoltPerUnitCalc) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.FluxObserveParaCalc) refers to fflti.o(.text) for __aeabi_i2f
    fluxobserve.o(i.FluxObserveParaCalc) refers to fmul.o(.text) for __aeabi_fmul
    fluxobserve.o(i.FluxObserveParaCalc) refers to fdiv.o(.text) for __aeabi_fdiv
    fluxobserve.o(i.FluxObserveParaCalc) refers to ffixi.o(.text) for __aeabi_f2iz
    fluxobserve.o(i.FluxObserveParaCalc) refers to idiv.o(.text) for __aeabi_idivmod
    fluxobserve.o(i.FluxObserveParaCalc) refers to ldiv.o(.text) for __aeabi_ldivmod
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(i.__ARM_common_ll_mulss) for __ARM_common_ll_mulss
    fluxobserve.o(i.FluxObserveParaCalc) refers to llshl.o(.text) for __aeabi_llsl
    fluxobserve.o(i.FluxObserveParaCalc) refers to llmul.o(.text) for __aeabi_lmul
    fluxobserve.o(i.FluxObserveParaCalc) refers to uidiv.o(.text) for __aeabi_uidivmod
    fluxobserve.o(i.FluxObserveParaCalc) refers to dfltui.o(.text) for __aeabi_ui2d
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(i.__ARM_common_ll_muluu) for __ARM_common_ll_muluu
    fluxobserve.o(i.FluxObserveParaCalc) refers to dfltl.o(.text) for __aeabi_l2d
    fluxobserve.o(i.FluxObserveParaCalc) refers to dmul.o(.text) for __aeabi_dmul
    fluxobserve.o(i.FluxObserveParaCalc) refers to ddiv.o(.text) for __aeabi_ddiv
    fluxobserve.o(i.FluxObserveParaCalc) refers to dfixui.o(.text) for __aeabi_d2uiz
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(i.FindQNum) for FindQNum
    fluxobserve.o(i.FluxObserveParaCalc) refers to global_variable.o(.bss) for struFluxOB_Param
    fluxobserve.o(i.FluxObserveParaCalc) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.ModuCircle_Limitation) refers to mc_math.o(i.Trig_Functions) for Trig_Functions
    fluxobserve.o(i.ModuCircle_Limitation) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fluxobserve.o(i.ModuCircle_Limitation) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.ModuCircle_Limitation) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.OnTheFlyDetectInit) refers to global_variable.o(.bss) for mOnTheFlyDetect
    fluxobserve.o(i.OpenCloseAngleSwitch) refers to global_variable.o(.bss) for struFOC_CtrProc
    fluxobserve.o(i.OpenCloseAngleSwitch) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.OpenCloseAngleSwitch) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.PmsmFluxObIni) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.PmsmFluxObIni) refers to fluxobserve.o(.bss) for .bss
    fluxobserve.o(i.PmsmFluxObIni) refers to global_variable.o(.bss) for struFOC_CurrLoop
    fluxobserve.o(i.PmsmFluxObserve) refers to mc_math.o(i.Trig_Functions) for Trig_Functions
    fluxobserve.o(i.PmsmFluxObserve) refers to pid_regulators.o(i.CurrentPIRegulator) for CurrentPIRegulator
    fluxobserve.o(i.PmsmFluxObserve) refers to lib_svpwm.o(i.Calc_Atan) for Calc_Atan
    fluxobserve.o(i.PmsmFluxObserve) refers to global_variable.o(.bss) for struFluxOB_Param
    fluxobserve.o(i.PmsmFluxObserve) refers to fluxobserve.o(.data) for .data
    fluxobserve.o(i.PmsmFluxObserve) refers to fluxobserve.o(.bss) for .bss
    lib_ipd.o(i.IPD_AngleCalc) refers to lib_ipd.o(i.FindMaxIn3) for FindMaxIn3
    lib_ipd.o(i.IPD_AngleCalc) refers to lib_svpwm.o(i.Calc_Atan) for Calc_Atan
    lib_ipd.o(i.IPD_AngleCalc) refers to global_variable.o(.bss) for mIPD_CtrProc
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.VolPulsePwmSet) for VolPulsePwmSet
    lib_ipd.o(i.IPD_RotorPosEst) refers to lks32mc08x_mcpwm.o(i.PWMOutputs) for PWMOutputs
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.soft_Trg_ADC) for soft_Trg_ADC
    lib_ipd.o(i.IPD_RotorPosEst) refers to foc_drive.o(i.AdcSampleCal) for AdcSampleCal
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.PoloEstCurSample) for PoloEstCurSample
    lib_ipd.o(i.IPD_RotorPosEst) refers to lib_ipd.o(i.IPD_AngleCalc) for IPD_AngleCalc
    lib_ipd.o(i.IPD_RotorPosEst) refers to global_variable.o(.bss) for struFOC_CurrLoop
    lib_ipd.o(i.PoloEstCurSample) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lib_ipd.o(i.PoloEstCurSample) refers to global_variable.o(.bss) for mIPD_CtrProc
    lib_ipd.o(i.VolPulsePwmSet) refers to lib_svpwm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lib_ipd.o(i.VolPulsePwmSet) refers to global_variable.o(.bss) for mIPD_CtrProc
    onthefly.o(i.BrakeStateCheck) refers to global_variable.o(.bss) for struFOC_CurrLoop
    onthefly.o(i.BrakeStateCheck) refers to onthefly.o(.data) for .data
    onthefly.o(i.OnTheFlyDetectPro) refers to global_variable.o(.bss) for mOnTheFlyDetect
    onthefly.o(i.OnTheFlyDetectPro) refers to onthefly.o(.data) for .data
    lib_mc_hall.o(i.GetHall_edgeAngle) refers to lib_mc_hall.o(.data) for .data
    lib_mc_hall.o(i.check_hall_state) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.check_hall_state) refers to lib_mc_hall.o(i.hall_repare_process) for hall_repare_process
    lib_mc_hall.o(i.closeLoopAnglePLLInit) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.closeLoopAnglePLLInit) refers to lib_svpwm.o(i.lowPass_filter) for lowPass_filter
    lib_mc_hall.o(i.hallErrorCheck) refers to lib_mc_hall.o(.data) for .data
    lib_mc_hall.o(i.hall_repare_process) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.learn_hall_proc) refers to foc_drive.o(i.StopMotorImmdly) for StopMotorImmdly
    lib_mc_hall.o(i.learn_hall_proc) refers to uidiv.o(.text) for __aeabi_uidivmod
    lib_mc_hall.o(i.learn_hall_proc) refers to lib_mc_hall.o(.data) for .data
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    llmul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltl.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltl.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cdcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing hardware_init.o(i.DebugPWM_OutputFunction), (44 bytes).
    Removing hardware_init.o(i.Reg_Clr), (20 bytes).
    Removing hardware_init.o(i.Reg_Reset), (148 bytes).
    Removing hardware_init.o(i.UART0_SENDDATA), (12 bytes).
    Removing hardware_init.o(i.UART1_SENDDATA), (12 bytes).
    Removing hardware_init.o(i.seekPosADCsetting), (48 bytes).
    Removing interrupt.o(i.SleepTimer_IRQHandler), (4 bytes).
    Removing state_machine.o(i.SpeedLoop_Set), (58 bytes).
    Removing fault_detection.o(i.FaultCurrentCheck), (124 bytes).
    Removing fault_detection.o(i.FaultEmptyCheck), (104 bytes).
    Removing fault_detection.o(i.FaultPhaseCheck), (196 bytes).
    Removing fault_detection.o(i.FaultRecover), (616 bytes).
    Removing fault_detection.o(i.FaultStallCheck), (288 bytes).
    Removing fault_detection.o(i.FaultStartCheck), (356 bytes).
    Removing fault_detection.o(i.FaultTempCheck), (76 bytes).
    Removing process_control.o(i.ReadLKS08X_UniqueID), (48 bytes).
    Removing powercalculation.o(i.DIVCalc), (24 bytes).
    Removing powercalculation.o(i.PowerLimitCalc), (72 bytes).
    Removing powercalculation.o(i.PowerLoopInit), (172 bytes).
    Removing powercalculation.o(i.PowerLoopReg), (64 bytes).
    Removing powercalculation.o(i.PowerPIRegulator), (66 bytes).
    Removing powercalculation.o(i.RampControl), (84 bytes).
    Removing powercalculation.o(i.SpeedLimitCalc), (78 bytes).
    Removing speedscan.o(i.KEY_Scan), (52 bytes).
    Removing mc_math.o(i.CopyFromBuffer), (28 bytes).
    Removing app2core.o(i.App2CoreAngleTrans), (24 bytes).
    Removing app2core.o(i.App2CoreVdcTrans), (24 bytes).
    Removing app2core.o(i.App2CoreVolTrans), (24 bytes).
    Removing app2core.o(i.Core2AppAngleTrans), (24 bytes).
    Removing app2core.o(i.Core2AppCurTrans), (24 bytes).
    Removing app2core.o(i.Core2AppFreqTrans), (24 bytes).
    Removing app2core.o(i.Core2AppVdcTrans), (24 bytes).
    Removing app2core.o(i.Core2AppVolTrans), (24 bytes).
    Removing foc_drive.o(i.SpeedLoopReg), (64 bytes).
    Removing foc_drive.o(i.StopMotorImmdly), (2 bytes).
    Removing pid_regulators.o(i.PI_Regulator), (132 bytes).
    Removing pid_regulators.o(i.SpeedPIRegulator), (242 bytes).
    Removing mc_hall.o(i.Angle_Init_Process), (184 bytes).
    Removing mc_hall.o(i.GetAvrgHallPeriod), (100 bytes).
    Removing mc_hall.o(i.HALL_IRQProcess), (320 bytes).
    Removing mc_hall.o(i.HALL_InitHallMeasure), (308 bytes).
    Removing mc_hall.o(i.HALL_Init_Electrical_Angle), (448 bytes).
    Removing mc_hall.o(i.Hall_ElecAnglePWM_Process), (128 bytes).
    Removing mc_hall.o(i.Hall_learn_Process), (160 bytes).
    Removing mc_hall.o(i.ReadHallState), (18 bytes).
    Removing mc_hall.o(i.Verify_Hall_State), (448 bytes).
    Removing mc_hall.o(i.hall_comm_VariableInit), (352 bytes).
    Removing mc_hall.o(.constdata), (48 bytes).
    Removing bemf_check0824.o(.rev16_text), (4 bytes).
    Removing bemf_check0824.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_adc.o(i.ADC_ClearIRQFlag), (6 bytes).
    Removing lks32mc08x_adc.o(i.ADC_GetConversionValue), (264 bytes).
    Removing lks32mc08x_adc.o(i.ADC_GetIRQFlag), (30 bytes).
    Removing lks32mc08x_adc.o(i.ADC_SoftTrgEN), (20 bytes).
    Removing lks32mc08x_can.o(i.CAN_GetIRQFlag), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_Init), (76 bytes).
    Removing lks32mc08x_can.o(i.CAN_Manual_Awake), (32 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadALC), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadErrorCode), (44 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadRXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadState), (10 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadTXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReceFramInfor), (20 bytes).
    Removing lks32mc08x_can.o(i.CAN_Receive_Msg), (308 bytes).
    Removing lks32mc08x_can.o(i.CAN_Sleep), (92 bytes).
    Removing lks32mc08x_can.o(i.CAN_StructInit), (24 bytes).
    Removing lks32mc08x_can.o(i.EFF_ID_Filter), (124 bytes).
    Removing lks32mc08x_can.o(i.ID1_Filter_Dual), (208 bytes).
    Removing lks32mc08x_can.o(i.ID2_Filter_Dual), (176 bytes).
    Removing lks32mc08x_can.o(i.My_CAN_Send_Msg), (260 bytes).
    Removing lks32mc08x_can.o(i.SFF_ID_Filter), (124 bytes).
    Removing lks32mc08x_cmp.o(i.CMP_ClearIRQFlag), (28 bytes).
    Removing lks32mc08x_cmp.o(i.CMP_GetIRQFlag), (60 bytes).
    Removing lks32mc08x_dac.o(i.DAC_Init), (204 bytes).
    Removing lks32mc08x_dac.o(i.DAC_OutputValue), (24 bytes).
    Removing lks32mc08x_dac.o(i.DAC_OutputVoltage), (104 bytes).
    Removing lks32mc08x_dac.o(i.DAC_StructInit), (8 bytes).
    Removing lks32mc08x_dma.o(i.DMA_CHx_EN), (24 bytes).
    Removing lks32mc08x_dma.o(i.DMA_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_dma.o(i.DMA_GetIRQFlag), (72 bytes).
    Removing lks32mc08x_dma.o(i.DMA_Init), (84 bytes).
    Removing lks32mc08x_dma.o(i.DMA_StructInit), (14 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_CalcCordic), (120 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_CalcDivision), (72 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_CalcSprt), (48 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_Cmd), (14 bytes).
    Removing lks32mc08x_dsp.o(i.DSP_GetSqrt), (44 bytes).
    Removing lks32mc08x_dsp.o(.data), (3 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_GetIRQFlag), (52 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_Trigger_Config), (80 bytes).
    Removing lks32mc08x_flash.o(i.EraseSector), (176 bytes).
    Removing lks32mc08x_flash.o(i.ProgramPage), (300 bytes).
    Removing lks32mc08x_flash.o(i.Read_Flash), (60 bytes).
    Removing lks32mc08x_flash.o(i.Read_More_Flash), (76 bytes).
    Removing lks32mc08x_flash.o(.data), (8 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_LockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputDataBit), (20 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadOutputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit), (20 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_UnlockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_Write), (8 bytes).
    Removing lks32mc08x_hall.o(i.HALL_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetCaptureValue), (16 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetCount), (12 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetFilterValue), (16 bytes).
    Removing lks32mc08x_hall.o(i.HALL_GetIRQFlag), (16 bytes).
    Removing lks32mc08x_hall.o(i.HALL_WIDCount), (12 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_Init), (160 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_ReadData), (8 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_SendData), (4 bytes).
    Removing lks32mc08x_i2c.o(i.I2C_StructInit), (36 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_delay_over), (64 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_init), (80 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_rx), (156 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_state_over), (12 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_state_start), (12 bytes).
    Removing lks32mc08x_i2c.o(i.i2c_dma_tx), (148 bytes).
    Removing lks32mc08x_i2c.o(.data), (1 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_DISABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_ENABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Feed), (76 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Init), (80 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_StrutInit), (10 bytes).
    Removing lks32mc08x_mcpwm.o(i.MCPWM_ClearIRQFlag), (28 bytes).
    Removing lks32mc08x_mcpwm.o(i.MCPWM_GetIRQFlag), (72 bytes).
    Removing lks32mc08x_opa.o(i.OPA_Init), (168 bytes).
    Removing lks32mc08x_opa.o(i.OPA_OUT), (84 bytes).
    Removing lks32mc08x_opa.o(i.OPA_StructInit), (10 bytes).
    Removing lks32mc08x_spi.o(i.SPI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_spi.o(i.SPI_GetIRQFlag), (20 bytes).
    Removing lks32mc08x_spi.o(i.SPI_Init), (124 bytes).
    Removing lks32mc08x_spi.o(i.SPI_ReadData), (8 bytes).
    Removing lks32mc08x_spi.o(i.SPI_SendData), (4 bytes).
    Removing lks32mc08x_spi.o(i.SPI_StructInit), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_ClearRst), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_EnablePORFilter), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FallSleep), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FeedDog), (76 bytes).
    Removing lks32mc08x_sys.o(i.SYS_GetRstSource), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_Init), (120 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SetWakeInterval), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SoftResetModule), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_StructInit), (26 bytes).
    Removing lks32mc08x_sys.o(i.SYS_WatchDogCmd), (52 bytes).
    Removing lks32mc08x_sys.o(i.SetWakeIO), (60 bytes).
    Removing lks32mc08x_sys.o(i.Switch2HRC), (76 bytes).
    Removing lks32mc08x_sys.o(i.Switch2PLL), (60 bytes).
    Removing lks32mc08x_sys.o(.bss), (12 bytes).
    Removing lks32mc08x_tim.o(i.ECD_ClearIRQFlag), (36 bytes).
    Removing lks32mc08x_tim.o(i.ECD_GetIRQFlag), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ClearIRQFlag), (68 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDCmd), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDInit), (224 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDStructInit), (24 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECD_GetCount), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_GetIRQFlag), (156 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT0), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT1), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCount), (6 bytes).
    Removing lks32mc08x_uart.o(i.UART_ClearIRQFlag), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_GetIRQFlag), (22 bytes).
    Removing lks32mc08x_uart.o(i.UART_ReadData), (6 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendAddr_485), (52 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData_485), (52 bytes).
    Removing lks32mc08x_tmp.o(i.GetCurrentTemperature), (80 bytes).
    Removing startup_lks32mc08x.o(HEAP), (512 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer), (168 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer), (168 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer), (148 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_GetKey), (32 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_HasData), (24 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_HasKey), (44 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_Init), (8 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutChar), (112 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutCharSkip), (100 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutCharSkipNoLock), (52 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_Read), (50 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ReadNoLock), (172 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer), (84 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer), (84 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer), (80 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer), (80 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetTerminal), (152 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_TerminalOut), (256 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WaitKey), (14 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock), (180 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteString), (26 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock), (172 bytes).
    Removing segger_rtt.o(i._PostTerminalSwitch), (36 bytes).
    Removing segger_rtt.o(.data), (17 bytes).
    Removing segger_rtt_printf.o(i.SEGGER_RTT_printf), (36 bytes).
    Removing segger_rtt_printf.o(i.SEGGER_RTT_vprintf), (536 bytes).
    Removing segger_rtt_printf.o(i._PrintInt), (270 bytes).
    Removing segger_rtt_printf.o(i._PrintUnsigned), (284 bytes).
    Removing segger_rtt_printf.o(i._StoreChar), (68 bytes).
    Removing segger_rtt_printf.o(.constdata), (16 bytes).
    Removing lib_svpwm.o(i.RevPark_Circle_Limitation), (80 bytes).
    Removing lib_svpwm.o(i.SVPWM_1ShuntGEN), (980 bytes).
    Removing lib_svpwm.o(i.SVPWM_3ShuntGEN), (528 bytes).
    Removing lib_svpwm.o(i.SVPWM_EABS_Process), (58 bytes).
    Removing lib_mc_hall.o(i.GetHall_edgeAngle), (580 bytes).
    Removing lib_mc_hall.o(i.calc_first_ElectAngle), (148 bytes).
    Removing lib_mc_hall.o(i.check_hall_state), (856 bytes).
    Removing lib_mc_hall.o(i.closeLoopAnglePLL), (104 bytes).
    Removing lib_mc_hall.o(i.closeLoopAnglePLLInit), (264 bytes).
    Removing lib_mc_hall.o(i.hallErrorCheck), (92 bytes).
    Removing lib_mc_hall.o(i.hall_repare_process), (228 bytes).
    Removing lib_mc_hall.o(i.learn_hall_proc), (388 bytes).
    Removing lib_mc_hall.o(i.reduceToqueAnglePll), (40 bytes).
    Removing lib_mc_hall.o(.data), (8 bytes).
    Removing lib_mc_hall.o(.data), (6 bytes).
    Removing lib_mc_hall.o(.data), (2 bytes).
    Removing lib_mc_hall.o(.data), (2 bytes).
    Removing lib_mc_hall.o(.data), (4 bytes).
    Removing lks32mc08x_nvr.o(i.Read_NVR), (52 bytes).
    Removing d2f.o(.text), (56 bytes).

219 unused section(s) (total 21205 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_lks32mc08x.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  ffltui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltl.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    AppFunction\Global_Variable.c            0x00000000   Number         0  global_variable.o ABSOLUTE
    AppFunction\PowerCalculation.c           0x00000000   Number         0  powercalculation.o ABSOLUTE
    AppFunction\Process_Control.c            0x00000000   Number         0  process_control.o ABSOLUTE
    AppFunction\SpeedScan.c                  0x00000000   Number         0  speedscan.o ABSOLUTE
    AppFunction\System_Init.c                0x00000000   Number         0  system_init.o ABSOLUTE
    AppFunction\Task_Scheduler.c             0x00000000   Number         0  task_scheduler.o ABSOLUTE
    AppFunction\fault_detection.c            0x00000000   Number         0  fault_detection.o ABSOLUTE
    AppFunction\hardware_init.c              0x00000000   Number         0  hardware_init.o ABSOLUTE
    AppFunction\interrupt.c                  0x00000000   Number         0  interrupt.o ABSOLUTE
    AppFunction\state_machine.c              0x00000000   Number         0  state_machine.o ABSOLUTE
    Kernal_Source\App2Core.c                 0x00000000   Number         0  app2core.o ABSOLUTE
    Kernal_Source\Bemf_Check0824.c           0x00000000   Number         0  bemf_check0824.o ABSOLUTE
    Kernal_Source\FOC_Drive.c                0x00000000   Number         0  foc_drive.o ABSOLUTE
    Kernal_Source\FluxObserve.c              0x00000000   Number         0  fluxobserve.o ABSOLUTE
    Kernal_Source\Lib_IPD.c                  0x00000000   Number         0  lib_ipd.o ABSOLUTE
    Kernal_Source\Lib_MC_hall.c              0x00000000   Number         0  lib_mc_hall.o ABSOLUTE
    Kernal_Source\Lib_Svpwm.c                0x00000000   Number         0  lib_svpwm.o ABSOLUTE
    Kernal_Source\MC_hall.c                  0x00000000   Number         0  mc_hall.o ABSOLUTE
    Kernal_Source\MC_math.c                  0x00000000   Number         0  mc_math.o ABSOLUTE
    Kernal_Source\OnTheFly.c                 0x00000000   Number         0  onthefly.o ABSOLUTE
    Kernal_Source\PID_regulators.c           0x00000000   Number         0  pid_regulators.o ABSOLUTE
    Kernal_Source\SignalChain_Sample.c       0x00000000   Number         0  signalchain_sample.o ABSOLUTE
    Kernal_Source\\Bemf_Check0824.c          0x00000000   Number         0  bemf_check0824.o ABSOLUTE
    Kernal_Source\main.c                     0x00000000   Number         0  main.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32MC08x_flash.c 0x00000000   Number         0  lks32mc08x_flash.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_NVR.c 0x00000000   Number         0  lks32mc08x_nvr.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_adc.c 0x00000000   Number         0  lks32mc08x_adc.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_cmp.c 0x00000000   Number         0  lks32mc08x_cmp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_dac.c 0x00000000   Number         0  lks32mc08x_dac.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_dma.c 0x00000000   Number         0  lks32mc08x_dma.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_dsp.c 0x00000000   Number         0  lks32mc08x_dsp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_hall.c 0x00000000   Number         0  lks32mc08x_hall.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_i2c.c 0x00000000   Number         0  lks32mc08x_i2c.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_mcpwm.c 0x00000000   Number         0  lks32mc08x_mcpwm.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_opa.c 0x00000000   Number         0  lks32mc08x_opa.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_spi.c 0x00000000   Number         0  lks32mc08x_spi.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_tmp.c 0x00000000   Number         0  lks32mc08x_tmp.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\startup_lks32mc08x.s 0x00000000   Number         0  startup_lks32mc08x.o ABSOLUTE
    SEGGER_RTT\SEGGER_RTT.c                  0x00000000   Number         0  segger_rtt.o ABSOLUTE
    SEGGER_RTT\SEGGER_RTT_printf.c           0x00000000   Number         0  segger_rtt_printf.o ABSOLUTE
    cdcmple.s                                0x00000000   Number         0  cdcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       40  startup_lks32mc08x.o(.text)
    .text                                    0x000000fc   Section        0  uidiv.o(.text)
    .text                                    0x00000128   Section        0  idiv.o(.text)
    .text                                    0x00000150   Section        0  uldiv.o(.text)
    .text                                    0x000001b0   Section        0  ldiv.o(.text)
    .text                                    0x000001fc   Section        0  llmul.o(.text)
    .text                                    0x00000276   Section        0  llshl.o(.text)
    .text                                    0x00000296   Section        0  llsshr.o(.text)
    .text                                    0x000002bc   Section        0  memcpya.o(.text)
    .text                                    0x000002e0   Section        0  memseta.o(.text)
    .text                                    0x00000304   Section        0  strcpy.o(.text)
    .text                                    0x00000316   Section        0  fmul.o(.text)
    .text                                    0x00000390   Section        0  fdiv.o(.text)
    .text                                    0x0000040c   Section        0  dadd.o(.text)
    .text                                    0x00000570   Section        0  dmul.o(.text)
    .text                                    0x00000640   Section        0  ddiv.o(.text)
    .text                                    0x00000730   Section        0  fflti.o(.text)
    .text                                    0x00000746   Section        0  ffltui.o(.text)
    .text                                    0x00000754   Section        0  dflti.o(.text)
    .text                                    0x0000077c   Section        0  dfltui.o(.text)
    .text                                    0x00000798   Section        0  dfltl.o(.text)
    .text                                    0x000007c4   Section        0  ffixi.o(.text)
    .text                                    0x000007f8   Section        0  dfixi.o(.text)
    .text                                    0x00000840   Section        0  dfixui.o(.text)
    .text                                    0x0000087c   Section        0  f2d.o(.text)
    .text                                    0x000008a4   Section       40  cdcmple.o(.text)
    .text                                    0x000008cc   Section        0  llushr.o(.text)
    .text                                    0x000008ee   Section        0  fepilogue.o(.text)
    .text                                    0x000008ee   Section        0  iusefp.o(.text)
    .text                                    0x00000970   Section        0  depilogue.o(.text)
    .text                                    0x00000a30   Section       36  init.o(.text)
    i.ADC0_IRQHandler                        0x00000a54   Section        0  interrupt.o(i.ADC0_IRQHandler)
    i.ADC0_init                              0x00000b3c   Section        0  hardware_init.o(i.ADC0_init)
    i.ADC_ChannelConfig                      0x00000b88   Section        0  lks32mc08x_adc.o(i.ADC_ChannelConfig)
    i.ADC_Init                               0x00000bb8   Section        0  lks32mc08x_adc.o(i.ADC_Init)
    i.ADC_NormalModeCFG                      0x00000d1c   Section        0  signalchain_sample.o(i.ADC_NormalModeCFG)
    i.ADC_StructInit                         0x00000d98   Section        0  lks32mc08x_adc.o(i.ADC_StructInit)
    i.AdcSampleCal                           0x00000dbc   Section        0  foc_drive.o(i.AdcSampleCal)
    i.App2CoreCurTrans                       0x00000e44   Section        0  app2core.o(i.App2CoreCurTrans)
    i.App2CoreFreqTrans                      0x00000e5c   Section        0  app2core.o(i.App2CoreFreqTrans)
    i.AutoFieldWeakReg                       0x00000e74   Section        0  fluxobserve.o(i.AutoFieldWeakReg)
    i.BemfSwitch                             0x00000e98   Section        0  bemf_check0824.o(i.BemfSwitch)
    i.Bemf_CheckInit                         0x00000f88   Section        0  bemf_check0824.o(i.Bemf_CheckInit)
    i.Bemf_CheckProcess                      0x0000104c   Section        0  bemf_check0824.o(i.Bemf_CheckProcess)
    i.BrakeStateCheck                        0x0000120c   Section        0  onthefly.o(i.BrakeStateCheck)
    i.CMP_IRQHandler                         0x00001284   Section        0  interrupt.o(i.CMP_IRQHandler)
    i.CMP_Init                               0x00001300   Section        0  lks32mc08x_cmp.o(i.CMP_Init)
    i.CMP_StructInit                         0x00001448   Section        0  lks32mc08x_cmp.o(i.CMP_StructInit)
    i.CMP_init                               0x00001456   Section        0  hardware_init.o(i.CMP_init)
    i.Calc_Atan                              0x0000149c   Section        0  lib_svpwm.o(i.Calc_Atan)
    i.Clock_Init                             0x0000165c   Section        0  hardware_init.o(i.Clock_Init)
    i.CurrentAmplitudeCalc                   0x00001698   Section        0  fault_detection.o(i.CurrentAmplitudeCalc)
    i.CurrentLoopAxisD_Set                   0x00001838   Section        0  state_machine.o(i.CurrentLoopAxisD_Set)
    i.CurrentLoopAxisQ_Set                   0x000018c0   Section        0  state_machine.o(i.CurrentLoopAxisQ_Set)
    i.CurrentLoopReg                         0x00001948   Section        0  foc_drive.o(i.CurrentLoopReg)
    i.CurrentOffsetCalibration               0x000019d8   Section        0  system_init.o(i.CurrentOffsetCalibration)
    i.CurrentPIRegulator                     0x00001b0c   Section        0  pid_regulators.o(i.CurrentPIRegulator)
    i.DAC_init                               0x00001b50   Section        0  hardware_init.o(i.DAC_init)
    i.DSP_Init                               0x00001c00   Section        0  lks32mc08x_sys.o(i.DSP_Init)
    i.DcVoltPerUnitCalc                      0x00001c0c   Section        0  fluxobserve.o(i.DcVoltPerUnitCalc)
    i.ENCODER0_IRQHandler                    0x00001c4c   Section        0  interrupt.o(i.ENCODER0_IRQHandler)
    i.ENCODER1_IRQHandler                    0x00001c4e   Section        0  interrupt.o(i.ENCODER1_IRQHandler)
    i.FOC_InitstruParam                      0x00001c50   Section        0  foc_drive.o(i.FOC_InitstruParam)
    i.FOC_Model                              0x00001cd8   Section        0  foc_drive.o(i.FOC_Model)
    i.FWLoopPIReg                            0x00001e64   Section        0  fluxobserve.o(i.FWLoopPIReg)
    i.FaultCheck                             0x00001ea4   Section        0  fault_detection.o(i.FaultCheck)
    i.FaultInit                              0x00001f00   Section        0  fault_detection.o(i.FaultInit)
    i.FaultRecoverInit                       0x00002038   Section        0  fault_detection.o(i.FaultRecoverInit)
    i.FaultVoltageCheck                      0x00002094   Section        0  fault_detection.o(i.FaultVoltageCheck)
    i.FindMaxIn3                             0x00002114   Section        0  lib_ipd.o(i.FindMaxIn3)
    i.FindQNum                               0x0000214e   Section        0  fluxobserve.o(i.FindQNum)
    i.FluxObserveInit                        0x0000216c   Section        0  system_init.o(i.FluxObserveInit)
    i.FluxObserveParaCalc                    0x000021a0   Section        0  fluxobserve.o(i.FluxObserveParaCalc)
    i.GPIO_IRQHandler                        0x0000263c   Section        0  interrupt.o(i.GPIO_IRQHandler)
    i.GPIO_Init                              0x0000263e   Section        0  lks32mc08x_gpio.o(i.GPIO_Init)
    i.GPIO_PinAFConfig                       0x00002720   Section        0  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    i.GPIO_ResetBits                         0x0000282c   Section        0  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    i.GPIO_SetBits                           0x0000283e   Section        0  lks32mc08x_gpio.o(i.GPIO_SetBits)
    i.GPIO_StructInit                        0x00002850   Section        0  lks32mc08x_gpio.o(i.GPIO_StructInit)
    i.GPIO_WriteBit                          0x0000285c   Section        0  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    i.GPIO_init                              0x00002870   Section        0  hardware_init.o(i.GPIO_init)
    i.HALL_IRQHandler                        0x0000293c   Section        0  interrupt.o(i.HALL_IRQHandler)
    i.HALL_Init                              0x00002940   Section        0  lks32mc08x_hall.o(i.HALL_Init)
    i.HALL_Perip_init                        0x00002984   Section        0  hardware_init.o(i.HALL_Perip_init)
    i.HALL_StructInit                        0x000029b4   Section        0  lks32mc08x_hall.o(i.HALL_StructInit)
    i.Hardware_init                          0x000029d8   Section        0  hardware_init.o(i.Hardware_init)
    i.I2C0_IRQHandler                        0x00002ab8   Section        0  interrupt.o(i.I2C0_IRQHandler)
    i.IPD_AngleCalc                          0x00002abc   Section        0  lib_ipd.o(i.IPD_AngleCalc)
    i.IPD_RotorPosEst                        0x00002b54   Section        0  lib_ipd.o(i.IPD_RotorPosEst)
    i.LowPassControl                         0x00002c4c   Section        0  powercalculation.o(i.LowPassControl)
    i.MCPWM0_RegUpdate                       0x00002c7c   Section        0  hardware_init.o(i.MCPWM0_RegUpdate)
    i.MCPWM_Init                             0x00002ce8   Section        0  lks32mc08x_mcpwm.o(i.MCPWM_Init)
    i.MCPWM_StructInit                       0x00002fc8   Section        0  lks32mc08x_mcpwm.o(i.MCPWM_StructInit)
    i.MCPWM_init                             0x00002fd8   Section        0  hardware_init.o(i.MCPWM_init)
    i.ModuCircle_Limitation                  0x0000309c   Section        0  fluxobserve.o(i.ModuCircle_Limitation)
    i.NVIC_ClearPendingIRQ                   0x0000315c   Section        0  lks32mc08x_sys.o(i.NVIC_ClearPendingIRQ)
    NVIC_ClearPendingIRQ                     0x0000315d   Thumb Code    18  lks32mc08x_sys.o(i.NVIC_ClearPendingIRQ)
    i.NVIC_DisableIRQ                        0x00003174   Section        0  lks32mc08x_sys.o(i.NVIC_DisableIRQ)
    NVIC_DisableIRQ                          0x00003175   Thumb Code    18  lks32mc08x_sys.o(i.NVIC_DisableIRQ)
    i.NVIC_EnableIRQ                         0x0000318c   Section        0  hardware_init.o(i.NVIC_EnableIRQ)
    NVIC_EnableIRQ                           0x0000318d   Thumb Code    20  hardware_init.o(i.NVIC_EnableIRQ)
    i.NVIC_SetPriority                       0x000031a4   Section        0  hardware_init.o(i.NVIC_SetPriority)
    NVIC_SetPriority                         0x000031a5   Thumb Code   110  hardware_init.o(i.NVIC_SetPriority)
    i.NVIC_SetPriority                       0x0000321c   Section        0  lks32mc08x_sys.o(i.NVIC_SetPriority)
    NVIC_SetPriority                         0x0000321d   Thumb Code   110  lks32mc08x_sys.o(i.NVIC_SetPriority)
    i.OnTheFlyDetectInit                     0x00003294   Section        0  fluxobserve.o(i.OnTheFlyDetectInit)
    i.OnTheFlyDetectPro                      0x000032a4   Section        0  onthefly.o(i.OnTheFlyDetectPro)
    i.OpenCloseAngleSwitch                   0x00003314   Section        0  fluxobserve.o(i.OpenCloseAngleSwitch)
    i.OpenLoopCurRamp                        0x000033a8   Section        0  process_control.o(i.OpenLoopCurRamp)
    i.PGA_init                               0x000033f4   Section        0  hardware_init.o(i.PGA_init)
    i.PWMOutputs                             0x00003430   Section        0  lks32mc08x_mcpwm.o(i.PWMOutputs)
    i.PWRDN_IRQHandler                       0x0000346c   Section        0  interrupt.o(i.PWRDN_IRQHandler)
    i.PmsmFluxObIni                          0x00003474   Section        0  fluxobserve.o(i.PmsmFluxObIni)
    i.PmsmFluxObserve                        0x000034e8   Section        0  fluxobserve.o(i.PmsmFluxObserve)
    i.PoloEstCurSample                       0x00003744   Section        0  lib_ipd.o(i.PoloEstCurSample)
    i.PowerCalc                              0x000037a4   Section        0  powercalculation.o(i.PowerCalc)
    i.Read_Trim                              0x000037f8   Section        0  lks32mc08x_nvr.o(i.Read_Trim)
    i.SEGGER_RTT_ConfigUpBuffer              0x00003834   Section        0  segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer)
    i.SEGGER_RTT_Write                       0x000038c8   Section        0  segger_rtt.o(i.SEGGER_RTT_Write)
    i.SEGGER_RTT_WriteNoLock                 0x00003910   Section        0  segger_rtt.o(i.SEGGER_RTT_WriteNoLock)
    i.SPI0_IRQHandler                        0x00003994   Section        0  interrupt.o(i.SPI0_IRQHandler)
    i.SVPWM_2ShuntGEN                        0x00003998   Section        0  lib_svpwm.o(i.SVPWM_2ShuntGEN)
    i.SVPWM_2ShuntGetPhaseCurrent            0x00003ad4   Section        0  signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent)
    i.SYS_AnalogModuleClockCmd               0x00003cc0   Section        0  lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd)
    i.SYS_ModuleClockCmd                     0x00003cf4   Section        0  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    i.SYS_VolSelModule                       0x00003d24   Section        0  lks32mc08x_sys.o(i.SYS_VolSelModule)
    i.SYS_VolSelModuleEnableIRQ              0x00003db0   Section        0  lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ)
    i.SYS_VolSelModuleIRQ                    0x00003de0   Section        0  lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ)
    i.SoftDelay                              0x00003e64   Section        0  hardware_init.o(i.SoftDelay)
    i.SoftDelay                              0x00003e7c   Section        0  lks32mc08x_sys.o(i.SoftDelay)
    SoftDelay                                0x00003e7d   Thumb Code    24  lks32mc08x_sys.o(i.SoftDelay)
    i.SpeedReferenceGen                      0x00003e94   Section        0  process_control.o(i.SpeedReferenceGen)
    i.StateAlign                             0x00003ecc   Section        0  state_machine.o(i.StateAlign)
    i.StateBemfDirCheck                      0x00003f78   Section        0  state_machine.o(i.StateBemfDirCheck)
    i.StateBemfStop                          0x00004148   Section        0  state_machine.o(i.StateBemfStop)
    i.StateCharge                            0x000041a8   Section        0  state_machine.o(i.StateCharge)
    i.StateDirCheck                          0x00004354   Section        0  state_machine.o(i.StateDirCheck)
    i.StateFault                             0x000044b4   Section        0  state_machine.o(i.StateFault)
    i.StateHallRun                           0x000044c8   Section        0  state_machine.o(i.StateHallRun)
    i.StateInit                              0x00004520   Section        0  state_machine.o(i.StateInit)
    i.StateOpen                              0x0000473c   Section        0  state_machine.o(i.StateOpen)
    i.StatePosSeek                           0x00004824   Section        0  state_machine.o(i.StatePosSeek)
    i.StateRun                               0x000048b4   Section        0  state_machine.o(i.StateRun)
    i.StateStop                              0x000049e8   Section        0  state_machine.o(i.StateStop)
    i.SysTick_Handler                        0x00004a78   Section        0  interrupt.o(i.SysTick_Handler)
    i.Sys_State_Machine                      0x00004a7c   Section        0  state_machine.o(i.Sys_State_Machine)
    i.SystemInit                             0x00004b78   Section        0  hardware_init.o(i.SystemInit)
    i.TIM_TimerCmd                           0x00004b80   Section        0  lks32mc08x_tim.o(i.TIM_TimerCmd)
    i.TIM_TimerInit                          0x00004c54   Section        0  lks32mc08x_tim.o(i.TIM_TimerInit)
    i.TIM_TimerStrutInit                     0x00004d98   Section        0  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    i.Task_Scheduler                         0x00004dc0   Section        0  task_scheduler.o(i.Task_Scheduler)
    i.TempSensor_Init                        0x00004e4c   Section        0  lks32mc08x_tmp.o(i.TempSensor_Init)
    i.Trig_Functions                         0x00004e88   Section        0  mc_math.o(i.Trig_Functions)
    i.UART0_IRQHandler                       0x00004eb8   Section        0  interrupt.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00004eba   Section        0  interrupt.o(i.UART1_IRQHandler)
    i.UART_Init                              0x00004ebc   Section        0  lks32mc08x_uart.o(i.UART_Init)
    i.UART_StructInit                        0x00004fc0   Section        0  lks32mc08x_uart.o(i.UART_StructInit)
    i.UART_init                              0x00004fe0   Section        0  hardware_init.o(i.UART_init)
    i.UTIMER0_IRQHandler                     0x0000500c   Section        0  interrupt.o(i.UTIMER0_IRQHandler)
    i.UTIMER1_IRQHandler                     0x0000503c   Section        0  interrupt.o(i.UTIMER1_IRQHandler)
    i.UTIMER2_IRQHandler                     0x0000503e   Section        0  interrupt.o(i.UTIMER2_IRQHandler)
    i.UTIMER3_IRQHandler                     0x00005040   Section        0  interrupt.o(i.UTIMER3_IRQHandler)
    i.UTimer_init                            0x00005044   Section        0  hardware_init.o(i.UTimer_init)
    i.User2AppAngleTrans                     0x00005094   Section        0  app2core.o(i.User2AppAngleTrans)
    i.User2AppCurTrans                       0x000050c0   Section        0  app2core.o(i.User2AppCurTrans)
    i.User2AppFreqTrans                      0x000050ec   Section        0  app2core.o(i.User2AppFreqTrans)
    i.User2AppVolTrans                       0x00005118   Section        0  app2core.o(i.User2AppVolTrans)
    i.VolPulsePwmSet                         0x00005168   Section        0  lib_ipd.o(i.VolPulsePwmSet)
    i.VspSpeedScan                           0x000051b4   Section        0  speedscan.o(i.VspSpeedScan)
    i._DoInit                                0x000052cc   Section        0  segger_rtt.o(i._DoInit)
    _DoInit                                  0x000052cd   Thumb Code    74  segger_rtt.o(i._DoInit)
    i._GetAvailWriteSpace                    0x0000533c   Section        0  segger_rtt.o(i._GetAvailWriteSpace)
    _GetAvailWriteSpace                      0x0000533d   Thumb Code    28  segger_rtt.o(i._GetAvailWriteSpace)
    i._WriteBlocking                         0x00005358   Section        0  segger_rtt.o(i._WriteBlocking)
    _WriteBlocking                           0x00005359   Thumb Code   128  segger_rtt.o(i._WriteBlocking)
    i._WriteNoCheck                          0x000053d8   Section        0  segger_rtt.o(i._WriteNoCheck)
    _WriteNoCheck                            0x000053d9   Thumb Code    74  segger_rtt.o(i._WriteNoCheck)
    i.__ARM_clz                              0x00005422   Section        0  depilogue.o(i.__ARM_clz)
    i.__ARM_common_ll_mulss                  0x00005450   Section        0  fluxobserve.o(i.__ARM_common_ll_mulss)
    i.__ARM_common_ll_muluu                  0x00005480   Section        0  fluxobserve.o(i.__ARM_common_ll_muluu)
    i.__ARM_common_switch8                   0x000054b0   Section        0  lib_svpwm.o(i.__ARM_common_switch8)
    i.__scatterload_copy                     0x000054ca   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000054d8   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000054da   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.lowPass_filter                         0x000054e8   Section        0  lib_svpwm.o(i.lowPass_filter)
    i.main                                   0x000054fa   Section        0  main.o(i.main)
    i.soft_Trg_ADC                           0x0000550c   Section        0  lib_ipd.o(i.soft_Trg_ADC)
    i.sys_init                               0x00005538   Section        0  system_init.o(i.sys_init)
    .constdata                               0x00005568   Section      108  global_variable.o(.constdata)
    .constdata                               0x000055d4   Section      544  lib_svpwm.o(.constdata)
    .data                                    0x20000000   Section        6  global_variable.o(.data)
    .data                                    0x20000006   Section        6  interrupt.o(.data)
    .data                                    0x2000000c   Section        4  state_machine.o(.data)
    .data                                    0x20000010   Section       10  fault_detection.o(.data)
    t_nFlagCheck                             0x20000018   Data           2  fault_detection.o(.data)
    .data                                    0x2000001a   Section        2  foc_drive.o(.data)
    .data                                    0x2000001c   Section        4  lks32mc08x_tmp.o(.data)
    .data                                    0x20000020   Section       72  fluxobserve.o(.data)
    motorControlFlag                         0x20000020   Data           1  fluxobserve.o(.data)
    iMarsWeEst                               0x20000040   Data           4  fluxobserve.o(.data)
    s32_udc_filt                             0x20000044   Data           4  fluxobserve.o(.data)
    iStatorSynDFedbak                        0x20000048   Data           4  fluxobserve.o(.data)
    iStatorSynQFedbak                        0x2000004c   Data           4  fluxobserve.o(.data)
    .data                                    0x20000068   Section       16  onthefly.o(.data)
    sDppAccCnt                               0x20000068   Data           1  onthefly.o(.data)
    s32MotorCurrentMagfilt                   0x2000006c   Data           4  onthefly.o(.data)
    s32MotorCurrentMagfilt1                  0x20000070   Data           4  onthefly.o(.data)
    s32MotorCurrentMagDifAvg                 0x20000074   Data           4  onthefly.o(.data)
    .bss                                     0x20000078   Section      892  global_variable.o(.bss)
    .bss                                     0x200003f4   Section       18  state_machine.o(.bss)
    .bss                                     0x20000408   Section      138  fault_detection.o(.bss)
    .bss                                     0x20000498   Section      108  powercalculation.o(.bss)
    .bss                                     0x20000504   Section       76  bemf_check0824.o(.bss)
    .bss                                     0x20000550   Section     3260  segger_rtt.o(.bss)
    _acUpBuffer                              0x20000dfc   Data        1024  segger_rtt.o(.bss)
    _acDownBuffer                            0x200011fc   Data          16  segger_rtt.o(.bss)
    .bss                                     0x2000120c   Section      104  fluxobserve.o(.bss)
    STACK                                    0x20001278   Section      768  startup_lks32mc08x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lks32mc08x.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_lks32mc08x.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_lks32mc08x.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code    14  startup_lks32mc08x.o(.text)
    NMI_Handler                              0x000000e3   Thumb Code     2  startup_lks32mc08x.o(.text)
    HardFault_Handler                        0x000000e5   Thumb Code     2  startup_lks32mc08x.o(.text)
    SVC_Handler                              0x000000e7   Thumb Code     2  startup_lks32mc08x.o(.text)
    PendSV_Handler                           0x000000e9   Thumb Code     2  startup_lks32mc08x.o(.text)
    CAN_IRQHandler                           0x000000ed   Thumb Code     0  startup_lks32mc08x.o(.text)
    DMA_IRQHandler                           0x000000ed   Thumb Code     0  startup_lks32mc08x.o(.text)
    DSP_IRQHandler                           0x000000ed   Thumb Code     0  startup_lks32mc08x.o(.text)
    MCPWM_IRQHandler                         0x000000ed   Thumb Code     0  startup_lks32mc08x.o(.text)
    SIF_IRQHandler                           0x000000ed   Thumb Code     0  startup_lks32mc08x.o(.text)
    WAKE_IRQHandler                          0x000000ed   Thumb Code     0  startup_lks32mc08x.o(.text)
    __aeabi_uidiv                            0x000000fd   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000000fd   Thumb Code    44  uidiv.o(.text)
    __aeabi_idiv                             0x00000129   Thumb Code     0  idiv.o(.text)
    __aeabi_idivmod                          0x00000129   Thumb Code    40  idiv.o(.text)
    __aeabi_uldivmod                         0x00000151   Thumb Code    96  uldiv.o(.text)
    __aeabi_ldivmod                          0x000001b1   Thumb Code    76  ldiv.o(.text)
    __aeabi_lmul                             0x000001fd   Thumb Code   122  llmul.o(.text)
    _ll_mul                                  0x000001fd   Thumb Code     0  llmul.o(.text)
    __aeabi_llsl                             0x00000277   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x00000277   Thumb Code     0  llshl.o(.text)
    __aeabi_lasr                             0x00000297   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x00000297   Thumb Code     0  llsshr.o(.text)
    __aeabi_memcpy                           0x000002bd   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000002bd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000002bd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000002e1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000002e1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000002e1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000002ef   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000002ef   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000002ef   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000002f3   Thumb Code    18  memseta.o(.text)
    strcpy                                   0x00000305   Thumb Code    18  strcpy.o(.text)
    __aeabi_fmul                             0x00000317   Thumb Code   122  fmul.o(.text)
    __aeabi_fdiv                             0x00000391   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x0000040d   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x00000555   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x00000561   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x00000571   Thumb Code   202  dmul.o(.text)
    __aeabi_ddiv                             0x00000641   Thumb Code   234  ddiv.o(.text)
    __aeabi_i2f                              0x00000731   Thumb Code    22  fflti.o(.text)
    __aeabi_ui2f                             0x00000747   Thumb Code    14  ffltui.o(.text)
    __aeabi_i2d                              0x00000755   Thumb Code    34  dflti.o(.text)
    __aeabi_ui2d                             0x0000077d   Thumb Code    24  dfltui.o(.text)
    __aeabi_l2d                              0x00000799   Thumb Code    38  dfltl.o(.text)
    __aeabi_f2iz                             0x000007c5   Thumb Code    50  ffixi.o(.text)
    __aeabi_d2iz                             0x000007f9   Thumb Code    62  dfixi.o(.text)
    __aeabi_d2uiz                            0x00000841   Thumb Code    50  dfixui.o(.text)
    __aeabi_f2d                              0x0000087d   Thumb Code    40  f2d.o(.text)
    __aeabi_cdcmpeq                          0x000008a5   Thumb Code     0  cdcmple.o(.text)
    __aeabi_cdcmple                          0x000008a5   Thumb Code    38  cdcmple.o(.text)
    __aeabi_llsr                             0x000008cd   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x000008cd   Thumb Code     0  llushr.o(.text)
    __I$use$fp                               0x000008ef   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x000008ef   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x000008ff   Thumb Code   114  fepilogue.o(.text)
    _double_round                            0x00000971   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x0000098b   Thumb Code   164  depilogue.o(.text)
    __scatterload                            0x00000a31   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000a31   Thumb Code     0  init.o(.text)
    ADC0_IRQHandler                          0x00000a55   Thumb Code   180  interrupt.o(i.ADC0_IRQHandler)
    ADC0_init                                0x00000b3d   Thumb Code    70  hardware_init.o(i.ADC0_init)
    ADC_ChannelConfig                        0x00000b89   Thumb Code    46  lks32mc08x_adc.o(i.ADC_ChannelConfig)
    ADC_Init                                 0x00000bb9   Thumb Code   348  lks32mc08x_adc.o(i.ADC_Init)
    ADC_NormalModeCFG                        0x00000d1d   Thumb Code   110  signalchain_sample.o(i.ADC_NormalModeCFG)
    ADC_StructInit                           0x00000d99   Thumb Code    36  lks32mc08x_adc.o(i.ADC_StructInit)
    AdcSampleCal                             0x00000dbd   Thumb Code   124  foc_drive.o(i.AdcSampleCal)
    App2CoreCurTrans                         0x00000e45   Thumb Code    18  app2core.o(i.App2CoreCurTrans)
    App2CoreFreqTrans                        0x00000e5d   Thumb Code    18  app2core.o(i.App2CoreFreqTrans)
    AutoFieldWeakReg                         0x00000e75   Thumb Code    26  fluxobserve.o(i.AutoFieldWeakReg)
    BemfSwitch                               0x00000e99   Thumb Code   174  bemf_check0824.o(i.BemfSwitch)
    Bemf_CheckInit                           0x00000f89   Thumb Code   182  bemf_check0824.o(i.Bemf_CheckInit)
    Bemf_CheckProcess                        0x0000104d   Thumb Code   422  bemf_check0824.o(i.Bemf_CheckProcess)
    BrakeStateCheck                          0x0000120d   Thumb Code   104  onthefly.o(i.BrakeStateCheck)
    CMP_IRQHandler                           0x00001285   Thumb Code   110  interrupt.o(i.CMP_IRQHandler)
    CMP_Init                                 0x00001301   Thumb Code   314  lks32mc08x_cmp.o(i.CMP_Init)
    CMP_StructInit                           0x00001449   Thumb Code    14  lks32mc08x_cmp.o(i.CMP_StructInit)
    CMP_init                                 0x00001457   Thumb Code    68  hardware_init.o(i.CMP_init)
    Calc_Atan                                0x0000149d   Thumb Code   434  lib_svpwm.o(i.Calc_Atan)
    Clock_Init                               0x0000165d   Thumb Code    48  hardware_init.o(i.Clock_Init)
    CurrentAmplitudeCalc                     0x00001699   Thumb Code   410  fault_detection.o(i.CurrentAmplitudeCalc)
    CurrentLoopAxisD_Set                     0x00001839   Thumb Code   126  state_machine.o(i.CurrentLoopAxisD_Set)
    CurrentLoopAxisQ_Set                     0x000018c1   Thumb Code   126  state_machine.o(i.CurrentLoopAxisQ_Set)
    CurrentLoopReg                           0x00001949   Thumb Code   138  foc_drive.o(i.CurrentLoopReg)
    CurrentOffsetCalibration                 0x000019d9   Thumb Code   282  system_init.o(i.CurrentOffsetCalibration)
    CurrentPIRegulator                       0x00001b0d   Thumb Code    68  pid_regulators.o(i.CurrentPIRegulator)
    DAC_init                                 0x00001b51   Thumb Code   168  hardware_init.o(i.DAC_init)
    DSP_Init                                 0x00001c01   Thumb Code    12  lks32mc08x_sys.o(i.DSP_Init)
    DcVoltPerUnitCalc                        0x00001c0d   Thumb Code    48  fluxobserve.o(i.DcVoltPerUnitCalc)
    ENCODER0_IRQHandler                      0x00001c4d   Thumb Code     2  interrupt.o(i.ENCODER0_IRQHandler)
    ENCODER1_IRQHandler                      0x00001c4f   Thumb Code     2  interrupt.o(i.ENCODER1_IRQHandler)
    FOC_InitstruParam                        0x00001c51   Thumb Code   116  foc_drive.o(i.FOC_InitstruParam)
    FOC_Model                                0x00001cd9   Thumb Code   358  foc_drive.o(i.FOC_Model)
    FWLoopPIReg                              0x00001e65   Thumb Code    64  fluxobserve.o(i.FWLoopPIReg)
    FaultCheck                               0x00001ea5   Thumb Code    78  fault_detection.o(i.FaultCheck)
    FaultInit                                0x00001f01   Thumb Code   244  fault_detection.o(i.FaultInit)
    FaultRecoverInit                         0x00002039   Thumb Code    56  fault_detection.o(i.FaultRecoverInit)
    FaultVoltageCheck                        0x00002095   Thumb Code   118  fault_detection.o(i.FaultVoltageCheck)
    FindMaxIn3                               0x00002115   Thumb Code    58  lib_ipd.o(i.FindMaxIn3)
    FindQNum                                 0x0000214f   Thumb Code    28  fluxobserve.o(i.FindQNum)
    FluxObserveInit                          0x0000216d   Thumb Code    40  system_init.o(i.FluxObserveInit)
    FluxObserveParaCalc                      0x000021a1   Thumb Code  1176  fluxobserve.o(i.FluxObserveParaCalc)
    GPIO_IRQHandler                          0x0000263d   Thumb Code     2  interrupt.o(i.GPIO_IRQHandler)
    GPIO_Init                                0x0000263f   Thumb Code   226  lks32mc08x_gpio.o(i.GPIO_Init)
    GPIO_PinAFConfig                         0x00002721   Thumb Code   258  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    GPIO_ResetBits                           0x0000282d   Thumb Code    18  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    GPIO_SetBits                             0x0000283f   Thumb Code    18  lks32mc08x_gpio.o(i.GPIO_SetBits)
    GPIO_StructInit                          0x00002851   Thumb Code    12  lks32mc08x_gpio.o(i.GPIO_StructInit)
    GPIO_WriteBit                            0x0000285d   Thumb Code    20  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    GPIO_init                                0x00002871   Thumb Code   200  hardware_init.o(i.GPIO_init)
    HALL_IRQHandler                          0x0000293d   Thumb Code     2  interrupt.o(i.HALL_IRQHandler)
    HALL_Init                                0x00002941   Thumb Code    64  lks32mc08x_hall.o(i.HALL_Init)
    HALL_Perip_init                          0x00002985   Thumb Code    42  hardware_init.o(i.HALL_Perip_init)
    HALL_StructInit                          0x000029b5   Thumb Code    32  lks32mc08x_hall.o(i.HALL_StructInit)
    Hardware_init                            0x000029d9   Thumb Code   186  hardware_init.o(i.Hardware_init)
    I2C0_IRQHandler                          0x00002ab9   Thumb Code     2  interrupt.o(i.I2C0_IRQHandler)
    IPD_AngleCalc                            0x00002abd   Thumb Code   134  lib_ipd.o(i.IPD_AngleCalc)
    IPD_RotorPosEst                          0x00002b55   Thumb Code   220  lib_ipd.o(i.IPD_RotorPosEst)
    LowPassControl                           0x00002c4d   Thumb Code    46  powercalculation.o(i.LowPassControl)
    MCPWM0_RegUpdate                         0x00002c7d   Thumb Code    96  hardware_init.o(i.MCPWM0_RegUpdate)
    MCPWM_Init                               0x00002ce9   Thumb Code   718  lks32mc08x_mcpwm.o(i.MCPWM_Init)
    MCPWM_StructInit                         0x00002fc9   Thumb Code    14  lks32mc08x_mcpwm.o(i.MCPWM_StructInit)
    MCPWM_init                               0x00002fd9   Thumb Code   180  hardware_init.o(i.MCPWM_init)
    ModuCircle_Limitation                    0x0000309d   Thumb Code   162  fluxobserve.o(i.ModuCircle_Limitation)
    OnTheFlyDetectInit                       0x00003295   Thumb Code    12  fluxobserve.o(i.OnTheFlyDetectInit)
    OnTheFlyDetectPro                        0x000032a5   Thumb Code    96  onthefly.o(i.OnTheFlyDetectPro)
    OpenCloseAngleSwitch                     0x00003315   Thumb Code   120  fluxobserve.o(i.OpenCloseAngleSwitch)
    OpenLoopCurRamp                          0x000033a9   Thumb Code    74  process_control.o(i.OpenLoopCurRamp)
    PGA_init                                 0x000033f5   Thumb Code    52  hardware_init.o(i.PGA_init)
    PWMOutputs                               0x00003431   Thumb Code    44  lks32mc08x_mcpwm.o(i.PWMOutputs)
    PWRDN_IRQHandler                         0x0000346d   Thumb Code     8  interrupt.o(i.PWRDN_IRQHandler)
    PmsmFluxObIni                            0x00003475   Thumb Code    92  fluxobserve.o(i.PmsmFluxObIni)
    PmsmFluxObserve                          0x000034e9   Thumb Code   576  fluxobserve.o(i.PmsmFluxObserve)
    PoloEstCurSample                         0x00003745   Thumb Code    88  lib_ipd.o(i.PoloEstCurSample)
    PowerCalc                                0x000037a5   Thumb Code    82  powercalculation.o(i.PowerCalc)
    Read_Trim                                0x000037f9   Thumb Code    50  lks32mc08x_nvr.o(i.Read_Trim)
    SEGGER_RTT_ConfigUpBuffer                0x00003835   Thumb Code   142  segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer)
    SEGGER_RTT_Write                         0x000038c9   Thumb Code    66  segger_rtt.o(i.SEGGER_RTT_Write)
    SEGGER_RTT_WriteNoLock                   0x00003911   Thumb Code   128  segger_rtt.o(i.SEGGER_RTT_WriteNoLock)
    SPI0_IRQHandler                          0x00003995   Thumb Code     2  interrupt.o(i.SPI0_IRQHandler)
    SVPWM_2ShuntGEN                          0x00003999   Thumb Code   310  lib_svpwm.o(i.SVPWM_2ShuntGEN)
    SVPWM_2ShuntGetPhaseCurrent              0x00003ad5   Thumb Code   482  signalchain_sample.o(i.SVPWM_2ShuntGetPhaseCurrent)
    SYS_AnalogModuleClockCmd                 0x00003cc1   Thumb Code    44  lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd)
    SYS_ModuleClockCmd                       0x00003cf5   Thumb Code    38  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    SYS_VolSelModule                         0x00003d25   Thumb Code   130  lks32mc08x_sys.o(i.SYS_VolSelModule)
    SYS_VolSelModuleEnableIRQ                0x00003db1   Thumb Code    44  lks32mc08x_sys.o(i.SYS_VolSelModuleEnableIRQ)
    SYS_VolSelModuleIRQ                      0x00003de1   Thumb Code   106  lks32mc08x_sys.o(i.SYS_VolSelModuleIRQ)
    SoftDelay                                0x00003e65   Thumb Code    24  hardware_init.o(i.SoftDelay)
    SpeedReferenceGen                        0x00003e95   Thumb Code    54  process_control.o(i.SpeedReferenceGen)
    StateAlign                               0x00003ecd   Thumb Code   142  state_machine.o(i.StateAlign)
    StateBemfDirCheck                        0x00003f79   Thumb Code   430  state_machine.o(i.StateBemfDirCheck)
    StateBemfStop                            0x00004149   Thumb Code    78  state_machine.o(i.StateBemfStop)
    StateCharge                              0x000041a9   Thumb Code   380  state_machine.o(i.StateCharge)
    StateDirCheck                            0x00004355   Thumb Code   326  state_machine.o(i.StateDirCheck)
    StateFault                               0x000044b5   Thumb Code    14  state_machine.o(i.StateFault)
    StateHallRun                             0x000044c9   Thumb Code    78  state_machine.o(i.StateHallRun)
    StateInit                                0x00004521   Thumb Code   474  state_machine.o(i.StateInit)
    StateOpen                                0x0000473d   Thumb Code   204  state_machine.o(i.StateOpen)
    StatePosSeek                             0x00004825   Thumb Code   118  state_machine.o(i.StatePosSeek)
    StateRun                                 0x000048b5   Thumb Code   278  state_machine.o(i.StateRun)
    StateStop                                0x000049e9   Thumb Code   120  state_machine.o(i.StateStop)
    SysTick_Handler                          0x00004a79   Thumb Code     2  interrupt.o(i.SysTick_Handler)
    Sys_State_Machine                        0x00004a7d   Thumb Code   240  state_machine.o(i.Sys_State_Machine)
    SystemInit                               0x00004b79   Thumb Code     8  hardware_init.o(i.SystemInit)
    TIM_TimerCmd                             0x00004b81   Thumb Code   208  lks32mc08x_tim.o(i.TIM_TimerCmd)
    TIM_TimerInit                            0x00004c55   Thumb Code   320  lks32mc08x_tim.o(i.TIM_TimerInit)
    TIM_TimerStrutInit                       0x00004d99   Thumb Code    40  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    Task_Scheduler                           0x00004dc1   Thumb Code   122  task_scheduler.o(i.Task_Scheduler)
    TempSensor_Init                          0x00004e4d   Thumb Code    46  lks32mc08x_tmp.o(i.TempSensor_Init)
    Trig_Functions                           0x00004e89   Thumb Code    42  mc_math.o(i.Trig_Functions)
    UART0_IRQHandler                         0x00004eb9   Thumb Code     2  interrupt.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00004ebb   Thumb Code     2  interrupt.o(i.UART1_IRQHandler)
    UART_Init                                0x00004ebd   Thumb Code   238  lks32mc08x_uart.o(i.UART_Init)
    UART_StructInit                          0x00004fc1   Thumb Code    30  lks32mc08x_uart.o(i.UART_StructInit)
    UART_init                                0x00004fe1   Thumb Code    38  hardware_init.o(i.UART_init)
    UTIMER0_IRQHandler                       0x0000500d   Thumb Code    40  interrupt.o(i.UTIMER0_IRQHandler)
    UTIMER1_IRQHandler                       0x0000503d   Thumb Code     2  interrupt.o(i.UTIMER1_IRQHandler)
    UTIMER2_IRQHandler                       0x0000503f   Thumb Code     2  interrupt.o(i.UTIMER2_IRQHandler)
    UTIMER3_IRQHandler                       0x00005041   Thumb Code     2  interrupt.o(i.UTIMER3_IRQHandler)
    UTimer_init                              0x00005045   Thumb Code    70  hardware_init.o(i.UTimer_init)
    User2AppAngleTrans                       0x00005095   Thumb Code    38  app2core.o(i.User2AppAngleTrans)
    User2AppCurTrans                         0x000050c1   Thumb Code    38  app2core.o(i.User2AppCurTrans)
    User2AppFreqTrans                        0x000050ed   Thumb Code    38  app2core.o(i.User2AppFreqTrans)
    User2AppVolTrans                         0x00005119   Thumb Code    58  app2core.o(i.User2AppVolTrans)
    VolPulsePwmSet                           0x00005169   Thumb Code    68  lib_ipd.o(i.VolPulsePwmSet)
    VspSpeedScan                             0x000051b5   Thumb Code   242  speedscan.o(i.VspSpeedScan)
    __ARM_clz                                0x00005423   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __ARM_common_ll_mulss                    0x00005451   Thumb Code    48  fluxobserve.o(i.__ARM_common_ll_mulss)
    __ARM_common_ll_muluu                    0x00005481   Thumb Code    48  fluxobserve.o(i.__ARM_common_ll_muluu)
    __ARM_common_switch8                     0x000054b1   Thumb Code    26  lib_svpwm.o(i.__ARM_common_switch8)
    __scatterload_copy                       0x000054cb   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000054d9   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000054db   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    lowPass_filter                           0x000054e9   Thumb Code    18  lib_svpwm.o(i.lowPass_filter)
    main                                     0x000054fb   Thumb Code    16  main.o(i.main)
    soft_Trg_ADC                             0x0000550d   Thumb Code    34  lib_ipd.o(i.soft_Trg_ADC)
    sys_init                                 0x00005539   Thumb Code    34  system_init.o(i.sys_init)
    sVersion                                 0x00005568   Data          10  global_variable.o(.constdata)
    struFOC_ConstParam                       0x00005572   Data          16  global_variable.o(.constdata)
    struMotorParam                           0x00005584   Data          44  global_variable.o(.constdata)
    struBoardParam                           0x000055b0   Data          36  global_variable.o(.constdata)
    atantab1                                 0x000055d4   Data         544  lib_svpwm.o(.constdata)
    Region$$Table$$Base                      0x000057f4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005814   Number         0  anon$$obj.o(Region$$Table)
    struBemfVolt                             0x20000000   Data           6  global_variable.o(.data)
    Rttstru                                  0x20000006   Data           6  interrupt.o(.data)
    Iq_Set                                   0x2000000c   Data           4  state_machine.o(.data)
    struImaxCurrent                          0x20000010   Data           6  fault_detection.o(.data)
    stru_Faults                              0x20000016   Data           2  fault_detection.o(.data)
    tElectAngle                              0x2000001a   Data           2  foc_drive.o(.data)
    m_TempertureCof                          0x2000001c   Data           4  lks32mc08x_tmp.o(.data)
    AFWR_KP                                  0x20000022   Data           2  fluxobserve.o(.data)
    AFWR_KI                                  0x20000024   Data           2  fluxobserve.o(.data)
    s16UmRohRef                              0x20000026   Data           2  fluxobserve.o(.data)
    s16UtRohRef                              0x20000028   Data           2  fluxobserve.o(.data)
    iMrasUd                                  0x2000002a   Data           2  fluxobserve.o(.data)
    iMrasUq                                  0x2000002c   Data           2  fluxobserve.o(.data)
    iMrasId                                  0x2000002e   Data           2  fluxobserve.o(.data)
    iMrasIq                                  0x20000030   Data           2  fluxobserve.o(.data)
    iMrasIqEstN                              0x20000032   Data           2  fluxobserve.o(.data)
    iEemfMEst                                0x20000034   Data           2  fluxobserve.o(.data)
    iEemfTEst                                0x20000036   Data           2  fluxobserve.o(.data)
    iEemfMEstAvg                             0x20000038   Data           2  fluxobserve.o(.data)
    iEemfTEstAvg                             0x2000003a   Data           2  fluxobserve.o(.data)
    uMrasTheta_est                           0x2000003c   Data           4  fluxobserve.o(.data)
    vectorComponentsAfo                      0x20000050   Data           4  fluxobserve.o(.data)
    vectorComponentsDThe                     0x20000054   Data           4  fluxobserve.o(.data)
    s32VolOutAvg                             0x20000058   Data           4  fluxobserve.o(.data)
    iMrasIdEstN_1_Fs                         0x2000005c   Data           4  fluxobserve.o(.data)
    iMrasIqEstN_1_Fs                         0x20000060   Data           4  fluxobserve.o(.data)
    synWeObsFilt                             0x20000064   Data           4  fluxobserve.o(.data)
    struTaskScheduler                        0x20000078   Data          12  global_variable.o(.bss)
    struFOC_CtrProc                          0x20000084   Data          20  global_variable.o(.bss)
    struFOC_CurrLoop                         0x20000098   Data         184  global_variable.o(.bss)
    struFluxOB_Param                         0x20000150   Data          56  global_variable.o(.bss)
    struAppCommData                          0x20000188   Data          76  global_variable.o(.bss)
    struMotorSpeed                           0x200001d8   Data          88  global_variable.o(.bss)
    mOnTheFlyDetect                          0x20000230   Data          36  global_variable.o(.bss)
    mSpeedPI                                 0x20000254   Data          28  global_variable.o(.bss)
    mOpenForceRun                            0x20000270   Data          28  global_variable.o(.bss)
    struUser2App                             0x2000028c   Data          32  global_variable.o(.bss)
    struCore2App                             0x200002ac   Data          32  global_variable.o(.bss)
    struApp2Core                             0x200002cc   Data          32  global_variable.o(.bss)
    struHallProcess                          0x200002ec   Data         232  global_variable.o(.bss)
    mIPD_CtrProc                             0x200003d4   Data          32  global_variable.o(.bss)
    struTime                                 0x200003f4   Data          18  state_machine.o(.bss)
    struCurrentAmplitude                     0x20000408   Data          28  fault_detection.o(.bss)
    stru_FaultValue                          0x20000424   Data          40  fault_detection.o(.bss)
    struFaultVoltTime                        0x2000044c   Data          10  fault_detection.o(.bss)
    struFaultEmptyTime                       0x20000456   Data          10  fault_detection.o(.bss)
    struFaultStallTime                       0x20000460   Data          10  fault_detection.o(.bss)
    struFaultCurrentTime                     0x2000046a   Data          10  fault_detection.o(.bss)
    struFaultTempTime                        0x20000474   Data          10  fault_detection.o(.bss)
    struFaultPhaseTime                       0x2000047e   Data          10  fault_detection.o(.bss)
    struFaultStartTime                       0x20000488   Data          10  fault_detection.o(.bss)
    struPower                                0x20000498   Data          96  powercalculation.o(.bss)
    PowerRamp                                0x200004f8   Data          12  powercalculation.o(.bss)
    stru_BEMF_Check                          0x20000504   Data          76  bemf_check0824.o(.bss)
    bRttBuf                                  0x20000550   Data        2050  segger_rtt.o(.bss)
    _SEGGER_RTT                              0x20000d54   Data         168  segger_rtt.o(.bss)
    struFluxOB_Var                           0x2000120c   Data          28  fluxobserve.o(.bss)
    AEMFRM                                   0x20001228   Data          28  fluxobserve.o(.bss)
    AEMFRT                                   0x20001244   Data          28  fluxobserve.o(.bss)
    AFWR                                     0x20001260   Data          20  fluxobserve.o(.bss)
    __initial_sp                             0x20001578   Data           0  startup_lks32mc08x.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x0000588c, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005814, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO         2329    RESET               startup_lks32mc08x.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         3024  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         3083    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         3086    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         3088    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         3090    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         3091    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         3093    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         3095    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         3084    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x00000028   Code   RO         2330    .text               startup_lks32mc08x.o
    0x000000fc   0x000000fc   0x0000002c   Code   RO         3027    .text               mc_p.l(uidiv.o)
    0x00000128   0x00000128   0x00000028   Code   RO         3029    .text               mc_p.l(idiv.o)
    0x00000150   0x00000150   0x00000060   Code   RO         3031    .text               mc_p.l(uldiv.o)
    0x000001b0   0x000001b0   0x0000004c   Code   RO         3033    .text               mc_p.l(ldiv.o)
    0x000001fc   0x000001fc   0x0000007a   Code   RO         3035    .text               mc_p.l(llmul.o)
    0x00000276   0x00000276   0x00000020   Code   RO         3037    .text               mc_p.l(llshl.o)
    0x00000296   0x00000296   0x00000026   Code   RO         3039    .text               mc_p.l(llsshr.o)
    0x000002bc   0x000002bc   0x00000024   Code   RO         3041    .text               mc_p.l(memcpya.o)
    0x000002e0   0x000002e0   0x00000024   Code   RO         3043    .text               mc_p.l(memseta.o)
    0x00000304   0x00000304   0x00000012   Code   RO         3047    .text               mc_p.l(strcpy.o)
    0x00000316   0x00000316   0x0000007a   Code   RO         3051    .text               mf_p.l(fmul.o)
    0x00000390   0x00000390   0x0000007c   Code   RO         3053    .text               mf_p.l(fdiv.o)
    0x0000040c   0x0000040c   0x00000164   Code   RO         3055    .text               mf_p.l(dadd.o)
    0x00000570   0x00000570   0x000000d0   Code   RO         3057    .text               mf_p.l(dmul.o)
    0x00000640   0x00000640   0x000000f0   Code   RO         3059    .text               mf_p.l(ddiv.o)
    0x00000730   0x00000730   0x00000016   Code   RO         3061    .text               mf_p.l(fflti.o)
    0x00000746   0x00000746   0x0000000e   Code   RO         3063    .text               mf_p.l(ffltui.o)
    0x00000754   0x00000754   0x00000028   Code   RO         3065    .text               mf_p.l(dflti.o)
    0x0000077c   0x0000077c   0x0000001c   Code   RO         3067    .text               mf_p.l(dfltui.o)
    0x00000798   0x00000798   0x0000002c   Code   RO         3069    .text               mf_p.l(dfltl.o)
    0x000007c4   0x000007c4   0x00000032   Code   RO         3071    .text               mf_p.l(ffixi.o)
    0x000007f6   0x000007f6   0x00000002   PAD
    0x000007f8   0x000007f8   0x00000048   Code   RO         3073    .text               mf_p.l(dfixi.o)
    0x00000840   0x00000840   0x0000003c   Code   RO         3075    .text               mf_p.l(dfixui.o)
    0x0000087c   0x0000087c   0x00000028   Code   RO         3077    .text               mf_p.l(f2d.o)
    0x000008a4   0x000008a4   0x00000028   Code   RO         3079    .text               mf_p.l(cdcmple.o)
    0x000008cc   0x000008cc   0x00000022   Code   RO         3097    .text               mc_p.l(llushr.o)
    0x000008ee   0x000008ee   0x00000000   Code   RO         3099    .text               mc_p.l(iusefp.o)
    0x000008ee   0x000008ee   0x00000082   Code   RO         3100    .text               mf_p.l(fepilogue.o)
    0x00000970   0x00000970   0x000000be   Code   RO         3102    .text               mf_p.l(depilogue.o)
    0x00000a2e   0x00000a2e   0x00000002   PAD
    0x00000a30   0x00000a30   0x00000024   Code   RO         3106    .text               mc_p.l(init.o)
    0x00000a54   0x00000a54   0x000000e8   Code   RO          309    i.ADC0_IRQHandler   interrupt.o
    0x00000b3c   0x00000b3c   0x0000004c   Code   RO          155    i.ADC0_init         hardware_init.o
    0x00000b88   0x00000b88   0x0000002e   Code   RO         1321    i.ADC_ChannelConfig  lks32mc08x_adc.o
    0x00000bb6   0x00000bb6   0x00000002   PAD
    0x00000bb8   0x00000bb8   0x00000164   Code   RO         1325    i.ADC_Init          lks32mc08x_adc.o
    0x00000d1c   0x00000d1c   0x0000007c   Code   RO         1018    i.ADC_NormalModeCFG  signalchain_sample.o
    0x00000d98   0x00000d98   0x00000024   Code   RO         1327    i.ADC_StructInit    lks32mc08x_adc.o
    0x00000dbc   0x00000dbc   0x00000088   Code   RO          959    i.AdcSampleCal      foc_drive.o
    0x00000e44   0x00000e44   0x00000018   Code   RO          870    i.App2CoreCurTrans  app2core.o
    0x00000e5c   0x00000e5c   0x00000018   Code   RO          871    i.App2CoreFreqTrans  app2core.o
    0x00000e74   0x00000e74   0x00000024   Code   RO         2662    i.AutoFieldWeakReg  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00000e98   0x00000e98   0x000000f0   Code   RO         1142    i.BemfSwitch        bemf_check0824.o
    0x00000f88   0x00000f88   0x000000c4   Code   RO         1143    i.Bemf_CheckInit    bemf_check0824.o
    0x0000104c   0x0000104c   0x000001c0   Code   RO         1144    i.Bemf_CheckProcess  bemf_check0824.o
    0x0000120c   0x0000120c   0x00000078   Code   RO         2808    i.BrakeStateCheck   LKS08x_FluxOBS_Hall_V4p2.lib(onthefly.o)
    0x00001284   0x00001284   0x0000007c   Code   RO          310    i.CMP_IRQHandler    interrupt.o
    0x00001300   0x00001300   0x00000148   Code   RO         1479    i.CMP_Init          lks32mc08x_cmp.o
    0x00001448   0x00001448   0x0000000e   Code   RO         1480    i.CMP_StructInit    lks32mc08x_cmp.o
    0x00001456   0x00001456   0x00000044   Code   RO          156    i.CMP_init          hardware_init.o
    0x0000149a   0x0000149a   0x00000002   PAD
    0x0000149c   0x0000149c   0x000001c0   Code   RO         2569    i.Calc_Atan         LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x0000165c   0x0000165c   0x0000003c   Code   RO          157    i.Clock_Init        hardware_init.o
    0x00001698   0x00001698   0x000001a0   Code   RO          625    i.CurrentAmplitudeCalc  fault_detection.o
    0x00001838   0x00001838   0x00000088   Code   RO          482    i.CurrentLoopAxisD_Set  state_machine.o
    0x000018c0   0x000018c0   0x00000088   Code   RO          483    i.CurrentLoopAxisQ_Set  state_machine.o
    0x00001948   0x00001948   0x00000090   Code   RO          960    i.CurrentLoopReg    foc_drive.o
    0x000019d8   0x000019d8   0x00000134   Code   RO          432    i.CurrentOffsetCalibration  system_init.o
    0x00001b0c   0x00001b0c   0x00000044   Code   RO         1036    i.CurrentPIRegulator  pid_regulators.o
    0x00001b50   0x00001b50   0x000000b0   Code   RO          158    i.DAC_init          hardware_init.o
    0x00001c00   0x00001c00   0x0000000c   Code   RO         2016    i.DSP_Init          lks32mc08x_sys.o
    0x00001c0c   0x00001c0c   0x00000040   Code   RO         2663    i.DcVoltPerUnitCalc  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00001c4c   0x00001c4c   0x00000002   Code   RO          311    i.ENCODER0_IRQHandler  interrupt.o
    0x00001c4e   0x00001c4e   0x00000002   Code   RO          312    i.ENCODER1_IRQHandler  interrupt.o
    0x00001c50   0x00001c50   0x00000088   Code   RO          961    i.FOC_InitstruParam  foc_drive.o
    0x00001cd8   0x00001cd8   0x0000018c   Code   RO          962    i.FOC_Model         foc_drive.o
    0x00001e64   0x00001e64   0x00000040   Code   RO         2664    i.FWLoopPIReg       LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00001ea4   0x00001ea4   0x0000005c   Code   RO          626    i.FaultCheck        fault_detection.o
    0x00001f00   0x00001f00   0x00000138   Code   RO          629    i.FaultInit         fault_detection.o
    0x00002038   0x00002038   0x0000005c   Code   RO          632    i.FaultRecoverInit  fault_detection.o
    0x00002094   0x00002094   0x00000080   Code   RO          636    i.FaultVoltageCheck  fault_detection.o
    0x00002114   0x00002114   0x0000003a   Code   RO         2736    i.FindMaxIn3        LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x0000214e   0x0000214e   0x0000001c   Code   RO         2665    i.FindQNum          LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x0000216a   0x0000216a   0x00000002   PAD
    0x0000216c   0x0000216c   0x00000034   Code   RO          433    i.FluxObserveInit   system_init.o
    0x000021a0   0x000021a0   0x0000049c   Code   RO         2666    i.FluxObserveParaCalc  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x0000263c   0x0000263c   0x00000002   Code   RO          313    i.GPIO_IRQHandler   interrupt.o
    0x0000263e   0x0000263e   0x000000e2   Code   RO         1671    i.GPIO_Init         lks32mc08x_gpio.o
    0x00002720   0x00002720   0x0000010c   Code   RO         1673    i.GPIO_PinAFConfig  lks32mc08x_gpio.o
    0x0000282c   0x0000282c   0x00000012   Code   RO         1678    i.GPIO_ResetBits    lks32mc08x_gpio.o
    0x0000283e   0x0000283e   0x00000012   Code   RO         1679    i.GPIO_SetBits      lks32mc08x_gpio.o
    0x00002850   0x00002850   0x0000000c   Code   RO         1680    i.GPIO_StructInit   lks32mc08x_gpio.o
    0x0000285c   0x0000285c   0x00000014   Code   RO         1683    i.GPIO_WriteBit     lks32mc08x_gpio.o
    0x00002870   0x00002870   0x000000cc   Code   RO          160    i.GPIO_init         hardware_init.o
    0x0000293c   0x0000293c   0x00000002   Code   RO          314    i.HALL_IRQHandler   interrupt.o
    0x0000293e   0x0000293e   0x00000002   PAD
    0x00002940   0x00002940   0x00000044   Code   RO         1760    i.HALL_Init         lks32mc08x_hall.o
    0x00002984   0x00002984   0x00000030   Code   RO          161    i.HALL_Perip_init   hardware_init.o
    0x000029b4   0x000029b4   0x00000024   Code   RO         1761    i.HALL_StructInit   lks32mc08x_hall.o
    0x000029d8   0x000029d8   0x000000e0   Code   RO          162    i.Hardware_init     hardware_init.o
    0x00002ab8   0x00002ab8   0x00000002   Code   RO          315    i.I2C0_IRQHandler   interrupt.o
    0x00002aba   0x00002aba   0x00000002   PAD
    0x00002abc   0x00002abc   0x00000098   Code   RO         2737    i.IPD_AngleCalc     LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00002b54   0x00002b54   0x000000f8   Code   RO         2738    i.IPD_RotorPosEst   LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00002c4c   0x00002c4c   0x0000002e   Code   RO          742    i.LowPassControl    powercalculation.o
    0x00002c7a   0x00002c7a   0x00000002   PAD
    0x00002c7c   0x00002c7c   0x0000006c   Code   RO          163    i.MCPWM0_RegUpdate  hardware_init.o
    0x00002ce8   0x00002ce8   0x000002e0   Code   RO         1913    i.MCPWM_Init        lks32mc08x_mcpwm.o
    0x00002fc8   0x00002fc8   0x0000000e   Code   RO         1914    i.MCPWM_StructInit  lks32mc08x_mcpwm.o
    0x00002fd6   0x00002fd6   0x00000002   PAD
    0x00002fd8   0x00002fd8   0x000000c4   Code   RO          164    i.MCPWM_init        hardware_init.o
    0x0000309c   0x0000309c   0x000000c0   Code   RO         2667    i.ModuCircle_Limitation  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x0000315c   0x0000315c   0x00000018   Code   RO         2017    i.NVIC_ClearPendingIRQ  lks32mc08x_sys.o
    0x00003174   0x00003174   0x00000018   Code   RO         2018    i.NVIC_DisableIRQ   lks32mc08x_sys.o
    0x0000318c   0x0000318c   0x00000018   Code   RO          165    i.NVIC_EnableIRQ    hardware_init.o
    0x000031a4   0x000031a4   0x00000078   Code   RO          166    i.NVIC_SetPriority  hardware_init.o
    0x0000321c   0x0000321c   0x00000078   Code   RO         2019    i.NVIC_SetPriority  lks32mc08x_sys.o
    0x00003294   0x00003294   0x00000010   Code   RO         2668    i.OnTheFlyDetectInit  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x000032a4   0x000032a4   0x00000070   Code   RO         2809    i.OnTheFlyDetectPro  LKS08x_FluxOBS_Hall_V4p2.lib(onthefly.o)
    0x00003314   0x00003314   0x00000094   Code   RO         2669    i.OpenCloseAngleSwitch  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x000033a8   0x000033a8   0x0000004a   Code   RO          717    i.OpenLoopCurRamp   process_control.o
    0x000033f2   0x000033f2   0x00000002   PAD
    0x000033f4   0x000033f4   0x0000003c   Code   RO          167    i.PGA_init          hardware_init.o
    0x00003430   0x00003430   0x0000003c   Code   RO         1915    i.PWMOutputs        lks32mc08x_mcpwm.o
    0x0000346c   0x0000346c   0x00000008   Code   RO          316    i.PWRDN_IRQHandler  interrupt.o
    0x00003474   0x00003474   0x00000074   Code   RO         2670    i.PmsmFluxObIni     LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x000034e8   0x000034e8   0x0000025c   Code   RO         2671    i.PmsmFluxObserve   LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00003744   0x00003744   0x00000060   Code   RO         2739    i.PoloEstCurSample  LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x000037a4   0x000037a4   0x00000052   Code   RO          743    i.PowerCalc         powercalculation.o
    0x000037f6   0x000037f6   0x00000002   PAD
    0x000037f8   0x000037f8   0x0000003c   Code   RO         2961    i.Read_Trim         lks32mc08x_nvr.lib(lks32mc08x_nvr.o)
    0x00003834   0x00003834   0x00000094   Code   RO         2337    i.SEGGER_RTT_ConfigUpBuffer  segger_rtt.o
    0x000038c8   0x000038c8   0x00000048   Code   RO         2354    i.SEGGER_RTT_Write  segger_rtt.o
    0x00003910   0x00003910   0x00000084   Code   RO         2355    i.SEGGER_RTT_WriteNoLock  segger_rtt.o
    0x00003994   0x00003994   0x00000002   Code   RO          317    i.SPI0_IRQHandler   interrupt.o
    0x00003996   0x00003996   0x00000002   PAD
    0x00003998   0x00003998   0x0000013c   Code   RO         2572    i.SVPWM_2ShuntGEN   LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x00003ad4   0x00003ad4   0x000001ec   Code   RO         1019    i.SVPWM_2ShuntGetPhaseCurrent  signalchain_sample.o
    0x00003cc0   0x00003cc0   0x00000034   Code   RO         2020    i.SYS_AnalogModuleClockCmd  lks32mc08x_sys.o
    0x00003cf4   0x00003cf4   0x00000030   Code   RO         2027    i.SYS_ModuleClockCmd  lks32mc08x_sys.o
    0x00003d24   0x00003d24   0x0000008c   Code   RO         2031    i.SYS_VolSelModule  lks32mc08x_sys.o
    0x00003db0   0x00003db0   0x00000030   Code   RO         2032    i.SYS_VolSelModuleEnableIRQ  lks32mc08x_sys.o
    0x00003de0   0x00003de0   0x00000084   Code   RO         2033    i.SYS_VolSelModuleIRQ  lks32mc08x_sys.o
    0x00003e64   0x00003e64   0x00000018   Code   RO          170    i.SoftDelay         hardware_init.o
    0x00003e7c   0x00003e7c   0x00000018   Code   RO         2036    i.SoftDelay         lks32mc08x_sys.o
    0x00003e94   0x00003e94   0x00000036   Code   RO          719    i.SpeedReferenceGen  process_control.o
    0x00003eca   0x00003eca   0x00000002   PAD
    0x00003ecc   0x00003ecc   0x000000ac   Code   RO          485    i.StateAlign        state_machine.o
    0x00003f78   0x00003f78   0x000001d0   Code   RO          486    i.StateBemfDirCheck  state_machine.o
    0x00004148   0x00004148   0x00000060   Code   RO          487    i.StateBemfStop     state_machine.o
    0x000041a8   0x000041a8   0x000001ac   Code   RO          488    i.StateCharge       state_machine.o
    0x00004354   0x00004354   0x00000160   Code   RO          489    i.StateDirCheck     state_machine.o
    0x000044b4   0x000044b4   0x00000014   Code   RO          490    i.StateFault        state_machine.o
    0x000044c8   0x000044c8   0x00000058   Code   RO          491    i.StateHallRun      state_machine.o
    0x00004520   0x00004520   0x0000021c   Code   RO          492    i.StateInit         state_machine.o
    0x0000473c   0x0000473c   0x000000e8   Code   RO          493    i.StateOpen         state_machine.o
    0x00004824   0x00004824   0x00000090   Code   RO          494    i.StatePosSeek      state_machine.o
    0x000048b4   0x000048b4   0x00000134   Code   RO          495    i.StateRun          state_machine.o
    0x000049e8   0x000049e8   0x00000090   Code   RO          496    i.StateStop         state_machine.o
    0x00004a78   0x00004a78   0x00000002   Code   RO          319    i.SysTick_Handler   interrupt.o
    0x00004a7a   0x00004a7a   0x00000002   PAD
    0x00004a7c   0x00004a7c   0x000000fc   Code   RO          497    i.Sys_State_Machine  state_machine.o
    0x00004b78   0x00004b78   0x00000008   Code   RO          171    i.SystemInit        hardware_init.o
    0x00004b80   0x00004b80   0x000000d4   Code   RO         2170    i.TIM_TimerCmd      lks32mc08x_tim.o
    0x00004c54   0x00004c54   0x00000144   Code   RO         2171    i.TIM_TimerInit     lks32mc08x_tim.o
    0x00004d98   0x00004d98   0x00000028   Code   RO         2172    i.TIM_TimerStrutInit  lks32mc08x_tim.o
    0x00004dc0   0x00004dc0   0x0000008c   Code   RO          464    i.Task_Scheduler    task_scheduler.o
    0x00004e4c   0x00004e4c   0x0000003c   Code   RO         2307    i.TempSensor_Init   lks32mc08x_tmp.o
    0x00004e88   0x00004e88   0x00000030   Code   RO          849    i.Trig_Functions    mc_math.o
    0x00004eb8   0x00004eb8   0x00000002   Code   RO          320    i.UART0_IRQHandler  interrupt.o
    0x00004eba   0x00004eba   0x00000002   Code   RO          321    i.UART1_IRQHandler  interrupt.o
    0x00004ebc   0x00004ebc   0x00000104   Code   RO         2254    i.UART_Init         lks32mc08x_uart.o
    0x00004fc0   0x00004fc0   0x0000001e   Code   RO         2259    i.UART_StructInit   lks32mc08x_uart.o
    0x00004fde   0x00004fde   0x00000002   PAD
    0x00004fe0   0x00004fe0   0x0000002c   Code   RO          174    i.UART_init         hardware_init.o
    0x0000500c   0x0000500c   0x00000030   Code   RO          322    i.UTIMER0_IRQHandler  interrupt.o
    0x0000503c   0x0000503c   0x00000002   Code   RO          323    i.UTIMER1_IRQHandler  interrupt.o
    0x0000503e   0x0000503e   0x00000002   Code   RO          324    i.UTIMER2_IRQHandler  interrupt.o
    0x00005040   0x00005040   0x00000002   Code   RO          325    i.UTIMER3_IRQHandler  interrupt.o
    0x00005042   0x00005042   0x00000002   PAD
    0x00005044   0x00005044   0x00000050   Code   RO          175    i.UTimer_init       hardware_init.o
    0x00005094   0x00005094   0x0000002c   Code   RO          879    i.User2AppAngleTrans  app2core.o
    0x000050c0   0x000050c0   0x0000002c   Code   RO          880    i.User2AppCurTrans  app2core.o
    0x000050ec   0x000050ec   0x0000002c   Code   RO          881    i.User2AppFreqTrans  app2core.o
    0x00005118   0x00005118   0x00000050   Code   RO          882    i.User2AppVolTrans  app2core.o
    0x00005168   0x00005168   0x0000004c   Code   RO         2740    i.VolPulsePwmSet    LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x000051b4   0x000051b4   0x00000118   Code   RO          815    i.VspSpeedScan      speedscan.o
    0x000052cc   0x000052cc   0x00000070   Code   RO         2359    i._DoInit           segger_rtt.o
    0x0000533c   0x0000533c   0x0000001c   Code   RO         2360    i._GetAvailWriteSpace  segger_rtt.o
    0x00005358   0x00005358   0x00000080   Code   RO         2362    i._WriteBlocking    segger_rtt.o
    0x000053d8   0x000053d8   0x0000004a   Code   RO         2363    i._WriteNoCheck     segger_rtt.o
    0x00005422   0x00005422   0x0000002e   Code   RO         3104    i.__ARM_clz         mf_p.l(depilogue.o)
    0x00005450   0x00005450   0x00000030   Code   RO         2730    i.__ARM_common_ll_mulss  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x00005480   0x00005480   0x00000030   Code   RO         2728    i.__ARM_common_ll_muluu  LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x000054b0   0x000054b0   0x0000001a   Code   RO         2618    i.__ARM_common_switch8  LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x000054ca   0x000054ca   0x0000000e   Code   RO         3109    i.__scatterload_copy  mc_p.l(handlers.o)
    0x000054d8   0x000054d8   0x00000002   Code   RO         3110    i.__scatterload_null  mc_p.l(handlers.o)
    0x000054da   0x000054da   0x0000000e   Code   RO         3111    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x000054e8   0x000054e8   0x00000012   Code   RO         2575    i.lowPass_filter    LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x000054fa   0x000054fa   0x00000010   Code   RO          836    i.main              main.o
    0x0000550a   0x0000550a   0x00000002   PAD
    0x0000550c   0x0000550c   0x0000002c   Code   RO         2741    i.soft_Trg_ADC      LKS08x_FluxOBS_Hall_V4p2.lib(lib_ipd.o)
    0x00005538   0x00005538   0x00000030   Code   RO          434    i.sys_init          system_init.o
    0x00005568   0x00005568   0x0000006c   Data   RO            2    .constdata          global_variable.o
    0x000055d4   0x000055d4   0x00000220   Data   RO         2576    .constdata          LKS08x_FluxOBS_Hall_V4p2.lib(lib_svpwm.o)
    0x000057f4   0x000057f4   0x00000020   Data   RO         3108    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00005814, Size: 0x00001578, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00005814   0x00000006   Data   RW            3    .data               global_variable.o
    0x20000006   0x0000581a   0x00000006   Data   RW          326    .data               interrupt.o
    0x2000000c   0x00005820   0x00000004   Data   RW          499    .data               state_machine.o
    0x20000010   0x00005824   0x0000000a   Data   RW          638    .data               fault_detection.o
    0x2000001a   0x0000582e   0x00000002   Data   RW          965    .data               foc_drive.o
    0x2000001c   0x00005830   0x00000004   Data   RW         2308    .data               lks32mc08x_tmp.o
    0x20000020   0x00005834   0x00000048   Data   RW         2673    .data               LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x20000068   0x0000587c   0x00000010   Data   RW         2810    .data               LKS08x_FluxOBS_Hall_V4p2.lib(onthefly.o)
    0x20000078        -       0x0000037c   Zero   RW            1    .bss                global_variable.o
    0x200003f4        -       0x00000012   Zero   RW          498    .bss                state_machine.o
    0x20000406   0x0000588c   0x00000002   PAD
    0x20000408        -       0x0000008a   Zero   RW          637    .bss                fault_detection.o
    0x20000492   0x0000588c   0x00000006   PAD
    0x20000498        -       0x0000006c   Zero   RW          750    .bss                powercalculation.o
    0x20000504        -       0x0000004c   Zero   RW         1145    .bss                bemf_check0824.o
    0x20000550        -       0x00000cbc   Zero   RW         2364    .bss                segger_rtt.o
    0x2000120c        -       0x00000068   Zero   RW         2672    .bss                LKS08x_FluxOBS_Hall_V4p2.lib(fluxobserve.o)
    0x20001274   0x0000588c   0x00000004   PAD
    0x20001278        -       0x00000300   Zero   RW         2327    STACK               startup_lks32mc08x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       260         52          0          0          0       3290   app2core.o
       884        106          0          0         76      16634   bemf_check0824.o
      1040        142          0         10        138       5695   fault_detection.o
       812         94          0          2          0       9276   foc_drive.o
         0          0        108          6        892      43902   global_variable.o
      1520        140          0          0          0      15385   hardware_init.o
       436         74          0          6          0       7768   interrupt.o
       438          8          0          0          0       2340   lks32mc08x_adc.o
       342         14          0          0          0       1536   lks32mc08x_cmp.o
       562         28          0          0          0       4357   lks32mc08x_gpio.o
       104          8          0          0          0       1478   lks32mc08x_hall.o
       810         34          0          0          0       6385   lks32mc08x_mcpwm.o
       624         80          0          0          0       9576   lks32mc08x_sys.o
       576          8          0          0          0       2476   lks32mc08x_tim.o
        60         14          0          4          0        780   lks32mc08x_tmp.o
       290         22          0          0          0       1778   lks32mc08x_uart.o
        16          0          0          0          0        431   main.o
        48          6          0          0          0        561   mc_math.o
        68          0          0          0          0       1081   pid_regulators.o
       128          0          0          0        108       2955   powercalculation.o
       128          0          0          0          0       1478   process_control.o
       694         54          0          0       3260       8778   segger_rtt.o
       616         44          0          0          0       2070   signalchain_sample.o
       280         38          0          0          0        575   speedscan.o
        40         14        192          0        768        664   startup_lks32mc08x.o
      3512        400          0          4         18      12945   state_machine.o
       408         52          0          0          0       1796   system_init.o
       140         18          0          0          0       2225   task_scheduler.o

    ----------------------------------------------------------------------
     14864       1450        332         32       5268     168215   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        28          0          0          0          8          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

      2544        222          0         72        104       8947   fluxobserve.o
       674         92          0          0          0       3722   lib_ipd.o
         0          0          0          0          0       2276   lib_mc_hall.o
       808         20        544          0          0      14008   lib_svpwm.o
       232         32          0         16          0       1386   onthefly.o
        60         10          0          0          0        712   lks32mc08x_nvr.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        40          0          0          0          0         72   idiv.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        76          0          0          0          0         76   ldiv.o
       122          0          0          0          0         84   llmul.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
        18          0          0          0          0         60   strcpy.o
        44          0          0          0          0         72   uidiv.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdcmple.o
       356          4          0          0          0        140   dadd.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        72         10          0          0          0         72   dfixi.o
        60         10          0          0          0         68   dfixui.o
        40          6          0          0          0         68   dflti.o
        44          6          0          0          0         72   dfltl.o
        28          4          0          0          0         68   dfltui.o
       208          6          0          0          0         88   dmul.o
        40          0          0          0          0         60   f2d.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        50          0          0          0          0         60   ffixi.o
        22          0          0          0          0         68   fflti.o
        14          0          0          0          0         68   ffltui.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      6808        446        544         88        108      33419   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      4258        366        544         88        104      30339   LKS08x_FluxOBS_Hall_V4p2.lib
        60         10          0          0          0        712   lks32mc08x_nvr.lib
       658         16          0          0          0        880   mc_p.l
      1826         54          0          0          0       1488   mf_p.l

    ----------------------------------------------------------------------
      6808        446        544         88        108      33419   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     21672       1896        876        120       5376     194474   Grand Totals
     21672       1896        876        120       5376     194474   ELF Image Totals
     21672       1896        876        120          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                22548 (  22.02kB)
    Total RW  Size (RW Data + ZI Data)              5496 (   5.37kB)
    Total ROM Size (Code + RO Data + RW Data)      22668 (  22.14kB)

==============================================================================

