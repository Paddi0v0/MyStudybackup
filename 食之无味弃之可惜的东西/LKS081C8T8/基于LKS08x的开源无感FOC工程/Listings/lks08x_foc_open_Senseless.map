Component: ARM Compiler 6.14 Tool: armlink [5db06800]

==============================================================================

Section Cross References

    main.o(.text.main) refers to hardware_init.o(.text.Hardware_init) for Hardware_init
    main.o(.text.main) refers to sys_init.o(.text.sys_init) for sys_init
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_sys.o(.text.DSP_Init) for DSP_Init
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_adc.o(.text.ADC_StructInit) for ADC_StructInit
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_adc.o(.text.ADC_Init) for ADC_Init
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) for MCPWM_StructInit
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_Init) for MCPWM_Init
    hardware_init.o(.text.Hardware_init) refers to hardware_init.o(.text.GPIO_init) for GPIO_init
    hardware_init.o(.ARM.exidx.text.Hardware_init) refers to hardware_init.o(.text.Hardware_init) for [Anonymous Symbol]
    hardware_init.o(.text.ADC_init) refers to lks32mc08x_adc.o(.text.ADC_StructInit) for ADC_StructInit
    hardware_init.o(.text.ADC_init) refers to lks32mc08x_adc.o(.text.ADC_Init) for ADC_Init
    hardware_init.o(.ARM.exidx.text.ADC_init) refers to hardware_init.o(.text.ADC_init) for [Anonymous Symbol]
    hardware_init.o(.text.MCPWM_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) for MCPWM_StructInit
    hardware_init.o(.text.MCPWM_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_Init) for MCPWM_Init
    hardware_init.o(.ARM.exidx.text.MCPWM_init) refers to hardware_init.o(.text.MCPWM_init) for [Anonymous Symbol]
    hardware_init.o(.text.GPIO_init) refers to lks32mc08x_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    hardware_init.o(.text.GPIO_init) refers to lks32mc08x_gpio.o(.text.GPIO_Init) for GPIO_Init
    hardware_init.o(.text.GPIO_init) refers to lks32mc08x_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hardware_init.o(.ARM.exidx.text.GPIO_init) refers to hardware_init.o(.text.GPIO_init) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.PGA_init) refers to hardware_init.o(.text.PGA_init) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.SoftDelay) refers to hardware_init.o(.text.SoftDelay) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.SystemInit) refers to hardware_init.o(.text.SystemInit) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.ADC_NormalModeCFG) refers to hardware_init.o(.text.ADC_NormalModeCFG) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.MCPWM0_RegUpdate) refers to hardware_init.o(.text.MCPWM0_RegUpdate) for [Anonymous Symbol]
    sys_init.o(.text.sys_init) refers to foc_drive.o(.text.FOC_InitstruParama) for FOC_InitstruParama
    sys_init.o(.text.sys_init) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    sys_init.o(.ARM.exidx.text.sys_init) refers to sys_init.o(.text.sys_init) for [Anonymous Symbol]
    sys_init.o(.text.currentOffsetRead) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    sys_init.o(.ARM.exidx.text.currentOffsetRead) refers to sys_init.o(.text.currentOffsetRead) for [Anonymous Symbol]
    task_scheduler.o(.text.Sys_State_Machine) refers to foc_drive.o(.text.MCL_Init) for MCL_Init
    task_scheduler.o(.text.Sys_State_Machine) refers to lks32mc08x_mcpwm.o(.text.PWMOutputs) for PWMOutputs
    task_scheduler.o(.text.Sys_State_Machine) refers to task_scheduler.o(.text.Sys_State_Run) for Sys_State_Run
    task_scheduler.o(.ARM.exidx.text.Sys_State_Machine) refers to task_scheduler.o(.text.Sys_State_Machine) for [Anonymous Symbol]
    task_scheduler.o(.text.Sys_State_Run) refers to pid_regulators.o(.text.HL_PI_AntiDump) for HL_PI_AntiDump
    task_scheduler.o(.ARM.exidx.text.Sys_State_Run) refers to task_scheduler.o(.text.Sys_State_Run) for [Anonymous Symbol]
    task_scheduler.o(.text.StopMotorImmdly) refers to lks32mc08x_mcpwm.o(.text.PWMOutputs) for PWMOutputs
    task_scheduler.o(.ARM.exidx.text.StopMotorImmdly) refers to task_scheduler.o(.text.StopMotorImmdly) for [Anonymous Symbol]
    task_scheduler.o(.ARM.exidx.text.Curr_rc_fir) refers to task_scheduler.o(.text.Curr_rc_fir) for [Anonymous Symbol]
    interrupt.o(.text.ADC0_IRQHandler) refers to foc_drive.o(.text.FOC_Model) for FOC_Model
    interrupt.o(.text.ADC0_IRQHandler) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    interrupt.o(.ARM.exidx.text.ADC0_IRQHandler) refers to interrupt.o(.text.ADC0_IRQHandler) for [Anonymous Symbol]
    interrupt.o(.text.PendSV_Handler) refers to task_scheduler.o(.text.Sys_State_Machine) for Sys_State_Machine
    interrupt.o(.text.PendSV_Handler) refers to key.o(.text.Key_in) for Key_in
    interrupt.o(.text.PendSV_Handler) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    interrupt.o(.ARM.exidx.text.PendSV_Handler) refers to interrupt.o(.text.PendSV_Handler) for [Anonymous Symbol]
    key.o(.text.Key_in) refers to lks32mc08x_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    key.o(.ARM.exidx.text.Key_in) refers to key.o(.text.Key_in) for [Anonymous Symbol]
    smo.o(.ARM.exidx.text.SMO_init) refers to smo.o(.text.SMO_init) for [Anonymous Symbol]
    smo.o(.text.SMO_clear) refers to rt_memclr.o(.text) for __aeabi_memclr4
    smo.o(.ARM.exidx.text.SMO_clear) refers to smo.o(.text.SMO_clear) for [Anonymous Symbol]
    smo.o(.text.SMO_CalcElAngle) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) for lks08x_dsp_arctan
    smo.o(.ARM.exidx.text.SMO_CalcElAngle) refers to smo.o(.text.SMO_CalcElAngle) for [Anonymous Symbol]
    foc_drive.o(.text.FOC_InitstruParama) refers to smo.o(.text.SMO_init) for SMO_init
    foc_drive.o(.ARM.exidx.text.FOC_InitstruParama) refers to foc_drive.o(.text.FOC_InitstruParama) for [Anonymous Symbol]
    foc_drive.o(.ARM.exidx.text.get_adc_curr) refers to foc_drive.o(.text.get_adc_curr) for [Anonymous Symbol]
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Clarke) for Clarke
    foc_drive.o(.text.FOC_Model) refers to smo.o(.text.SMO_CalcElAngle) for SMO_CalcElAngle
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Trig_Functions) for Trig_Functions
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Park) for Park
    foc_drive.o(.text.FOC_Model) refers to pid_regulators.o(.text.HL_PI_AntiDump) for HL_PI_AntiDump
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.RevPark_Circle_Limitation) for RevPark_Circle_Limitation
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Rev_Park) for Rev_Park
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.SVPWM) for SVPWM
    foc_drive.o(.text.FOC_Model) refers to hardware_init.o(.text.MCPWM0_RegUpdate) for MCPWM0_RegUpdate
    foc_drive.o(.ARM.exidx.text.FOC_Model) refers to foc_drive.o(.text.FOC_Model) for [Anonymous Symbol]
    foc_drive.o(.text.MCL_Init) refers to smo.o(.text.SMO_clear) for SMO_clear
    foc_drive.o(.ARM.exidx.text.MCL_Init) refers to foc_drive.o(.text.MCL_Init) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.Clarke) refers to clarke_park.o(.text.Clarke) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.Park) refers to clarke_park.o(.text.Park) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.Rev_Park) refers to clarke_park.o(.text.Rev_Park) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.SVPWM) refers to clarke_park.o(.text.SVPWM) for [Anonymous Symbol]
    clarke_park.o(.text.Trig_Functions) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) for lks08x_dsp_sin_cos
    clarke_park.o(.ARM.exidx.text.Trig_Functions) refers to clarke_park.o(.text.Trig_Functions) for [Anonymous Symbol]
    clarke_park.o(.text.RevPark_Circle_Limitation) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) for lks08x_dsp_sqrt
    clarke_park.o(.ARM.exidx.text.RevPark_Circle_Limitation) refers to clarke_park.o(.text.RevPark_Circle_Limitation) for [Anonymous Symbol]
    pid_regulators.o(.text.HL_PI_AntiDump) refers to llsshr.o(.text) for __aeabi_lasr
    pid_regulators.o(.text.HL_PI_AntiDump) refers to llshl.o(.text) for __aeabi_llsl
    pid_regulators.o(.ARM.exidx.text.HL_PI_AntiDump) refers to pid_regulators.o(.text.HL_PI_AntiDump) for [Anonymous Symbol]
    lks32mc08x_adc.o(.text.ADC_Init) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_adc.o(.text.ADC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_Init) refers to lks32mc08x_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    lks32mc08x_adc.o(.text.ADC_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_StructInit) refers to lks32mc08x_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_ClearIRQFlag) refers to lks32mc08x_adc.o(.text.ADC_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetIRQFlag) refers to lks32mc08x_adc.o(.text.ADC_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to lks32mc08x_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to lks32mc08x_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_SoftTrgEN) refers to lks32mc08x_adc.o(.text.ADC_SoftTrgEN) for [Anonymous Symbol]
    lks32mc08x_can.o(.text.CAN_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Init) refers to lks32mc08x_can.o(.text.CAN_Init) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_StructInit) refers to lks32mc08x_can.o(.text.CAN_StructInit) for [Anonymous Symbol]
    lks32mc08x_can.o(.text.CAN_Sleep) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Sleep) refers to lks32mc08x_can.o(.text.CAN_Sleep) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Manual_Awake) refers to lks32mc08x_can.o(.text.CAN_Manual_Awake) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.SFF_ID_Filter) refers to lks32mc08x_can.o(.text.SFF_ID_Filter) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.EFF_ID_Filter) refers to lks32mc08x_can.o(.text.EFF_ID_Filter) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.ID1_Filter_Dual) refers to lks32mc08x_can.o(.text.ID1_Filter_Dual) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.ID2_Filter_Dual) refers to lks32mc08x_can.o(.text.ID2_Filter_Dual) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.My_CAN_Send_Msg) refers to lks32mc08x_can.o(.text.My_CAN_Send_Msg) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Receive_Msg) refers to lks32mc08x_can.o(.text.CAN_Receive_Msg) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadState) refers to lks32mc08x_can.o(.text.CAN_ReadState) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadALC) refers to lks32mc08x_can.o(.text.CAN_ReadALC) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadRXERRCNT) refers to lks32mc08x_can.o(.text.CAN_ReadRXERRCNT) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadTXERRCNT) refers to lks32mc08x_can.o(.text.CAN_ReadTXERRCNT) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReceFramInfor) refers to lks32mc08x_can.o(.text.CAN_ReceFramInfor) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadErrorCode) refers to lks32mc08x_can.o(.text.CAN_ReadErrorCode) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_GetIRQFlag) refers to lks32mc08x_can.o(.text.CAN_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.text.CMP_Init) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_Init) refers to lks32mc08x_cmp.o(.text.CMP_Init) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.text.CMP_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_StructInit) refers to lks32mc08x_cmp.o(.text.CMP_StructInit) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_GetIRQFlag) refers to lks32mc08x_cmp.o(.text.CMP_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_ClearIRQFlag) refers to lks32mc08x_cmp.o(.text.CMP_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_StructInit) refers to lks32mc08x_dac.o(.text.DAC_StructInit) for [Anonymous Symbol]
    lks32mc08x_dac.o(.text.DAC_Init) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_dac.o(.text.DAC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_Init) refers to lks32mc08x_dac.o(.text.DAC_Init) for [Anonymous Symbol]
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputValue) refers to lks32mc08x_dac.o(.text.DAC_OutputValue) for [Anonymous Symbol]
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputVoltage) refers to lks32mc08x_dac.o(.text.DAC_OutputVoltage) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_StructInit) refers to lks32mc08x_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_Init) refers to lks32mc08x_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_CHx_EN) refers to lks32mc08x_dma.o(.text.DMA_CHx_EN) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_GetIRQFlag) refers to lks32mc08x_dma.o(.text.DMA_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_ClearIRQFlag) refers to lks32mc08x_dma.o(.text.DMA_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin_cos) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sin) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_cos) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_cos) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_cos) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_cos) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_rms) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_rms) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_rms) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_rms) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_arctan) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_div) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_div) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_div) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_div) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_mod) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_mod) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_mod) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_mod) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sqrt) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) for [Anonymous Symbol]
    lks32mc08x_exti.o(.ARM.exidx.text.EXTI_Trigger_Config) refers to lks32mc08x_exti.o(.text.EXTI_Trigger_Config) for [Anonymous Symbol]
    lks32mc08x_exti.o(.ARM.exidx.text.EXTI_GetIRQFlag) refers to lks32mc08x_exti.o(.text.EXTI_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_exti.o(.ARM.exidx.text.EXTI_ClearIRQFlag) refers to lks32mc08x_exti.o(.text.EXTI_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_flash.o(.text.EraseSector) refers to lks32mc08x_flash.o(.bss.erase_flag) for erase_flag
    lks32mc08x_flash.o(.ARM.exidx.text.EraseSector) refers to lks32mc08x_flash.o(.text.EraseSector) for [Anonymous Symbol]
    lks32mc08x_flash.o(.text.ProgramPage) refers to lks32mc08x_flash.o(.bss.progm_flag) for progm_flag
    lks32mc08x_flash.o(.ARM.exidx.text.ProgramPage) refers to lks32mc08x_flash.o(.text.ProgramPage) for [Anonymous Symbol]
    lks32mc08x_flash.o(.text.Read_Flash) refers to lks32mc08x_nvr.o(i.Read_NVR) for Read_NVR
    lks32mc08x_flash.o(.ARM.exidx.text.Read_Flash) refers to lks32mc08x_flash.o(.text.Read_Flash) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Init) refers to lks32mc08x_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to lks32mc08x_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to lks32mc08x_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to lks32mc08x_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to lks32mc08x_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to lks32mc08x_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to lks32mc08x_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to lks32mc08x_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to lks32mc08x_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Write) refers to lks32mc08x_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_LockRegister) refers to lks32mc08x_gpio.o(.text.GPIO_LockRegister) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_UnlockRegister) refers to lks32mc08x_gpio.o(.text.GPIO_UnlockRegister) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to lks32mc08x_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    lks32mc08x_hall.o(.text.HALL_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_Init) refers to lks32mc08x_hall.o(.text.HALL_Init) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_StructInit) refers to lks32mc08x_hall.o(.text.HALL_StructInit) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetFilterValue) refers to lks32mc08x_hall.o(.text.HALL_GetFilterValue) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCaptureValue) refers to lks32mc08x_hall.o(.text.HALL_GetCaptureValue) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_WIDCount) refers to lks32mc08x_hall.o(.text.HALL_WIDCount) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCount) refers to lks32mc08x_hall.o(.text.HALL_GetCount) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetIRQFlag) refers to lks32mc08x_hall.o(.text.HALL_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_ClearIRQFlag) refers to lks32mc08x_hall.o(.text.HALL_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.I2C_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_i2c.o(.text.I2C_Init) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_i2c.o(.text.I2C_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    lks32mc08x_i2c.o(.text.I2C_Init) refers to lks32mc08x_dma.o(.text.DMA_Init) for DMA_Init
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_Init) refers to lks32mc08x_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_init) refers to lks32mc08x_dma.o(.text.DMA_Init) for DMA_Init
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_init) refers to lks32mc08x_i2c.o(.text.i2c_dma_init) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to lks32mc08x_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_SendData) refers to lks32mc08x_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_ReadData) refers to lks32mc08x_i2c.o(.text.I2C_ReadData) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_state_over) refers to lks32mc08x_i2c.o(.bss.i2c_dma_state) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_state_over) refers to lks32mc08x_i2c.o(.text.i2c_dma_state_over) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_tx) refers to lks32mc08x_i2c.o(.bss.i2c_dma_state) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_tx) refers to lks32mc08x_i2c.o(.text.i2c_dma_tx) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_rx) refers to lks32mc08x_i2c.o(.bss.i2c_dma_state) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_rx) refers to lks32mc08x_i2c.o(.text.i2c_dma_rx) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Init) refers to lks32mc08x_iwdg.o(.text.IWDG_Init) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_StrutInit) refers to lks32mc08x_iwdg.o(.text.IWDG_StrutInit) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_DISABLE) refers to lks32mc08x_iwdg.o(.text.IWDG_DISABLE) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_ENABLE) refers to lks32mc08x_iwdg.o(.text.IWDG_ENABLE) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Feed) refers to lks32mc08x_iwdg.o(.text.IWDG_Feed) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.ARM.exidx.text.PWMOutputs) refers to lks32mc08x_mcpwm.o(.text.PWMOutputs) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_StructInit) refers to lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.text.MCPWM_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_Init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_Init) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_GetIRQFlag) refers to lks32mc08x_mcpwm.o(.text.MCPWM_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_ClearIRQFlag) refers to lks32mc08x_mcpwm.o(.text.MCPWM_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_opa.o(.ARM.exidx.text.OPA_Init) refers to lks32mc08x_opa.o(.text.OPA_Init) for [Anonymous Symbol]
    lks32mc08x_opa.o(.ARM.exidx.text.OPA_StructInit) refers to lks32mc08x_opa.o(.text.OPA_StructInit) for [Anonymous Symbol]
    lks32mc08x_opa.o(.ARM.exidx.text.OPA_OUT) refers to lks32mc08x_opa.o(.text.OPA_OUT) for [Anonymous Symbol]
    lks32mc08x_spi.o(.text.SPI_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_Init) refers to lks32mc08x_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    lks32mc08x_spi.o(.text.SPI_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_StructInit) refers to lks32mc08x_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_SendData) refers to lks32mc08x_spi.o(.text.SPI_SendData) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_ReadData) refers to lks32mc08x_spi.o(.text.SPI_ReadData) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_GetIRQFlag) refers to lks32mc08x_spi.o(.text.SPI_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_ClearIRQFlag) refers to lks32mc08x_spi.o(.text.SPI_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_Init) refers to lks32mc08x_sys.o(.text.SYS_Init) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_StructInit) refers to lks32mc08x_sys.o(.text.SYS_StructInit) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_ClearRst) refers to lks32mc08x_sys.o(.text.SYS_ClearRst) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_GetRstSource) refers to lks32mc08x_sys.o(.text.SYS_GetRstSource) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_FallSleep) refers to lks32mc08x_sys.o(.text.SYS_FallSleep) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_SetWakeInterval) refers to lks32mc08x_sys.o(.text.SYS_SetWakeInterval) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SetWakeIO) refers to lks32mc08x_sys.o(.text.SetWakeIO) for [Anonymous Symbol]
    lks32mc08x_sys.o(.text.Switch2PLL) refers to lks32mc08x_sys.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.Switch2PLL) refers to lks32mc08x_sys.o(.text.Switch2PLL) for [Anonymous Symbol]
    lks32mc08x_sys.o(.text.Switch2HRC) refers to lks32mc08x_sys.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.Switch2HRC) refers to lks32mc08x_sys.o(.text.Switch2HRC) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_WatchDogCmd) refers to lks32mc08x_sys.o(.text.SYS_WatchDogCmd) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_EnablePORFilter) refers to lks32mc08x_sys.o(.text.SYS_EnablePORFilter) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_FeedDog) refers to lks32mc08x_sys.o(.text.SYS_FeedDog) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_ModuleClockCmd) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_AnalogModuleClockCmd) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_SoftResetModule) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.DSP_Init) refers to lks32mc08x_sys.o(.text.DSP_Init) for [Anonymous Symbol]
    lks32mc08x_tim.o(.text.TIM_TimerInit) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerInit) refers to lks32mc08x_tim.o(.text.TIM_TimerInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerStrutInit) refers to lks32mc08x_tim.o(.text.TIM_TimerStrutInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerCmd) refers to lks32mc08x_tim.o(.text.TIM_TimerCmd) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_GetIRQFlag) refers to lks32mc08x_tim.o(.text.TIM_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ClearIRQFlag) refers to lks32mc08x_tim.o(.text.TIM_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCount) refers to lks32mc08x_tim.o(.text.TIM_Timer_GetCount) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT0) refers to lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT0) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT1) refers to lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT1) for [Anonymous Symbol]
    lks32mc08x_tim.o(.text.TIM_ECDInit) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDInit) refers to lks32mc08x_tim.o(.text.TIM_ECDInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDStructInit) refers to lks32mc08x_tim.o(.text.TIM_ECDStructInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDCmd) refers to lks32mc08x_tim.o(.text.TIM_ECDCmd) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECD_GetCount) refers to lks32mc08x_tim.o(.text.TIM_ECD_GetCount) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.ECD_GetIRQFlag) refers to lks32mc08x_tim.o(.text.ECD_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.ECD_ClearIRQFlag) refers to lks32mc08x_tim.o(.text.ECD_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_uart.o(.text.UART_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(.text.UART_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    lks32mc08x_uart.o(.ARM.exidx.text.UART_Init) refers to lks32mc08x_uart.o(.text.UART_Init) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_StructInit) refers to lks32mc08x_uart.o(.text.UART_StructInit) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData) refers to lks32mc08x_uart.o(.text.UART_SendData) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_ReadData) refers to lks32mc08x_uart.o(.text.UART_ReadData) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_SendAddr_485) refers to lks32mc08x_uart.o(.text.UART_SendAddr_485) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData_485) refers to lks32mc08x_uart.o(.text.UART_SendData_485) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_GetIRQFlag) refers to lks32mc08x_uart.o(.text.UART_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_ClearIRQFlag) refers to lks32mc08x_uart.o(.text.UART_ClearIRQFlag) for [Anonymous Symbol]
    startup_lks32mc08x.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(.text) for Reset_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(.text.PendSV_Handler) for PendSV_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(.text.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_lks32mc08x.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(.text) refers to hardware_init.o(.text.SystemInit) for SystemInit
    startup_lks32mc08x.o(.text) refers to __main.o(!!!main) for __main
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(HEAP) for Heap_Mem
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_lks32mc08x.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing hardware_init.o(.text), (0 bytes).
    Removing hardware_init.o(.ARM.exidx.text.Hardware_init), (8 bytes).
    Removing hardware_init.o(.text.ADC_init), (72 bytes).
    Removing hardware_init.o(.ARM.exidx.text.ADC_init), (8 bytes).
    Removing hardware_init.o(.text.MCPWM_init), (120 bytes).
    Removing hardware_init.o(.ARM.exidx.text.MCPWM_init), (8 bytes).
    Removing hardware_init.o(.ARM.exidx.text.GPIO_init), (8 bytes).
    Removing hardware_init.o(.text.PGA_init), (28 bytes).
    Removing hardware_init.o(.ARM.exidx.text.PGA_init), (8 bytes).
    Removing hardware_init.o(.text.SoftDelay), (30 bytes).
    Removing hardware_init.o(.ARM.exidx.text.SoftDelay), (8 bytes).
    Removing hardware_init.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing hardware_init.o(.text.ADC_NormalModeCFG), (24 bytes).
    Removing hardware_init.o(.ARM.exidx.text.ADC_NormalModeCFG), (8 bytes).
    Removing hardware_init.o(.ARM.exidx.text.MCPWM0_RegUpdate), (8 bytes).
    Removing sys_init.o(.text), (0 bytes).
    Removing sys_init.o(.ARM.exidx.text.sys_init), (8 bytes).
    Removing sys_init.o(.text.currentOffsetRead), (112 bytes).
    Removing sys_init.o(.ARM.exidx.text.currentOffsetRead), (8 bytes).
    Removing task_scheduler.o(.text), (0 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.Sys_State_Machine), (8 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.Sys_State_Run), (8 bytes).
    Removing task_scheduler.o(.text.StopMotorImmdly), (26 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.StopMotorImmdly), (8 bytes).
    Removing task_scheduler.o(.text.Curr_rc_fir), (58 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.Curr_rc_fir), (8 bytes).
    Removing interrupt.o(.text), (0 bytes).
    Removing interrupt.o(.ARM.exidx.text.ADC0_IRQHandler), (8 bytes).
    Removing interrupt.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing global_variable.o(.text), (0 bytes).
    Removing key.o(.text), (0 bytes).
    Removing key.o(.ARM.exidx.text.Key_in), (8 bytes).
    Removing smo.o(.text), (0 bytes).
    Removing smo.o(.ARM.exidx.text.SMO_init), (8 bytes).
    Removing smo.o(.ARM.exidx.text.SMO_clear), (8 bytes).
    Removing smo.o(.ARM.exidx.text.SMO_CalcElAngle), (8 bytes).
    Removing foc_drive.o(.text), (0 bytes).
    Removing foc_drive.o(.ARM.exidx.text.FOC_InitstruParama), (8 bytes).
    Removing foc_drive.o(.text.get_adc_curr), (28 bytes).
    Removing foc_drive.o(.ARM.exidx.text.get_adc_curr), (8 bytes).
    Removing foc_drive.o(.ARM.exidx.text.FOC_Model), (8 bytes).
    Removing foc_drive.o(.ARM.exidx.text.MCL_Init), (8 bytes).
    Removing clarke_park.o(.text), (0 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Clarke), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Park), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Rev_Park), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.SVPWM), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Trig_Functions), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.RevPark_Circle_Limitation), (8 bytes).
    Removing pid_regulators.o(.text), (0 bytes).
    Removing pid_regulators.o(.ARM.exidx.text.HL_PI_AntiDump), (8 bytes).
    Removing lks32mc08x_adc.o(.text), (0 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_ClearIRQFlag), (6 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_GetIRQFlag), (22 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_ChannelConfig), (28 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_GetConversionValue), (192 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_SoftTrgEN), (16 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_SoftTrgEN), (8 bytes).
    Removing lks32mc08x_can.o(.text), (0 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Init), (68 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Init), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_StructInit), (24 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_StructInit), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Sleep), (88 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Sleep), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Manual_Awake), (24 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Manual_Awake), (8 bytes).
    Removing lks32mc08x_can.o(.text.SFF_ID_Filter), (88 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.SFF_ID_Filter), (8 bytes).
    Removing lks32mc08x_can.o(.text.EFF_ID_Filter), (96 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.EFF_ID_Filter), (8 bytes).
    Removing lks32mc08x_can.o(.text.ID1_Filter_Dual), (148 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.ID1_Filter_Dual), (8 bytes).
    Removing lks32mc08x_can.o(.text.ID2_Filter_Dual), (120 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.ID2_Filter_Dual), (8 bytes).
    Removing lks32mc08x_can.o(.text.My_CAN_Send_Msg), (216 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.My_CAN_Send_Msg), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Receive_Msg), (176 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Receive_Msg), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadState), (8 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadState), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadALC), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadALC), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadRXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadRXERRCNT), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadTXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadTXERRCNT), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReceFramInfor), (16 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReceFramInfor), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadErrorCode), (36 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadErrorCode), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_GetIRQFlag), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_cmp.o(.text), (0 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_Init), (268 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_Init), (8 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_StructInit), (10 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_StructInit), (8 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_GetIRQFlag), (40 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_dac.o(.text), (0 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_StructInit), (8 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_StructInit), (8 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_Init), (140 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_Init), (8 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_OutputValue), (44 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputValue), (8 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_OutputVoltage), (112 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputVoltage), (8 bytes).
    Removing lks32mc08x_dma.o(.text), (0 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_StructInit), (14 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_Init), (84 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_CHx_EN), (20 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_CHx_EN), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_GetIRQFlag), (52 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_dsp.o(.text), (0 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin_cos), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_sin), (52 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_cos), (52 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_cos), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_rms), (104 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_rms), (8 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_arctan), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_div), (220 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_div), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_mod), (92 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_mod), (8 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sqrt), (8 bytes).
    Removing lks32mc08x_exti.o(.text), (0 bytes).
    Removing lks32mc08x_exti.o(.text.EXTI_Trigger_Config), (56 bytes).
    Removing lks32mc08x_exti.o(.ARM.exidx.text.EXTI_Trigger_Config), (8 bytes).
    Removing lks32mc08x_exti.o(.text.EXTI_GetIRQFlag), (36 bytes).
    Removing lks32mc08x_exti.o(.ARM.exidx.text.EXTI_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_exti.o(.text.EXTI_ClearIRQFlag), (28 bytes).
    Removing lks32mc08x_exti.o(.ARM.exidx.text.EXTI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_flash.o(.text), (0 bytes).
    Removing lks32mc08x_flash.o(.text.EraseSector), (116 bytes).
    Removing lks32mc08x_flash.o(.ARM.exidx.text.EraseSector), (8 bytes).
    Removing lks32mc08x_flash.o(.text.ProgramPage), (248 bytes).
    Removing lks32mc08x_flash.o(.ARM.exidx.text.ProgramPage), (8 bytes).
    Removing lks32mc08x_flash.o(.text.Read_Flash), (48 bytes).
    Removing lks32mc08x_flash.o(.ARM.exidx.text.Read_Flash), (8 bytes).
    Removing lks32mc08x_flash.o(.bss.erase_flag), (4 bytes).
    Removing lks32mc08x_flash.o(.bss.progm_flag), (4 bytes).
    Removing lks32mc08x_gpio.o(.text), (0 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ReadInputData), (4 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ReadOutputData), (4 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_SetBits), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_WriteBit), (20 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ResetBits), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_Write), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_LockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_LockRegister), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_UnlockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_UnlockRegister), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing lks32mc08x_hall.o(.text), (0 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_Init), (68 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_Init), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_StructInit), (20 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_StructInit), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetFilterValue), (16 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetFilterValue), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetCaptureValue), (16 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCaptureValue), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_WIDCount), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_WIDCount), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetCount), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCount), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetIRQFlag), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_i2c.o(.text), (0 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_Init), (184 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_init), (56 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_init), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_StructInit), (20 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_SendData), (4 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_ReadData), (6 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_ReadData), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_state_over), (12 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_state_over), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_tx), (144 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_tx), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_rx), (140 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_rx), (8 bytes).
    Removing lks32mc08x_i2c.o(.bss.i2c_dma_state), (1 bytes).
    Removing lks32mc08x_iwdg.o(.text), (0 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_Init), (72 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Init), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_StrutInit), (10 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_StrutInit), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_DISABLE), (16 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_DISABLE), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_ENABLE), (16 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_ENABLE), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_Feed), (32 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Feed), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.text), (0 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.PWMOutputs), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_StructInit), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_Init), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.text.MCPWM_GetIRQFlag), (36 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.text.MCPWM_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_opa.o(.text), (0 bytes).
    Removing lks32mc08x_opa.o(.text.OPA_Init), (144 bytes).
    Removing lks32mc08x_opa.o(.ARM.exidx.text.OPA_Init), (8 bytes).
    Removing lks32mc08x_opa.o(.text.OPA_StructInit), (10 bytes).
    Removing lks32mc08x_opa.o(.ARM.exidx.text.OPA_StructInit), (8 bytes).
    Removing lks32mc08x_opa.o(.text.OPA_OUT), (44 bytes).
    Removing lks32mc08x_opa.o(.ARM.exidx.text.OPA_OUT), (8 bytes).
    Removing lks32mc08x_spi.o(.text), (0 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_Init), (100 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_StructInit), (20 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_SendData), (4 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_SendData), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_ReadData), (6 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_ReadData), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_GetIRQFlag), (10 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_sys.o(.text), (0 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_Init), (88 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_Init), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_StructInit), (22 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_StructInit), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_ClearRst), (16 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_ClearRst), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_GetRstSource), (12 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_GetRstSource), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_FallSleep), (36 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_FallSleep), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_SetWakeInterval), (16 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_SetWakeInterval), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SetWakeIO), (48 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SetWakeIO), (8 bytes).
    Removing lks32mc08x_sys.o(.text.Switch2PLL), (80 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.Switch2PLL), (8 bytes).
    Removing lks32mc08x_sys.o(.text.Switch2HRC), (56 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.Switch2HRC), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_WatchDogCmd), (36 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_WatchDogCmd), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_EnablePORFilter), (16 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_EnablePORFilter), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_FeedDog), (48 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_FeedDog), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_ModuleClockCmd), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_AnalogModuleClockCmd), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_SoftResetModule), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.DSP_Init), (8 bytes).
    Removing lks32mc08x_sys.o(.bss..L_MergedGlobals), (12 bytes).
    Removing lks32mc08x_tim.o(.text), (0 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_TimerInit), (252 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_TimerStrutInit), (34 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerStrutInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_TimerCmd), (168 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerCmd), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_GetIRQFlag), (112 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ClearIRQFlag), (108 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_Timer_GetCount), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCount), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT0), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT0), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT1), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT1), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECDInit), (184 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECDStructInit), (20 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDStructInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECDCmd), (76 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDCmd), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECD_GetCount), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECD_GetCount), (8 bytes).
    Removing lks32mc08x_tim.o(.text.ECD_GetIRQFlag), (56 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.ECD_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_tim.o(.text.ECD_ClearIRQFlag), (40 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.ECD_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_uart.o(.text), (0 bytes).
    Removing lks32mc08x_uart.o(.text.UART_Init), (188 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_StructInit), (18 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_StructInit), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_SendData), (4 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_ReadData), (4 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_ReadData), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_SendAddr_485), (42 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_SendAddr_485), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_SendData_485), (42 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData_485), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_GetIRQFlag), (14 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_ClearIRQFlag), (4 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_nvr.o(i.Read_NVR), (52 bytes).

335 unused section(s) (total 8503 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_NVR.c 0x00000000   Number         0  lks32mc08x_nvr.o ABSOLUTE
    clarke_park.c                            0x00000000   Number         0  clarke_park.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    foc_drive.c                              0x00000000   Number         0  foc_drive.o ABSOLUTE
    global_variable.c                        0x00000000   Number         0  global_variable.o ABSOLUTE
    hardware_init.c                          0x00000000   Number         0  hardware_init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    key.c                                    0x00000000   Number         0  key.o ABSOLUTE
    lks32MC08x_flash.c                       0x00000000   Number         0  lks32mc08x_flash.o ABSOLUTE
    lks32mc08x_adc.c                         0x00000000   Number         0  lks32mc08x_adc.o ABSOLUTE
    lks32mc08x_can.c                         0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    lks32mc08x_cmp.c                         0x00000000   Number         0  lks32mc08x_cmp.o ABSOLUTE
    lks32mc08x_dac.c                         0x00000000   Number         0  lks32mc08x_dac.o ABSOLUTE
    lks32mc08x_dma.c                         0x00000000   Number         0  lks32mc08x_dma.o ABSOLUTE
    lks32mc08x_dsp.c                         0x00000000   Number         0  lks32mc08x_dsp.o ABSOLUTE
    lks32mc08x_exti.c                        0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    lks32mc08x_gpio.c                        0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    lks32mc08x_hall.c                        0x00000000   Number         0  lks32mc08x_hall.o ABSOLUTE
    lks32mc08x_i2c.c                         0x00000000   Number         0  lks32mc08x_i2c.o ABSOLUTE
    lks32mc08x_iwdg.c                        0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    lks32mc08x_mcpwm.c                       0x00000000   Number         0  lks32mc08x_mcpwm.o ABSOLUTE
    lks32mc08x_opa.c                         0x00000000   Number         0  lks32mc08x_opa.o ABSOLUTE
    lks32mc08x_spi.c                         0x00000000   Number         0  lks32mc08x_spi.o ABSOLUTE
    lks32mc08x_sys.c                         0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    lks32mc08x_tim.c                         0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    lks32mc08x_uart.c                        0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    periph_driver/Source/startup_lks32mc08x.s 0x00000000   Number         0  startup_lks32mc08x.o ABSOLUTE
    pid_regulators.c                         0x00000000   Number         0  pid_regulators.o ABSOLUTE
    smo.c                                    0x00000000   Number         0  smo.o ABSOLUTE
    sys_init.c                               0x00000000   Number         0  sys_init.o ABSOLUTE
    task_scheduler.c                         0x00000000   Number         0  task_scheduler.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_lks32mc08x.o(RESET)
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x00000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000120   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000122   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000124   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000126   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000128   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000128   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000128   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000012e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000012e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000132   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000132   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000013a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000013c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000013c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000140   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000148   Section       68  startup_lks32mc08x.o(.text)
    .text                                    0x0000018c   Section        0  llshl.o(.text)
    .text                                    0x000001ac   Section        0  llsshr.o(.text)
    .text                                    0x000001d2   Section        0  rt_memclr.o(.text)
    .text                                    0x00000212   Section        0  heapauxi.o(.text)
    .text                                    0x00000218   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000256   Section        0  exit.o(.text)
    .text                                    0x00000268   Section        8  libspace.o(.text)
    .text                                    0x00000270   Section        0  sys_exit.o(.text)
    .text                                    0x0000027c   Section        2  use_no_semi.o(.text)
    .text                                    0x0000027e   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000280   Section        0  interrupt.o(.text.ADC0_IRQHandler)
    __arm_cp.0_0                             0x000002c0   Number         4  interrupt.o(.text.ADC0_IRQHandler)
    __arm_cp.0_1                             0x000002c4   Number         4  interrupt.o(.text.ADC0_IRQHandler)
    __arm_cp.0_2                             0x000002c8   Number         4  interrupt.o(.text.ADC0_IRQHandler)
    __arm_cp.0_3                             0x000002cc   Number         4  interrupt.o(.text.ADC0_IRQHandler)
    [Anonymous Symbol]                       0x000002d0   Section        0  lks32mc08x_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x000003c4   Section        0  lks32mc08x_adc.o(.text.ADC_StructInit)
    [Anonymous Symbol]                       0x000003d4   Section        0  clarke_park.o(.text.Clarke)
    __arm_cp.0_0                             0x000003e8   Number         4  clarke_park.o(.text.Clarke)
    __arm_cp.0_1                             0x000003ec   Number         4  clarke_park.o(.text.Clarke)
    [Anonymous Symbol]                       0x000003f0   Section        0  lks32mc08x_sys.o(.text.DSP_Init)
    __arm_cp.15_0                            0x00000400   Number         4  lks32mc08x_sys.o(.text.DSP_Init)
    __arm_cp.15_1                            0x00000404   Number         4  lks32mc08x_sys.o(.text.DSP_Init)
    [Anonymous Symbol]                       0x00000408   Section        0  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_0                             0x00000458   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_1                             0x0000045c   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_2                             0x00000460   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_3                             0x00000464   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_4                             0x00000468   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_5                             0x0000046c   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_6                             0x00000470   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_7                             0x00000474   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_8                             0x00000478   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    __arm_cp.0_9                             0x0000047c   Number         4  foc_drive.o(.text.FOC_InitstruParama)
    [Anonymous Symbol]                       0x00000480   Section        0  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_0                             0x00000514   Number         4  foc_drive.o(.text.FOC_Model)
    [Anonymous Symbol]                       0x00000518   Section        0  lks32mc08x_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x00000584   Section        0  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    __arm_cp.12_0                            0x00000684   Number         4  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    __arm_cp.12_1                            0x00000688   Number         4  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    __arm_cp.12_2                            0x0000068c   Number         4  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x00000690   Section        0  lks32mc08x_gpio.o(.text.GPIO_ReadInputDataBit)
    [Anonymous Symbol]                       0x0000069a   Section        0  lks32mc08x_gpio.o(.text.GPIO_StructInit)
    [Anonymous Symbol]                       0x000006a4   Section        0  hardware_init.o(.text.GPIO_init)
    __arm_cp.3_0                             0x00000724   Number         4  hardware_init.o(.text.GPIO_init)
    [Anonymous Symbol]                       0x00000728   Section        0  pid_regulators.o(.text.HL_PI_AntiDump)
    [Anonymous Symbol]                       0x000007dc   Section        0  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_0                             0x000008c8   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_1                             0x000008cc   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_2                             0x000008d0   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_3                             0x000008d4   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_4                             0x000008d8   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_5                             0x000008dc   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_6                             0x000008e0   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_7                             0x000008e4   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_8                             0x000008e8   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_9                             0x000008ec   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_10                            0x000008f0   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_11                            0x000008f4   Number         4  hardware_init.o(.text.Hardware_init)
    [Anonymous Symbol]                       0x000008f8   Section        0  key.o(.text.Key_in)
    __arm_cp.0_0                             0x00000920   Number         4  key.o(.text.Key_in)
    [Anonymous Symbol]                       0x00000924   Section        0  foc_drive.o(.text.MCL_Init)
    [Anonymous Symbol]                       0x00000940   Section        0  hardware_init.o(.text.MCPWM0_RegUpdate)
    __arm_cp.8_0                             0x00000958   Number         4  hardware_init.o(.text.MCPWM0_RegUpdate)
    [Anonymous Symbol]                       0x0000095c   Section        0  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    __arm_cp.2_0                             0x00000b68   Number         4  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    __arm_cp.2_2                             0x00000b6c   Number         4  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    [Anonymous Symbol]                       0x00000b70   Section        0  lks32mc08x_mcpwm.o(.text.MCPWM_StructInit)
    [Anonymous Symbol]                       0x00000b7c   Section        0  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_0                             0x00000ba0   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_1                             0x00000ba4   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_2                             0x00000ba8   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_3                             0x00000bac   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    [Anonymous Symbol]                       0x00000bb0   Section        0  clarke_park.o(.text.Park)
    [Anonymous Symbol]                       0x00000bd8   Section        0  interrupt.o(.text.PendSV_Handler)
    __arm_cp.1_0                             0x00000bec   Number         4  interrupt.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000bf0   Section        0  clarke_park.o(.text.RevPark_Circle_Limitation)
    __arm_cp.5_1                             0x00000c14   Number         4  clarke_park.o(.text.RevPark_Circle_Limitation)
    [Anonymous Symbol]                       0x00000c18   Section        0  clarke_park.o(.text.Rev_Park)
    [Anonymous Symbol]                       0x00000c3e   Section        0  smo.o(.text.SMO_CalcElAngle)
    [Anonymous Symbol]                       0x00000d0e   Section        0  smo.o(.text.SMO_clear)
    [Anonymous Symbol]                       0x00000d1c   Section        0  smo.o(.text.SMO_init)
    __arm_cp.0_0                             0x00000d34   Number         4  smo.o(.text.SMO_init)
    __arm_cp.0_1                             0x00000d38   Number         4  smo.o(.text.SMO_init)
    __arm_cp.0_2                             0x00000d3c   Number         4  smo.o(.text.SMO_init)
    __arm_cp.0_3                             0x00000d40   Number         4  smo.o(.text.SMO_init)
    [Anonymous Symbol]                       0x00000d44   Section        0  clarke_park.o(.text.SVPWM)
    __arm_cp.3_0                             0x00000dd0   Number         4  clarke_park.o(.text.SVPWM)
    __arm_cp.3_1                             0x00000dd4   Number         4  clarke_park.o(.text.SVPWM)
    [Anonymous Symbol]                       0x00000dd8   Section        0  lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd)
    [Anonymous Symbol]                       0x00000df4   Section        0  lks32mc08x_sys.o(.text.SYS_ModuleClockCmd)
    __arm_cp.12_0                            0x00000e10   Number         4  lks32mc08x_sys.o(.text.SYS_ModuleClockCmd)
    [Anonymous Symbol]                       0x00000e14   Section        0  lks32mc08x_sys.o(.text.SYS_SoftResetModule)
    __arm_cp.14_0                            0x00000e24   Number         4  lks32mc08x_sys.o(.text.SYS_SoftResetModule)
    [Anonymous Symbol]                       0x00000e28   Section        0  task_scheduler.o(.text.Sys_State_Machine)
    [Anonymous Symbol]                       0x00000ea0   Section        0  task_scheduler.o(.text.Sys_State_Run)
    __arm_cp.1_0                             0x00000f9c   Number         4  task_scheduler.o(.text.Sys_State_Run)
    __arm_cp.1_1                             0x00000fa0   Number         4  task_scheduler.o(.text.Sys_State_Run)
    __arm_cp.1_2                             0x00000fa4   Number         4  task_scheduler.o(.text.Sys_State_Run)
    [Anonymous Symbol]                       0x00000fa8   Section        0  hardware_init.o(.text.SystemInit)
    __arm_cp.6_0                             0x00000fdc   Number         4  hardware_init.o(.text.SystemInit)
    __arm_cp.6_1                             0x00000fe0   Number         4  hardware_init.o(.text.SystemInit)
    __arm_cp.6_2                             0x00000fe4   Number         4  hardware_init.o(.text.SystemInit)
    __arm_cp.6_3                             0x00000fe8   Number         4  hardware_init.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000fec   Section        0  clarke_park.o(.text.Trig_Functions)
    [Anonymous Symbol]                       0x00000ff4   Section        0  lks32mc08x_dsp.o(.text.lks08x_dsp_arctan)
    __arm_cp.4_0                             0x00001134   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_arctan)
    [Anonymous Symbol]                       0x00001138   Section        0  lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos)
    __arm_cp.0_0                             0x0000116c   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos)
    [Anonymous Symbol]                       0x00001170   Section        0  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    __arm_cp.7_0                             0x00001198   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    __arm_cp.7_1                             0x0000119c   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    [Anonymous Symbol]                       0x000011a0   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x000011b4   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x000011b8   Section        0  sys_init.o(.text.sys_init)
    __arm_cp.0_0                             0x0000121c   Number         4  sys_init.o(.text.sys_init)
    __arm_cp.0_1                             0x00001220   Number         4  sys_init.o(.text.sys_init)
    __arm_cp.0_2                             0x00001224   Number         4  sys_init.o(.text.sys_init)
    __arm_cp.0_3                             0x00001228   Number         4  sys_init.o(.text.sys_init)
    i.Read_Trim                              0x0000122c   Section        0  lks32mc08x_nvr.o(i.Read_Trim)
    .bss                                     0x20000000   Section       96  libspace.o(.bss)
    dsp_flg                                  0x20000060   Data           1  lks32mc08x_dsp.o(.bss.dsp_flg)
    [Anonymous Symbol]                       0x20000060   Section        0  lks32mc08x_dsp.o(.bss.dsp_flg)
    Heap_Mem                                 0x20000108   Data         512  startup_lks32mc08x.o(HEAP)
    HEAP                                     0x20000108   Section      512  startup_lks32mc08x.o(HEAP)
    Stack_Mem                                0x20000308   Data         768  startup_lks32mc08x.o(STACK)
    STACK                                    0x20000308   Section      768  startup_lks32mc08x.o(STACK)
    __initial_sp                             0x20000608   Data           0  startup_lks32mc08x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lks32mc08x.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_lks32mc08x.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_lks32mc08x.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x00000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000121   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000125   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000129   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000129   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000129   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000133   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000133   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000013b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000013d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000013d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000141   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x00000149   Thumb Code    14  startup_lks32mc08x.o(.text)
    NMI_Handler                              0x00000157   Thumb Code     2  startup_lks32mc08x.o(.text)
    HardFault_Handler                        0x00000159   Thumb Code     2  startup_lks32mc08x.o(.text)
    SVC_Handler                              0x0000015b   Thumb Code     2  startup_lks32mc08x.o(.text)
    SysTick_Handler                          0x0000015f   Thumb Code     2  startup_lks32mc08x.o(.text)
    CAN_IRQHandler                           0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    CMP_IRQHandler                           0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    DMA_IRQHandler                           0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    DSP_IRQHandler                           0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    ENCODER0_IRQHandler                      0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    ENCODER1_IRQHandler                      0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    GPIO_IRQHandler                          0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    HALL_IRQHandler                          0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    I2C0_IRQHandler                          0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    MCPWM_IRQHandler                         0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    PWRDN_IRQHandler                         0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    SIF_IRQHandler                           0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    SPI0_IRQHandler                          0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    UART0_IRQHandler                         0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    UART1_IRQHandler                         0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER0_IRQHandler                       0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER1_IRQHandler                       0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER2_IRQHandler                       0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER3_IRQHandler                       0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    WAKE_IRQHandler                          0x00000161   Thumb Code     0  startup_lks32mc08x.o(.text)
    __user_initial_stackheap                 0x00000165   Thumb Code     0  startup_lks32mc08x.o(.text)
    __aeabi_llsl                             0x0000018d   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x0000018d   Thumb Code     0  llshl.o(.text)
    __aeabi_lasr                             0x000001ad   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x000001ad   Thumb Code     0  llsshr.o(.text)
    _memset_w                                0x000001d3   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x000001ed   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x0000020b   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x0000020b   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0000020f   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x0000020f   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x0000020f   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x00000213   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000215   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000217   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x00000219   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000257   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x00000269   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000269   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000269   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000271   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0000027d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0000027d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000027f   Thumb Code     0  indicate_semi.o(.text)
    ADC0_IRQHandler                          0x00000281   Thumb Code    80  interrupt.o(.text.ADC0_IRQHandler)
    ADC_Init                                 0x000002d1   Thumb Code   244  lks32mc08x_adc.o(.text.ADC_Init)
    ADC_StructInit                           0x000003c5   Thumb Code    16  lks32mc08x_adc.o(.text.ADC_StructInit)
    Clarke                                   0x000003d5   Thumb Code    28  clarke_park.o(.text.Clarke)
    DSP_Init                                 0x000003f1   Thumb Code    24  lks32mc08x_sys.o(.text.DSP_Init)
    FOC_InitstruParama                       0x00000409   Thumb Code   120  foc_drive.o(.text.FOC_InitstruParama)
    FOC_Model                                0x00000481   Thumb Code   152  foc_drive.o(.text.FOC_Model)
    GPIO_Init                                0x00000519   Thumb Code   106  lks32mc08x_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x00000585   Thumb Code   268  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    GPIO_ReadInputDataBit                    0x00000691   Thumb Code    10  lks32mc08x_gpio.o(.text.GPIO_ReadInputDataBit)
    GPIO_StructInit                          0x0000069b   Thumb Code    10  lks32mc08x_gpio.o(.text.GPIO_StructInit)
    GPIO_init                                0x000006a5   Thumb Code   132  hardware_init.o(.text.GPIO_init)
    HL_PI_AntiDump                           0x00000729   Thumb Code   178  pid_regulators.o(.text.HL_PI_AntiDump)
    Hardware_init                            0x000007dd   Thumb Code   284  hardware_init.o(.text.Hardware_init)
    Key_in                                   0x000008f9   Thumb Code    44  key.o(.text.Key_in)
    MCL_Init                                 0x00000925   Thumb Code    28  foc_drive.o(.text.MCL_Init)
    MCPWM0_RegUpdate                         0x00000941   Thumb Code    28  hardware_init.o(.text.MCPWM0_RegUpdate)
    MCPWM_Init                               0x0000095d   Thumb Code   532  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    MCPWM_StructInit                         0x00000b71   Thumb Code    10  lks32mc08x_mcpwm.o(.text.MCPWM_StructInit)
    PWMOutputs                               0x00000b7d   Thumb Code    52  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    Park                                     0x00000bb1   Thumb Code    38  clarke_park.o(.text.Park)
    PendSV_Handler                           0x00000bd9   Thumb Code    24  interrupt.o(.text.PendSV_Handler)
    RevPark_Circle_Limitation                0x00000bf1   Thumb Code    40  clarke_park.o(.text.RevPark_Circle_Limitation)
    Rev_Park                                 0x00000c19   Thumb Code    38  clarke_park.o(.text.Rev_Park)
    SMO_CalcElAngle                          0x00000c3f   Thumb Code   208  smo.o(.text.SMO_CalcElAngle)
    SMO_clear                                0x00000d0f   Thumb Code    12  smo.o(.text.SMO_clear)
    SMO_init                                 0x00000d1d   Thumb Code    40  smo.o(.text.SMO_init)
    SVPWM                                    0x00000d45   Thumb Code   148  clarke_park.o(.text.SVPWM)
    SYS_AnalogModuleClockCmd                 0x00000dd9   Thumb Code    28  lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd)
    SYS_ModuleClockCmd                       0x00000df5   Thumb Code    32  lks32mc08x_sys.o(.text.SYS_ModuleClockCmd)
    SYS_SoftResetModule                      0x00000e15   Thumb Code    20  lks32mc08x_sys.o(.text.SYS_SoftResetModule)
    Sys_State_Machine                        0x00000e29   Thumb Code   120  task_scheduler.o(.text.Sys_State_Machine)
    Sys_State_Run                            0x00000ea1   Thumb Code   264  task_scheduler.o(.text.Sys_State_Run)
    SystemInit                               0x00000fa9   Thumb Code    68  hardware_init.o(.text.SystemInit)
    Trig_Functions                           0x00000fed   Thumb Code     8  clarke_park.o(.text.Trig_Functions)
    lks08x_dsp_arctan                        0x00000ff5   Thumb Code   324  lks32mc08x_dsp.o(.text.lks08x_dsp_arctan)
    lks08x_dsp_sin_cos                       0x00001139   Thumb Code    56  lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos)
    lks08x_dsp_sqrt                          0x00001171   Thumb Code    48  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    main                                     0x000011a1   Thumb Code    24  main.o(.text.main)
    sys_init                                 0x000011b9   Thumb Code   116  sys_init.o(.text.sys_init)
    Read_Trim                                0x0000122d   Thumb Code    50  lks32mc08x_nvr.o(i.Read_Trim)
    Region$$Table$$Base                      0x00001268   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001278   Number         0  anon$$obj.o(Region$$Table)
    __libspace_start                         0x20000000   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000060   Data           0  libspace.o(.bss)
    struFOC_CtrProc                          0x20000064   Data         164  global_variable.o(.bss.struFOC_CtrProc)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00001278, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001278, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          573    RESET               startup_lks32mc08x.o
    0x000000c0   0x000000c0   0x00000008   Code   RO          686  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO          861    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001c   Code   RO          863    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000120   0x00000120   0x00000002   Code   RO          724    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x00000122   0x00000122   0x00000000   Code   RO          738    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          740    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          743    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          745    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          747    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          750    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          752    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          754    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          756    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          758    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          760    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          762    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          764    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          766    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          768    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          770    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          774    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          776    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          778    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO          780    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000002   Code   RO          781    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x00000124   0x00000124   0x00000002   Code   RO          816    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000126   0x00000126   0x00000000   Code   RO          844    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO          846    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO          849    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO          852    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO          854    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO          857    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000002   Code   RO          858    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000128   0x00000128   0x00000000   Code   RO          688    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000128   0x00000128   0x00000000   Code   RO          694    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000128   0x00000128   0x00000006   Code   RO          706    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000012e   0x0000012e   0x00000000   Code   RO          696    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0000012e   0x0000012e   0x00000004   Code   RO          697    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          699    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x00000132   0x00000132   0x00000008   Code   RO          700    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0000013a   0x0000013a   0x00000002   Code   RO          729    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0000013c   0x0000013c   0x00000000   Code   RO          787    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0000013c   0x0000013c   0x00000004   Code   RO          788    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000140   0x00000140   0x00000006   Code   RO          789    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x00000146   0x00000146   0x00000002   PAD
    0x00000148   0x00000148   0x00000044   Code   RO          574    .text               startup_lks32mc08x.o
    0x0000018c   0x0000018c   0x00000020   Code   RO          670    .text               c_p.l(llshl.o)
    0x000001ac   0x000001ac   0x00000026   Code   RO          672    .text               c_p.l(llsshr.o)
    0x000001d2   0x000001d2   0x00000040   Code   RO          674    .text               c_p.l(rt_memclr.o)
    0x00000212   0x00000212   0x00000006   Code   RO          684    .text               c_p.l(heapauxi.o)
    0x00000218   0x00000218   0x0000003e   Code   RO          710    .text               c_p.l(sys_stackheap_outer.o)
    0x00000256   0x00000256   0x00000010   Code   RO          713    .text               c_p.l(exit.o)
    0x00000266   0x00000266   0x00000002   PAD
    0x00000268   0x00000268   0x00000008   Code   RO          725    .text               c_p.l(libspace.o)
    0x00000270   0x00000270   0x0000000c   Code   RO          782    .text               c_p.l(sys_exit.o)
    0x0000027c   0x0000027c   0x00000002   Code   RO          805    .text               c_p.l(use_no_semi.o)
    0x0000027e   0x0000027e   0x00000000   Code   RO          807    .text               c_p.l(indicate_semi.o)
    0x0000027e   0x0000027e   0x00000002   PAD
    0x00000280   0x00000280   0x00000050   Code   RO           64    .text.ADC0_IRQHandler  interrupt.o
    0x000002d0   0x000002d0   0x000000f4   Code   RO          149    .text.ADC_Init      lks32mc08x_adc.o
    0x000003c4   0x000003c4   0x00000010   Code   RO          151    .text.ADC_StructInit  lks32mc08x_adc.o
    0x000003d4   0x000003d4   0x0000001c   Code   RO          120    .text.Clarke        clarke_park.o
    0x000003f0   0x000003f0   0x00000018   Code   RO          501    .text.DSP_Init      lks32mc08x_sys.o
    0x00000408   0x00000408   0x00000078   Code   RO          104    .text.FOC_InitstruParama  foc_drive.o
    0x00000480   0x00000480   0x00000098   Code   RO          108    .text.FOC_Model     foc_drive.o
    0x00000518   0x00000518   0x0000006a   Code   RO          318    .text.GPIO_Init     lks32mc08x_gpio.o
    0x00000582   0x00000582   0x00000002   PAD
    0x00000584   0x00000584   0x0000010c   Code   RO          342    .text.GPIO_PinAFConfig  lks32mc08x_gpio.o
    0x00000690   0x00000690   0x0000000a   Code   RO          322    .text.GPIO_ReadInputDataBit  lks32mc08x_gpio.o
    0x0000069a   0x0000069a   0x0000000a   Code   RO          320    .text.GPIO_StructInit  lks32mc08x_gpio.o
    0x000006a4   0x000006a4   0x00000084   Code   RO           17    .text.GPIO_init     hardware_init.o
    0x00000728   0x00000728   0x000000b2   Code   RO          140    .text.HL_PI_AntiDump  pid_regulators.o
    0x000007da   0x000007da   0x00000002   PAD
    0x000007dc   0x000007dc   0x0000011c   Code   RO           11    .text.Hardware_init  hardware_init.o
    0x000008f8   0x000008f8   0x0000002c   Code   RO           81    .text.Key_in        key.o
    0x00000924   0x00000924   0x0000001c   Code   RO          110    .text.MCL_Init      foc_drive.o
    0x00000940   0x00000940   0x0000001c   Code   RO           27    .text.MCPWM0_RegUpdate  hardware_init.o
    0x0000095c   0x0000095c   0x00000214   Code   RO          423    .text.MCPWM_Init    lks32mc08x_mcpwm.o
    0x00000b70   0x00000b70   0x0000000a   Code   RO          421    .text.MCPWM_StructInit  lks32mc08x_mcpwm.o
    0x00000b7a   0x00000b7a   0x00000002   PAD
    0x00000b7c   0x00000b7c   0x00000034   Code   RO          419    .text.PWMOutputs    lks32mc08x_mcpwm.o
    0x00000bb0   0x00000bb0   0x00000026   Code   RO          122    .text.Park          clarke_park.o
    0x00000bd6   0x00000bd6   0x00000002   PAD
    0x00000bd8   0x00000bd8   0x00000018   Code   RO           66    .text.PendSV_Handler  interrupt.o
    0x00000bf0   0x00000bf0   0x00000028   Code   RO          130    .text.RevPark_Circle_Limitation  clarke_park.o
    0x00000c18   0x00000c18   0x00000026   Code   RO          124    .text.Rev_Park      clarke_park.o
    0x00000c3e   0x00000c3e   0x000000d0   Code   RO           94    .text.SMO_CalcElAngle  smo.o
    0x00000d0e   0x00000d0e   0x0000000c   Code   RO           92    .text.SMO_clear     smo.o
    0x00000d1a   0x00000d1a   0x00000002   PAD
    0x00000d1c   0x00000d1c   0x00000028   Code   RO           90    .text.SMO_init      smo.o
    0x00000d44   0x00000d44   0x00000094   Code   RO          126    .text.SVPWM         clarke_park.o
    0x00000dd8   0x00000dd8   0x0000001c   Code   RO          497    .text.SYS_AnalogModuleClockCmd  lks32mc08x_sys.o
    0x00000df4   0x00000df4   0x00000020   Code   RO          495    .text.SYS_ModuleClockCmd  lks32mc08x_sys.o
    0x00000e14   0x00000e14   0x00000014   Code   RO          499    .text.SYS_SoftResetModule  lks32mc08x_sys.o
    0x00000e28   0x00000e28   0x00000078   Code   RO           48    .text.Sys_State_Machine  task_scheduler.o
    0x00000ea0   0x00000ea0   0x00000108   Code   RO           50    .text.Sys_State_Run  task_scheduler.o
    0x00000fa8   0x00000fa8   0x00000044   Code   RO           23    .text.SystemInit    hardware_init.o
    0x00000fec   0x00000fec   0x00000008   Code   RO          128    .text.Trig_Functions  clarke_park.o
    0x00000ff4   0x00000ff4   0x00000144   Code   RO          271    .text.lks08x_dsp_arctan  lks32mc08x_dsp.o
    0x00001138   0x00001138   0x00000038   Code   RO          263    .text.lks08x_dsp_sin_cos  lks32mc08x_dsp.o
    0x00001170   0x00001170   0x00000030   Code   RO          277    .text.lks08x_dsp_sqrt  lks32mc08x_dsp.o
    0x000011a0   0x000011a0   0x00000018   Code   RO            2    .text.main          main.o
    0x000011b8   0x000011b8   0x00000074   Code   RO           37    .text.sys_init      sys_init.o
    0x0000122c   0x0000122c   0x0000003c   Code   RO          581    i.Read_Trim         lks32mc08x_nvr.lib(lks32mc08x_nvr.o)
    0x00001268   0x00001268   0x00000010   Data   RO          860    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00001278, Size: 0x00000608, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000        -       0x00000060   Zero   RW          726    .bss                c_p.l(libspace.o)
    0x20000060        -       0x00000001   Zero   RW          279    .bss.dsp_flg        lks32mc08x_dsp.o
    0x20000061   0x00001278   0x00000003   PAD
    0x20000064        -       0x000000a4   Zero   RW           75    .bss.struFOC_CtrProc  global_variable.o
    0x20000108        -       0x00000200   Zero   RW          572    HEAP                startup_lks32mc08x.o
    0x20000308        -       0x00000300   Zero   RW          571    STACK               startup_lks32mc08x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       300         20          0          0          0       3804   clarke_park.o
       300         44          0          0          0       4732   foc_drive.o
         0          0          0          0        164       2574   global_variable.o
       512         72          0          0          0       9068   hardware_init.o
       104         20          0          0          0       1380   interrupt.o
        44          4          0          0          0       3069   key.o
       260          0          0          0          0       4732   lks32mc08x_adc.o
       428         16          0          0          1       4600   lks32mc08x_dsp.o
       394         28          0          0          0       5273   lks32mc08x_gpio.o
       594         24          0          0          0       4833   lks32mc08x_mcpwm.o
       104         16          0          0          0       4615   lks32mc08x_sys.o
        24          4          0          0          0       1031   main.o
       178          0          0          0          0       1967   pid_regulators.o
       260         16          0          0          0       2643   smo.o
        68         32        192          0       1280        708   startup_lks32mc08x.o
       116         16          0          0          0       1445   sys_init.o
       384         16          0          0          0       4005   task_scheduler.o

    ----------------------------------------------------------------------
      4080        328        208          0       1448      60479   Object Totals
         0          0         16          0          0          0   (incl. Generated)
        10          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        64          0          0          0          0        108   rt_memclr.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        60         10          0          0          0       7496   lks32mc08x_nvr.o

    ----------------------------------------------------------------------
       440         26          0          0         96       8288   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       374         16          0          0         96        792   c_p.l
        60         10          0          0          0       7496   lks32mc08x_nvr.lib

    ----------------------------------------------------------------------
       440         26          0          0         96       8288   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      4520        354        208          0       1544      68195   Grand Totals
      4520        354        208          0       1544      68195   ELF Image Totals
      4520        354        208          0          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4728 (   4.62kB)
    Total RW  Size (RW Data + ZI Data)              1544 (   1.51kB)
    Total ROM Size (Code + RO Data + RW Data)       4728 (   4.62kB)

==============================================================================

